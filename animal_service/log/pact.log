I, [2016-01-20T17:02:16.932695 #37444]  INFO -- : Running example 'Verifying a pact between Zoo App and Animal Service Given an panda exists a request for an panda with GET /panda returns a response which has status code 500'
I, [2016-01-20T17:02:16.932834 #37444]  INFO -- : Sending GET request to path: "/panda" with headers: {}, see debug logs for body
D, [2016-01-20T17:02:16.932859 #37444] DEBUG -- : body :
I, [2016-01-20T17:02:16.997651 #37444]  INFO -- : Received response with status: 500, headers: {"Content-Type"=>"text/html", "Content-Length"=>"296296"}, see debug logs for body
D, [2016-01-20T17:02:16.998036 #37444] DEBUG -- : body: <!DOCTYPE html>
<html>
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <title>NameError at &#x2F;panda</title>

  <script type="text/javascript">
  //<!--
  function toggle(id) {
    var pre  = document.getElementById("pre-" + id);
    var post = document.getElementById("post-" + id);
    var context = document.getElementById("context-" + id);

    if (pre.style.display == 'block') {
      pre.style.display = 'none';
      post.style.display = 'none';
      context.style.background = "none";
    } else {
      pre.style.display = 'block';
      post.style.display = 'block';
      context.style.background = "#fffed9";
    }
  }

  function toggleBacktrace(){
    var bt = document.getElementById("backtrace");
    var toggler = document.getElementById("expando");

    if (bt.className == 'condensed') {
      bt.className = 'expanded';
      toggler.innerHTML = "(condense)";
    } else {
      bt.className = 'condensed';
      toggler.innerHTML = "(expand)";
    }
  }
  //-->
  </script>

<style type="text/css" media="screen">
  *                   {margin: 0; padding: 0; border: 0; outline: 0;}
  div.clear           {clear: both;}
  body                {background: #EEEEEE; margin: 0; padding: 0;
                       font-family: 'Lucida Grande', 'Lucida Sans Unicode',
                       'Garuda';}
  code                {font-family: 'Lucida Console', monospace;
                       font-size: 12px;}
  li                  {height: 18px;}
  ul                  {list-style: none; margin: 0; padding: 0;}
  ol:hover            {cursor: pointer;}
  ol li               {white-space: pre;}
  #explanation        {font-size: 12px; color: #666666;
                       margin: 20px 0 0 100px;}
/* WRAP */
  #wrap               {width: 1000px; background: #FFFFFF; margin: 0 auto;
                       padding: 30px 50px 20px 50px;
                       border-left: 1px solid #DDDDDD;
                       border-right: 1px solid #DDDDDD;}
/* HEADER */
  #header             {margin: 0 auto 25px auto;}
  #header img         {float: left;}
  #header #summary    {float: left; margin: 12px 0 0 20px; width:660px;
                       font-family: 'Lucida Grande', 'Lucida Sans Unicode';}
  h1                  {margin: 0; font-size: 36px; color: #981919;}
  h2                  {margin: 0; font-size: 22px; color: #333333;}
  #header ul          {margin: 0; font-size: 12px; color: #666666;}
  #header ul li strong{color: #444444;}
  #header ul li       {display: inline; padding: 0 10px;}
  #header ul li.first {padding-left: 0;}
  #header ul li.last  {border: 0; padding-right: 0;}
/* BODY */
  #backtrace,
  #get,
  #post,
  #cookies,
  #rack               {width: 980px; margin: 0 auto 10px auto;}
  p#nav               {float: right; font-size: 14px;}
/* BACKTRACE */
  a#expando           {float: left; padding-left: 5px; color: #666666;
                      font-size: 14px; text-decoration: none; cursor: pointer;}
  a#expando:hover     {text-decoration: underline;}
  h3                  {float: left; width: 100px; margin-bottom: 10px;
                       color: #981919; font-size: 14px; font-weight: bold;}
  #nav a              {color: #666666; text-decoration: none; padding: 0 5px;}
  #backtrace li.frame-info {background: #f7f7f7; padding-left: 10px;
                           font-size: 12px; color: #333333;}
  #backtrace ul       {list-style-position: outside; border: 1px solid #E9E9E9;
                       border-bottom: 0;}
  #backtrace ol       {width: 920px; margin-left: 50px;
                       font: 10px 'Lucida Console', monospace; color: #666666;}
  #backtrace ol li    {border: 0; border-left: 1px solid #E9E9E9;
                       padding: 2px 0;}
  #backtrace ol code  {font-size: 10px; color: #555555; padding-left: 5px;}
  #backtrace-ul li    {border-bottom: 1px solid #E9E9E9; height: auto;
                       padding: 3px 0;}
  #backtrace-ul .code {padding: 6px 0 4px 0;}
  #backtrace.condensed .system,
  #backtrace.condensed .framework {display:none;}
/* REQUEST DATA */
  p.no-data           {padding-top: 2px; font-size: 12px; color: #666666;}
  table.req           {width: 980px; text-align: left; font-size: 12px;
                       color: #666666; padding: 0; border-spacing: 0;
                       border: 1px solid #EEEEEE; border-bottom: 0;
                       border-left: 0;
                       clear:both}
  table.req tr th     {padding: 2px 10px; font-weight: bold;
                       background: #F7F7F7; border-bottom: 1px solid #EEEEEE;
                       border-left: 1px solid #EEEEEE;}
  table.req tr td     {padding: 2px 20px 2px 10px;
                       border-bottom: 1px solid #EEEEEE;
                       border-left: 1px solid #EEEEEE;}
/* HIDE PRE/POST CODE AT START */
  .pre-context,
  .post-context       {display: none;}

  table td.code       {width:750px}
  table td.code div   {width:750px;overflow:hidden}
</style>
</head>
<body>
  <div id="wrap">
    <div id="header">
      <img src="/__sinatra__/500.png" alt="application error" height="161" width="313" />
      <div id="summary">
        <h1><strong>NameError</strong> at <strong>&#x2F;panda
          </strong></h1>
        <h2>uninitialized constant AnimalRepository::DATABASE</h2>
        <ul>
          <li class="first"><strong>file:</strong> <code>
            animal_repository.rb</code></li>
          <li><strong>location:</strong> <code>get_panda
            </code></li>
          <li class="last"><strong>line:
            </strong> 7</li>
        </ul>
      </div>
      <div class="clear"></div>
    </div>

    <div id="backtrace" class='condensed'>
      <h3>BACKTRACE</h3>
      <p><a href="#" id="expando"
            onclick="toggleBacktrace(); return false">(expand)</a></p>
      <p id="nav"><strong>JUMP TO:</strong>
         <a href="#get-info">GET</a>
         <a href="#post-info">POST</a>
         <a href="#cookie-info">COOKIES</a>
         <a href="#env-info">ENV</a>
      </p>
      <div class="clear"></div>

      <ul id="backtrace-ul">

      
      
          

            <li class="frame-info app">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;tmp&#x2F;pactTest&#x2F;animal_service&#x2F;lib&#x2F;animal_repository.rb</code> in
                <code><strong>get_panda</strong></code>
            </li>

            <li class="code app">
              
              <ol start="1"
                  class="pre-context" id="pre-1"
                  onclick="toggle(1);">
                
                <li class="pre-context-line"><code>require &#x27;sequel&#x27;
</code></li>
                
                <li class="pre-context-line"><code>require_relative &#x27;db&#x27;
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>class AnimalRepository
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>  def self.get_panda
</code></li>
                
              </ol>
              

              <ol start="7" class="context" id="1"
                  onclick="toggle(1);">
                <li class="context-line" id="context-1"><code>    DATABASE[:animals]</code></li>
              </ol>

              
              <ol start="8" class="post-context"
                  id="post-1" onclick="toggle(1);">
                
                <li class="post-context-line"><code>  end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>end</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info app">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;tmp&#x2F;pactTest&#x2F;animal_service&#x2F;lib&#x2F;api.rb</code> in
                <code><strong>block in &lt;class:Api&gt;</strong></code>
            </li>

            <li class="code app">
              
              <ol start="1"
                  class="pre-context" id="pre-2"
                  onclick="toggle(2);">
                
                <li class="pre-context-line"><code>require &#x27;sinatra&#x2F;base&#x27;
</code></li>
                
                <li class="pre-context-line"><code>require_relative &#x27;animal_repository&#x27;
</code></li>
                
                <li class="pre-context-line"><code>require &#x27;json&#x27;
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>class Api &lt; Sinatra::Base
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>  get(&#x27;&#x2F;panda&#x27;) do
</code></li>
                
              </ol>
              

              <ol start="8" class="context" id="2"
                  onclick="toggle(2);">
                <li class="context-line" id="context-2"><code>    panda = JSON.parse(AnimalRepository.get_panda)</code></li>
              </ol>

              
              <ol start="9" class="post-context"
                  id="post-2" onclick="toggle(2);">
                
                <li class="post-context-line"><code>    panda
</code></li>
                
                <li class="post-context-line"><code>  end
</code></li>
                
                <li class="post-context-line"><code>end
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;.rbenv&#x2F;versions&#x2F;2.1.5&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;sinatra-1.4.6&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>call</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="1603"
                  class="pre-context" id="pre-3"
                  onclick="toggle(3);">
                
                <li class="pre-context-line"><code>        method_name             = &quot;#{verb} #{path}&quot;
</code></li>
                
                <li class="pre-context-line"><code>        unbound_method          = generate_method(method_name, &amp;block)
</code></li>
                
                <li class="pre-context-line"><code>        pattern, keys           = compile path
</code></li>
                
                <li class="pre-context-line"><code>        conditions, @conditions = @conditions, []
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>        wrapper                 = block.arity != 0 ?
</code></li>
                
                <li class="pre-context-line"><code>          proc { |a,p| unbound_method.bind(a).call(*p) } :
</code></li>
                
              </ol>
              

              <ol start="1610" class="context" id="3"
                  onclick="toggle(3);">
                <li class="context-line" id="context-3"><code>          proc { |a,p| unbound_method.bind(a).call }</code></li>
              </ol>

              
              <ol start="1611" class="post-context"
                  id="post-3" onclick="toggle(3);">
                
                <li class="post-context-line"><code>        wrapper.instance_variable_set(:@route_name, method_name)
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>        [ pattern, keys, conditions, wrapper ]
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      def compile(path)
</code></li>
                
                <li class="post-context-line"><code>        if path.respond_to? :to_str
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;.rbenv&#x2F;versions&#x2F;2.1.5&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;sinatra-1.4.6&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>block in compile!</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="1603"
                  class="pre-context" id="pre-4"
                  onclick="toggle(4);">
                
                <li class="pre-context-line"><code>        method_name             = &quot;#{verb} #{path}&quot;
</code></li>
                
                <li class="pre-context-line"><code>        unbound_method          = generate_method(method_name, &amp;block)
</code></li>
                
                <li class="pre-context-line"><code>        pattern, keys           = compile path
</code></li>
                
                <li class="pre-context-line"><code>        conditions, @conditions = @conditions, []
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>        wrapper                 = block.arity != 0 ?
</code></li>
                
                <li class="pre-context-line"><code>          proc { |a,p| unbound_method.bind(a).call(*p) } :
</code></li>
                
              </ol>
              

              <ol start="1610" class="context" id="4"
                  onclick="toggle(4);">
                <li class="context-line" id="context-4"><code>          proc { |a,p| unbound_method.bind(a).call }</code></li>
              </ol>

              
              <ol start="1611" class="post-context"
                  id="post-4" onclick="toggle(4);">
                
                <li class="post-context-line"><code>        wrapper.instance_variable_set(:@route_name, method_name)
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>        [ pattern, keys, conditions, wrapper ]
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      def compile(path)
</code></li>
                
                <li class="post-context-line"><code>        if path.respond_to? :to_str
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;.rbenv&#x2F;versions&#x2F;2.1.5&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;sinatra-1.4.6&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>[]</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="967"
                  class="pre-context" id="pre-5"
                  onclick="toggle(5);">
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Run routes defined on the class and all superclasses.
</code></li>
                
                <li class="pre-context-line"><code>    def route!(base = settings, pass_block = nil)
</code></li>
                
                <li class="pre-context-line"><code>      if routes = base.routes[@request.request_method]
</code></li>
                
                <li class="pre-context-line"><code>        routes.each do |pattern, keys, conditions, block|
</code></li>
                
                <li class="pre-context-line"><code>          returned_pass_block = process_route(pattern, keys, conditions) do |*args|
</code></li>
                
                <li class="pre-context-line"><code>            env[&#x27;sinatra.route&#x27;] = block.instance_variable_get(:@route_name)
</code></li>
                
              </ol>
              

              <ol start="974" class="context" id="5"
                  onclick="toggle(5);">
                <li class="context-line" id="context-5"><code>            route_eval { block[*args] }</code></li>
              </ol>

              
              <ol start="975" class="post-context"
                  id="post-5" onclick="toggle(5);">
                
                <li class="post-context-line"><code>          end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>          # don&#x27;t wipe out pass_block in superclass
</code></li>
                
                <li class="post-context-line"><code>          pass_block = returned_pass_block if returned_pass_block
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;.rbenv&#x2F;versions&#x2F;2.1.5&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;sinatra-1.4.6&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>block (3 levels) in route!</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="967"
                  class="pre-context" id="pre-6"
                  onclick="toggle(6);">
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Run routes defined on the class and all superclasses.
</code></li>
                
                <li class="pre-context-line"><code>    def route!(base = settings, pass_block = nil)
</code></li>
                
                <li class="pre-context-line"><code>      if routes = base.routes[@request.request_method]
</code></li>
                
                <li class="pre-context-line"><code>        routes.each do |pattern, keys, conditions, block|
</code></li>
                
                <li class="pre-context-line"><code>          returned_pass_block = process_route(pattern, keys, conditions) do |*args|
</code></li>
                
                <li class="pre-context-line"><code>            env[&#x27;sinatra.route&#x27;] = block.instance_variable_get(:@route_name)
</code></li>
                
              </ol>
              

              <ol start="974" class="context" id="6"
                  onclick="toggle(6);">
                <li class="context-line" id="context-6"><code>            route_eval { block[*args] }</code></li>
              </ol>

              
              <ol start="975" class="post-context"
                  id="post-6" onclick="toggle(6);">
                
                <li class="post-context-line"><code>          end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>          # don&#x27;t wipe out pass_block in superclass
</code></li>
                
                <li class="post-context-line"><code>          pass_block = returned_pass_block if returned_pass_block
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;.rbenv&#x2F;versions&#x2F;2.1.5&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;sinatra-1.4.6&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>route_eval</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="986"
                  class="pre-context" id="pre-7"
                  onclick="toggle(7);">
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      route_eval(&amp;pass_block) if pass_block
</code></li>
                
                <li class="pre-context-line"><code>      route_missing
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Run a route block and throw :halt with the result.
</code></li>
                
                <li class="pre-context-line"><code>    def route_eval
</code></li>
                
              </ol>
              

              <ol start="993" class="context" id="7"
                  onclick="toggle(7);">
                <li class="context-line" id="context-7"><code>      throw :halt, yield</code></li>
              </ol>

              
              <ol start="994" class="post-context"
                  id="post-7" onclick="toggle(7);">
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    # If the current request matches pattern and conditions, fill params
</code></li>
                
                <li class="post-context-line"><code>    # with keys and call the given block.
</code></li>
                
                <li class="post-context-line"><code>    # Revert params afterwards.
</code></li>
                
                <li class="post-context-line"><code>    #
</code></li>
                
                <li class="post-context-line"><code>    # Returns pass block.
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;.rbenv&#x2F;versions&#x2F;2.1.5&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;sinatra-1.4.6&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>block (2 levels) in route!</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="967"
                  class="pre-context" id="pre-8"
                  onclick="toggle(8);">
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Run routes defined on the class and all superclasses.
</code></li>
                
                <li class="pre-context-line"><code>    def route!(base = settings, pass_block = nil)
</code></li>
                
                <li class="pre-context-line"><code>      if routes = base.routes[@request.request_method]
</code></li>
                
                <li class="pre-context-line"><code>        routes.each do |pattern, keys, conditions, block|
</code></li>
                
                <li class="pre-context-line"><code>          returned_pass_block = process_route(pattern, keys, conditions) do |*args|
</code></li>
                
                <li class="pre-context-line"><code>            env[&#x27;sinatra.route&#x27;] = block.instance_variable_get(:@route_name)
</code></li>
                
              </ol>
              

              <ol start="974" class="context" id="8"
                  onclick="toggle(8);">
                <li class="context-line" id="context-8"><code>            route_eval { block[*args] }</code></li>
              </ol>

              
              <ol start="975" class="post-context"
                  id="post-8" onclick="toggle(8);">
                
                <li class="post-context-line"><code>          end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>          # don&#x27;t wipe out pass_block in superclass
</code></li>
                
                <li class="post-context-line"><code>          pass_block = returned_pass_block if returned_pass_block
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;.rbenv&#x2F;versions&#x2F;2.1.5&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;sinatra-1.4.6&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>block in process_route</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="1007"
                  class="pre-context" id="pre-9"
                  onclick="toggle(9);">
                
                <li class="pre-context-line"><code>      if values.any?
</code></li>
                
                <li class="pre-context-line"><code>        original, @params = params, params.merge(&#x27;splat&#x27; =&gt; [], &#x27;captures&#x27; =&gt; values)
</code></li>
                
                <li class="pre-context-line"><code>        keys.zip(values) { |k,v| Array === @params[k] ? @params[k] &lt;&lt; v : @params[k] = v if v }
</code></li>
                
                <li class="pre-context-line"><code>      end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      catch(:pass) do
</code></li>
                
                <li class="pre-context-line"><code>        conditions.each { |c| throw :pass if c.bind(self).call == false }
</code></li>
                
              </ol>
              

              <ol start="1014" class="context" id="9"
                  onclick="toggle(9);">
                <li class="context-line" id="context-9"><code>        block ? block[self, values] : yield(self, values)</code></li>
              </ol>

              
              <ol start="1015" class="post-context"
                  id="post-9" onclick="toggle(9);">
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>    ensure
</code></li>
                
                <li class="post-context-line"><code>      @params = original if original
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    # No matching route was found or all routes passed. The default
</code></li>
                
                <li class="post-context-line"><code>    # implementation is to forward the request downstream when running
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;.rbenv&#x2F;versions&#x2F;2.1.5&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;sinatra-1.4.6&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>catch</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="1005"
                  class="pre-context" id="pre-10"
                  onclick="toggle(10);">
                
                <li class="pre-context-line"><code>      values += match.captures.map! { |v| force_encoding URI_INSTANCE.unescape(v) if v }
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      if values.any?
</code></li>
                
                <li class="pre-context-line"><code>        original, @params = params, params.merge(&#x27;splat&#x27; =&gt; [], &#x27;captures&#x27; =&gt; values)
</code></li>
                
                <li class="pre-context-line"><code>        keys.zip(values) { |k,v| Array === @params[k] ? @params[k] &lt;&lt; v : @params[k] = v if v }
</code></li>
                
                <li class="pre-context-line"><code>      end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
              </ol>
              

              <ol start="1012" class="context" id="10"
                  onclick="toggle(10);">
                <li class="context-line" id="context-10"><code>      catch(:pass) do</code></li>
              </ol>

              
              <ol start="1013" class="post-context"
                  id="post-10" onclick="toggle(10);">
                
                <li class="post-context-line"><code>        conditions.each { |c| throw :pass if c.bind(self).call == false }
</code></li>
                
                <li class="post-context-line"><code>        block ? block[self, values] : yield(self, values)
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>    ensure
</code></li>
                
                <li class="post-context-line"><code>      @params = original if original
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;.rbenv&#x2F;versions&#x2F;2.1.5&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;sinatra-1.4.6&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>process_route</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="1005"
                  class="pre-context" id="pre-11"
                  onclick="toggle(11);">
                
                <li class="pre-context-line"><code>      values += match.captures.map! { |v| force_encoding URI_INSTANCE.unescape(v) if v }
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      if values.any?
</code></li>
                
                <li class="pre-context-line"><code>        original, @params = params, params.merge(&#x27;splat&#x27; =&gt; [], &#x27;captures&#x27; =&gt; values)
</code></li>
                
                <li class="pre-context-line"><code>        keys.zip(values) { |k,v| Array === @params[k] ? @params[k] &lt;&lt; v : @params[k] = v if v }
</code></li>
                
                <li class="pre-context-line"><code>      end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
              </ol>
              

              <ol start="1012" class="context" id="11"
                  onclick="toggle(11);">
                <li class="context-line" id="context-11"><code>      catch(:pass) do</code></li>
              </ol>

              
              <ol start="1013" class="post-context"
                  id="post-11" onclick="toggle(11);">
                
                <li class="post-context-line"><code>        conditions.each { |c| throw :pass if c.bind(self).call == false }
</code></li>
                
                <li class="post-context-line"><code>        block ? block[self, values] : yield(self, values)
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>    ensure
</code></li>
                
                <li class="post-context-line"><code>      @params = original if original
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;.rbenv&#x2F;versions&#x2F;2.1.5&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;sinatra-1.4.6&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>block in route!</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="965"
                  class="pre-context" id="pre-12"
                  onclick="toggle(12);">
                
                <li class="pre-context-line"><code>      base.filters[type].each { |args| process_route(*args) }
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Run routes defined on the class and all superclasses.
</code></li>
                
                <li class="pre-context-line"><code>    def route!(base = settings, pass_block = nil)
</code></li>
                
                <li class="pre-context-line"><code>      if routes = base.routes[@request.request_method]
</code></li>
                
                <li class="pre-context-line"><code>        routes.each do |pattern, keys, conditions, block|
</code></li>
                
              </ol>
              

              <ol start="972" class="context" id="12"
                  onclick="toggle(12);">
                <li class="context-line" id="context-12"><code>          returned_pass_block = process_route(pattern, keys, conditions) do |*args|</code></li>
              </ol>

              
              <ol start="973" class="post-context"
                  id="post-12" onclick="toggle(12);">
                
                <li class="post-context-line"><code>            env[&#x27;sinatra.route&#x27;] = block.instance_variable_get(:@route_name)
</code></li>
                
                <li class="post-context-line"><code>            route_eval { block[*args] }
</code></li>
                
                <li class="post-context-line"><code>          end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>          # don&#x27;t wipe out pass_block in superclass
</code></li>
                
                <li class="post-context-line"><code>          pass_block = returned_pass_block if returned_pass_block
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;.rbenv&#x2F;versions&#x2F;2.1.5&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;sinatra-1.4.6&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>each</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="964"
                  class="pre-context" id="pre-13"
                  onclick="toggle(13);">
                
                <li class="pre-context-line"><code>      filter! type, base.superclass if base.superclass.respond_to?(:filters)
</code></li>
                
                <li class="pre-context-line"><code>      base.filters[type].each { |args| process_route(*args) }
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Run routes defined on the class and all superclasses.
</code></li>
                
                <li class="pre-context-line"><code>    def route!(base = settings, pass_block = nil)
</code></li>
                
                <li class="pre-context-line"><code>      if routes = base.routes[@request.request_method]
</code></li>
                
              </ol>
              

              <ol start="971" class="context" id="13"
                  onclick="toggle(13);">
                <li class="context-line" id="context-13"><code>        routes.each do |pattern, keys, conditions, block|</code></li>
              </ol>

              
              <ol start="972" class="post-context"
                  id="post-13" onclick="toggle(13);">
                
                <li class="post-context-line"><code>          returned_pass_block = process_route(pattern, keys, conditions) do |*args|
</code></li>
                
                <li class="post-context-line"><code>            env[&#x27;sinatra.route&#x27;] = block.instance_variable_get(:@route_name)
</code></li>
                
                <li class="post-context-line"><code>            route_eval { block[*args] }
</code></li>
                
                <li class="post-context-line"><code>          end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>          # don&#x27;t wipe out pass_block in superclass
</code></li>
                
                <li class="post-context-line"><code>          pass_block = returned_pass_block if returned_pass_block
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;.rbenv&#x2F;versions&#x2F;2.1.5&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;sinatra-1.4.6&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>route!</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="964"
                  class="pre-context" id="pre-14"
                  onclick="toggle(14);">
                
                <li class="pre-context-line"><code>      filter! type, base.superclass if base.superclass.respond_to?(:filters)
</code></li>
                
                <li class="pre-context-line"><code>      base.filters[type].each { |args| process_route(*args) }
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Run routes defined on the class and all superclasses.
</code></li>
                
                <li class="pre-context-line"><code>    def route!(base = settings, pass_block = nil)
</code></li>
                
                <li class="pre-context-line"><code>      if routes = base.routes[@request.request_method]
</code></li>
                
              </ol>
              

              <ol start="971" class="context" id="14"
                  onclick="toggle(14);">
                <li class="context-line" id="context-14"><code>        routes.each do |pattern, keys, conditions, block|</code></li>
              </ol>

              
              <ol start="972" class="post-context"
                  id="post-14" onclick="toggle(14);">
                
                <li class="post-context-line"><code>          returned_pass_block = process_route(pattern, keys, conditions) do |*args|
</code></li>
                
                <li class="post-context-line"><code>            env[&#x27;sinatra.route&#x27;] = block.instance_variable_get(:@route_name)
</code></li>
                
                <li class="post-context-line"><code>            route_eval { block[*args] }
</code></li>
                
                <li class="post-context-line"><code>          end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>          # don&#x27;t wipe out pass_block in superclass
</code></li>
                
                <li class="post-context-line"><code>          pass_block = returned_pass_block if returned_pass_block
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;.rbenv&#x2F;versions&#x2F;2.1.5&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;sinatra-1.4.6&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>block in dispatch!</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="1077"
                  class="pre-context" id="pre-15"
                  onclick="toggle(15);">
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Dispatch a request with error handling.
</code></li>
                
                <li class="pre-context-line"><code>    def dispatch!
</code></li>
                
                <li class="pre-context-line"><code>      invoke do
</code></li>
                
                <li class="pre-context-line"><code>        static! if settings.static? &amp;&amp; (request.get? || request.head?)
</code></li>
                
                <li class="pre-context-line"><code>        filter! :before
</code></li>
                
              </ol>
              

              <ol start="1084" class="context" id="15"
                  onclick="toggle(15);">
                <li class="context-line" id="context-15"><code>        route!</code></li>
              </ol>

              
              <ol start="1085" class="post-context"
                  id="post-15" onclick="toggle(15);">
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>    rescue ::Exception =&gt; boom
</code></li>
                
                <li class="post-context-line"><code>      invoke { handle_exception!(boom) }
</code></li>
                
                <li class="post-context-line"><code>    ensure
</code></li>
                
                <li class="post-context-line"><code>      begin
</code></li>
                
                <li class="post-context-line"><code>        filter! :after unless env[&#x27;sinatra.static_file&#x27;]
</code></li>
                
                <li class="post-context-line"><code>      rescue ::Exception =&gt; boom
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;.rbenv&#x2F;versions&#x2F;2.1.5&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;sinatra-1.4.6&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>block in invoke</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="1059"
                  class="pre-context" id="pre-16"
                  onclick="toggle(16);">
                
                <li class="pre-context-line"><code>    # Creates a Hash with indifferent access.
</code></li>
                
                <li class="pre-context-line"><code>    def indifferent_hash
</code></li>
                
                <li class="pre-context-line"><code>      Hash.new {|hash,key| hash[key.to_s] if Symbol === key }
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Run the block with &#x27;throw :halt&#x27; support and apply result to the response.
</code></li>
                
                <li class="pre-context-line"><code>    def invoke
</code></li>
                
              </ol>
              

              <ol start="1066" class="context" id="16"
                  onclick="toggle(16);">
                <li class="context-line" id="context-16"><code>      res = catch(:halt) { yield }</code></li>
              </ol>

              
              <ol start="1067" class="post-context"
                  id="post-16" onclick="toggle(16);">
                
                <li class="post-context-line"><code>      res = [res] if Fixnum === res or String === res
</code></li>
                
                <li class="post-context-line"><code>      if Array === res and Fixnum === res.first
</code></li>
                
                <li class="post-context-line"><code>        res = res.dup
</code></li>
                
                <li class="post-context-line"><code>        status(res.shift)
</code></li>
                
                <li class="post-context-line"><code>        body(res.pop)
</code></li>
                
                <li class="post-context-line"><code>        headers(*res)
</code></li>
                
                <li class="post-context-line"><code>      elsif res.respond_to? :each
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;.rbenv&#x2F;versions&#x2F;2.1.5&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;sinatra-1.4.6&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>catch</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="1059"
                  class="pre-context" id="pre-17"
                  onclick="toggle(17);">
                
                <li class="pre-context-line"><code>    # Creates a Hash with indifferent access.
</code></li>
                
                <li class="pre-context-line"><code>    def indifferent_hash
</code></li>
                
                <li class="pre-context-line"><code>      Hash.new {|hash,key| hash[key.to_s] if Symbol === key }
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Run the block with &#x27;throw :halt&#x27; support and apply result to the response.
</code></li>
                
                <li class="pre-context-line"><code>    def invoke
</code></li>
                
              </ol>
              

              <ol start="1066" class="context" id="17"
                  onclick="toggle(17);">
                <li class="context-line" id="context-17"><code>      res = catch(:halt) { yield }</code></li>
              </ol>

              
              <ol start="1067" class="post-context"
                  id="post-17" onclick="toggle(17);">
                
                <li class="post-context-line"><code>      res = [res] if Fixnum === res or String === res
</code></li>
                
                <li class="post-context-line"><code>      if Array === res and Fixnum === res.first
</code></li>
                
                <li class="post-context-line"><code>        res = res.dup
</code></li>
                
                <li class="post-context-line"><code>        status(res.shift)
</code></li>
                
                <li class="post-context-line"><code>        body(res.pop)
</code></li>
                
                <li class="post-context-line"><code>        headers(*res)
</code></li>
                
                <li class="post-context-line"><code>      elsif res.respond_to? :each
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;.rbenv&#x2F;versions&#x2F;2.1.5&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;sinatra-1.4.6&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>invoke</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="1059"
                  class="pre-context" id="pre-18"
                  onclick="toggle(18);">
                
                <li class="pre-context-line"><code>    # Creates a Hash with indifferent access.
</code></li>
                
                <li class="pre-context-line"><code>    def indifferent_hash
</code></li>
                
                <li class="pre-context-line"><code>      Hash.new {|hash,key| hash[key.to_s] if Symbol === key }
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Run the block with &#x27;throw :halt&#x27; support and apply result to the response.
</code></li>
                
                <li class="pre-context-line"><code>    def invoke
</code></li>
                
              </ol>
              

              <ol start="1066" class="context" id="18"
                  onclick="toggle(18);">
                <li class="context-line" id="context-18"><code>      res = catch(:halt) { yield }</code></li>
              </ol>

              
              <ol start="1067" class="post-context"
                  id="post-18" onclick="toggle(18);">
                
                <li class="post-context-line"><code>      res = [res] if Fixnum === res or String === res
</code></li>
                
                <li class="post-context-line"><code>      if Array === res and Fixnum === res.first
</code></li>
                
                <li class="post-context-line"><code>        res = res.dup
</code></li>
                
                <li class="post-context-line"><code>        status(res.shift)
</code></li>
                
                <li class="post-context-line"><code>        body(res.pop)
</code></li>
                
                <li class="post-context-line"><code>        headers(*res)
</code></li>
                
                <li class="post-context-line"><code>      elsif res.respond_to? :each
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;.rbenv&#x2F;versions&#x2F;2.1.5&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;sinatra-1.4.6&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>dispatch!</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="1074"
                  class="pre-context" id="pre-19"
                  onclick="toggle(19);">
                
                <li class="pre-context-line"><code>        body res
</code></li>
                
                <li class="pre-context-line"><code>      end
</code></li>
                
                <li class="pre-context-line"><code>      nil # avoid double setting the same response tuple twice
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Dispatch a request with error handling.
</code></li>
                
                <li class="pre-context-line"><code>    def dispatch!
</code></li>
                
              </ol>
              

              <ol start="1081" class="context" id="19"
                  onclick="toggle(19);">
                <li class="context-line" id="context-19"><code>      invoke do</code></li>
              </ol>

              
              <ol start="1082" class="post-context"
                  id="post-19" onclick="toggle(19);">
                
                <li class="post-context-line"><code>        static! if settings.static? &amp;&amp; (request.get? || request.head?)
</code></li>
                
                <li class="post-context-line"><code>        filter! :before
</code></li>
                
                <li class="post-context-line"><code>        route!
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>    rescue ::Exception =&gt; boom
</code></li>
                
                <li class="post-context-line"><code>      invoke { handle_exception!(boom) }
</code></li>
                
                <li class="post-context-line"><code>    ensure
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;.rbenv&#x2F;versions&#x2F;2.1.5&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;sinatra-1.4.6&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>block in call!</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="899"
                  class="pre-context" id="pre-20"
                  onclick="toggle(20);">
                
                <li class="pre-context-line"><code>      @request  = Request.new(env)
</code></li>
                
                <li class="pre-context-line"><code>      @response = Response.new
</code></li>
                
                <li class="pre-context-line"><code>      @params   = indifferent_params(@request.params)
</code></li>
                
                <li class="pre-context-line"><code>      template_cache.clear if settings.reload_templates
</code></li>
                
                <li class="pre-context-line"><code>      force_encoding(@params)
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      @response[&#x27;Content-Type&#x27;] = nil
</code></li>
                
              </ol>
              

              <ol start="906" class="context" id="20"
                  onclick="toggle(20);">
                <li class="context-line" id="context-20"><code>      invoke { dispatch! }</code></li>
              </ol>

              
              <ol start="907" class="post-context"
                  id="post-20" onclick="toggle(20);">
                
                <li class="post-context-line"><code>      invoke { error_block!(response.status) } unless @env[&#x27;sinatra.error&#x27;]
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      unless @response[&#x27;Content-Type&#x27;]
</code></li>
                
                <li class="post-context-line"><code>        if Array === body and body[0].respond_to? :content_type
</code></li>
                
                <li class="post-context-line"><code>          content_type body[0].content_type
</code></li>
                
                <li class="post-context-line"><code>        else
</code></li>
                
                <li class="post-context-line"><code>          content_type :html
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;.rbenv&#x2F;versions&#x2F;2.1.5&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;sinatra-1.4.6&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>block in invoke</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="1059"
                  class="pre-context" id="pre-21"
                  onclick="toggle(21);">
                
                <li class="pre-context-line"><code>    # Creates a Hash with indifferent access.
</code></li>
                
                <li class="pre-context-line"><code>    def indifferent_hash
</code></li>
                
                <li class="pre-context-line"><code>      Hash.new {|hash,key| hash[key.to_s] if Symbol === key }
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Run the block with &#x27;throw :halt&#x27; support and apply result to the response.
</code></li>
                
                <li class="pre-context-line"><code>    def invoke
</code></li>
                
              </ol>
              

              <ol start="1066" class="context" id="21"
                  onclick="toggle(21);">
                <li class="context-line" id="context-21"><code>      res = catch(:halt) { yield }</code></li>
              </ol>

              
              <ol start="1067" class="post-context"
                  id="post-21" onclick="toggle(21);">
                
                <li class="post-context-line"><code>      res = [res] if Fixnum === res or String === res
</code></li>
                
                <li class="post-context-line"><code>      if Array === res and Fixnum === res.first
</code></li>
                
                <li class="post-context-line"><code>        res = res.dup
</code></li>
                
                <li class="post-context-line"><code>        status(res.shift)
</code></li>
                
                <li class="post-context-line"><code>        body(res.pop)
</code></li>
                
                <li class="post-context-line"><code>        headers(*res)
</code></li>
                
                <li class="post-context-line"><code>      elsif res.respond_to? :each
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;.rbenv&#x2F;versions&#x2F;2.1.5&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;sinatra-1.4.6&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>catch</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="1059"
                  class="pre-context" id="pre-22"
                  onclick="toggle(22);">
                
                <li class="pre-context-line"><code>    # Creates a Hash with indifferent access.
</code></li>
                
                <li class="pre-context-line"><code>    def indifferent_hash
</code></li>
                
                <li class="pre-context-line"><code>      Hash.new {|hash,key| hash[key.to_s] if Symbol === key }
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Run the block with &#x27;throw :halt&#x27; support and apply result to the response.
</code></li>
                
                <li class="pre-context-line"><code>    def invoke
</code></li>
                
              </ol>
              

              <ol start="1066" class="context" id="22"
                  onclick="toggle(22);">
                <li class="context-line" id="context-22"><code>      res = catch(:halt) { yield }</code></li>
              </ol>

              
              <ol start="1067" class="post-context"
                  id="post-22" onclick="toggle(22);">
                
                <li class="post-context-line"><code>      res = [res] if Fixnum === res or String === res
</code></li>
                
                <li class="post-context-line"><code>      if Array === res and Fixnum === res.first
</code></li>
                
                <li class="post-context-line"><code>        res = res.dup
</code></li>
                
                <li class="post-context-line"><code>        status(res.shift)
</code></li>
                
                <li class="post-context-line"><code>        body(res.pop)
</code></li>
                
                <li class="post-context-line"><code>        headers(*res)
</code></li>
                
                <li class="post-context-line"><code>      elsif res.respond_to? :each
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;.rbenv&#x2F;versions&#x2F;2.1.5&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;sinatra-1.4.6&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>invoke</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="1059"
                  class="pre-context" id="pre-23"
                  onclick="toggle(23);">
                
                <li class="pre-context-line"><code>    # Creates a Hash with indifferent access.
</code></li>
                
                <li class="pre-context-line"><code>    def indifferent_hash
</code></li>
                
                <li class="pre-context-line"><code>      Hash.new {|hash,key| hash[key.to_s] if Symbol === key }
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Run the block with &#x27;throw :halt&#x27; support and apply result to the response.
</code></li>
                
                <li class="pre-context-line"><code>    def invoke
</code></li>
                
              </ol>
              

              <ol start="1066" class="context" id="23"
                  onclick="toggle(23);">
                <li class="context-line" id="context-23"><code>      res = catch(:halt) { yield }</code></li>
              </ol>

              
              <ol start="1067" class="post-context"
                  id="post-23" onclick="toggle(23);">
                
                <li class="post-context-line"><code>      res = [res] if Fixnum === res or String === res
</code></li>
                
                <li class="post-context-line"><code>      if Array === res and Fixnum === res.first
</code></li>
                
                <li class="post-context-line"><code>        res = res.dup
</code></li>
                
                <li class="post-context-line"><code>        status(res.shift)
</code></li>
                
                <li class="post-context-line"><code>        body(res.pop)
</code></li>
                
                <li class="post-context-line"><code>        headers(*res)
</code></li>
                
                <li class="post-context-line"><code>      elsif res.respond_to? :each
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;.rbenv&#x2F;versions&#x2F;2.1.5&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;sinatra-1.4.6&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>call!</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="899"
                  class="pre-context" id="pre-24"
                  onclick="toggle(24);">
                
                <li class="pre-context-line"><code>      @request  = Request.new(env)
</code></li>
                
                <li class="pre-context-line"><code>      @response = Response.new
</code></li>
                
                <li class="pre-context-line"><code>      @params   = indifferent_params(@request.params)
</code></li>
                
                <li class="pre-context-line"><code>      template_cache.clear if settings.reload_templates
</code></li>
                
                <li class="pre-context-line"><code>      force_encoding(@params)
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      @response[&#x27;Content-Type&#x27;] = nil
</code></li>
                
              </ol>
              

              <ol start="906" class="context" id="24"
                  onclick="toggle(24);">
                <li class="context-line" id="context-24"><code>      invoke { dispatch! }</code></li>
              </ol>

              
              <ol start="907" class="post-context"
                  id="post-24" onclick="toggle(24);">
                
                <li class="post-context-line"><code>      invoke { error_block!(response.status) } unless @env[&#x27;sinatra.error&#x27;]
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      unless @response[&#x27;Content-Type&#x27;]
</code></li>
                
                <li class="post-context-line"><code>        if Array === body and body[0].respond_to? :content_type
</code></li>
                
                <li class="post-context-line"><code>          content_type body[0].content_type
</code></li>
                
                <li class="post-context-line"><code>        else
</code></li>
                
                <li class="post-context-line"><code>          content_type :html
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;.rbenv&#x2F;versions&#x2F;2.1.5&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;sinatra-1.4.6&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>call</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="887"
                  class="pre-context" id="pre-25"
                  onclick="toggle(25);">
                
                <li class="pre-context-line"><code>      @app = app
</code></li>
                
                <li class="pre-context-line"><code>      @template_cache = Tilt::Cache.new
</code></li>
                
                <li class="pre-context-line"><code>      yield self if block_given?
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Rack call interface.
</code></li>
                
                <li class="pre-context-line"><code>    def call(env)
</code></li>
                
              </ol>
              

              <ol start="894" class="context" id="25"
                  onclick="toggle(25);">
                <li class="context-line" id="context-25"><code>      dup.call!(env)</code></li>
              </ol>

              
              <ol start="895" class="post-context"
                  id="post-25" onclick="toggle(25);">
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    def call!(env) # :nodoc:
</code></li>
                
                <li class="post-context-line"><code>      @env      = env
</code></li>
                
                <li class="post-context-line"><code>      @request  = Request.new(env)
</code></li>
                
                <li class="post-context-line"><code>      @response = Response.new
</code></li>
                
                <li class="post-context-line"><code>      @params   = indifferent_params(@request.params)
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;.rbenv&#x2F;versions&#x2F;2.1.5&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;rack-protection-1.5.3&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;xss_header.rb</code> in
                <code><strong>call</strong></code>
            </li>

            <li class="code system">
              
              <ol start="11"
                  class="pre-context" id="pre-26"
                  onclick="toggle(26);">
                
                <li class="pre-context-line"><code>    #
</code></li>
                
                <li class="pre-context-line"><code>    # Options:
</code></li>
                
                <li class="pre-context-line"><code>    # xss_mode:: How the browser should prevent the attack (default: :block)
</code></li>
                
                <li class="pre-context-line"><code>    class XSSHeader &lt; Base
</code></li>
                
                <li class="pre-context-line"><code>      default_options :xss_mode =&gt; :block, :nosniff =&gt; true
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      def call(env)
</code></li>
                
              </ol>
              

              <ol start="18" class="context" id="26"
                  onclick="toggle(26);">
                <li class="context-line" id="context-26"><code>        status, headers, body = @app.call(env)</code></li>
              </ol>

              
              <ol start="19" class="post-context"
                  id="post-26" onclick="toggle(26);">
                
                <li class="post-context-line"><code>        headers[&#x27;X-XSS-Protection&#x27;]       ||= &quot;1; mode=#{options[:xss_mode]}&quot; if html? headers
</code></li>
                
                <li class="post-context-line"><code>        headers[&#x27;X-Content-Type-Options&#x27;] ||= &#x27;nosniff&#x27;                       if options[:nosniff]
</code></li>
                
                <li class="post-context-line"><code>        [status, headers, body]
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>  end
</code></li>
                
                <li class="post-context-line"><code>end
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;.rbenv&#x2F;versions&#x2F;2.1.5&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;rack-protection-1.5.3&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;path_traversal.rb</code> in
                <code><strong>call</strong></code>
            </li>

            <li class="code system">
              
              <ol start="9"
                  class="pre-context" id="pre-27"
                  onclick="toggle(27);">
                
                <li class="pre-context-line"><code>    #
</code></li>
                
                <li class="pre-context-line"><code>    # Unescapes &#x27;&#x2F;&#x27; and &#x27;.&#x27;, expands +path_info+.
</code></li>
                
                <li class="pre-context-line"><code>    # Thus &lt;tt&gt;GET &#x2F;foo&#x2F;%2e%2e%2fbar&lt;&#x2F;tt&gt; becomes &lt;tt&gt;GET &#x2F;bar&lt;&#x2F;tt&gt;.
</code></li>
                
                <li class="pre-context-line"><code>    class PathTraversal &lt; Base
</code></li>
                
                <li class="pre-context-line"><code>      def call(env)
</code></li>
                
                <li class="pre-context-line"><code>        path_was         = env[&quot;PATH_INFO&quot;]
</code></li>
                
                <li class="pre-context-line"><code>        env[&quot;PATH_INFO&quot;] = cleanup path_was if path_was &amp;&amp; !path_was.empty?
</code></li>
                
              </ol>
              

              <ol start="16" class="context" id="27"
                  onclick="toggle(27);">
                <li class="context-line" id="context-27"><code>        app.call env</code></li>
              </ol>

              
              <ol start="17" class="post-context"
                  id="post-27" onclick="toggle(27);">
                
                <li class="post-context-line"><code>      ensure
</code></li>
                
                <li class="post-context-line"><code>        env[&quot;PATH_INFO&quot;] = path_was
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      def cleanup(path)
</code></li>
                
                <li class="post-context-line"><code>        if path.respond_to?(:encoding)
</code></li>
                
                <li class="post-context-line"><code>          # Ruby 1.9+ M17N
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;.rbenv&#x2F;versions&#x2F;2.1.5&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;rack-protection-1.5.3&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;json_csrf.rb</code> in
                <code><strong>call</strong></code>
            </li>

            <li class="code system">
              
              <ol start="11"
                  class="pre-context" id="pre-28"
                  onclick="toggle(28);">
                
                <li class="pre-context-line"><code>    # Array prototype has been patched to track data. Checks the referrer
</code></li>
                
                <li class="pre-context-line"><code>    # even on GET requests if the content type is JSON.
</code></li>
                
                <li class="pre-context-line"><code>    class JsonCsrf &lt; Base
</code></li>
                
                <li class="pre-context-line"><code>      alias react deny
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      def call(env)
</code></li>
                
                <li class="pre-context-line"><code>        request               = Request.new(env)
</code></li>
                
              </ol>
              

              <ol start="18" class="context" id="28"
                  onclick="toggle(28);">
                <li class="context-line" id="context-28"><code>        status, headers, body = app.call(env)</code></li>
              </ol>

              
              <ol start="19" class="post-context"
                  id="post-28" onclick="toggle(28);">
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>        if has_vector? request, headers
</code></li>
                
                <li class="post-context-line"><code>          warn env, &quot;attack prevented by #{self.class}&quot;
</code></li>
                
                <li class="post-context-line"><code>          react(env) or [status, headers, body]
</code></li>
                
                <li class="post-context-line"><code>        else
</code></li>
                
                <li class="post-context-line"><code>          [status, headers, body]
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;.rbenv&#x2F;versions&#x2F;2.1.5&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;rack-protection-1.5.3&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;base.rb</code> in
                <code><strong>call</strong></code>
            </li>

            <li class="code system">
              
              <ol start="42"
                  class="pre-context" id="pre-29"
                  onclick="toggle(29);">
                
                <li class="pre-context-line"><code>      end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      def call(env)
</code></li>
                
                <li class="pre-context-line"><code>        unless accepts? env
</code></li>
                
                <li class="pre-context-line"><code>          instrument env
</code></li>
                
                <li class="pre-context-line"><code>          result = react env
</code></li>
                
                <li class="pre-context-line"><code>        end
</code></li>
                
              </ol>
              

              <ol start="49" class="context" id="29"
                  onclick="toggle(29);">
                <li class="context-line" id="context-29"><code>        result or app.call(env)</code></li>
              </ol>

              
              <ol start="50" class="post-context"
                  id="post-29" onclick="toggle(29);">
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      def react(env)
</code></li>
                
                <li class="post-context-line"><code>        result = send(options[:reaction], env)
</code></li>
                
                <li class="post-context-line"><code>        result if Array === result and result.size == 3
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;.rbenv&#x2F;versions&#x2F;2.1.5&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;rack-protection-1.5.3&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;base.rb</code> in
                <code><strong>call</strong></code>
            </li>

            <li class="code system">
              
              <ol start="42"
                  class="pre-context" id="pre-30"
                  onclick="toggle(30);">
                
                <li class="pre-context-line"><code>      end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      def call(env)
</code></li>
                
                <li class="pre-context-line"><code>        unless accepts? env
</code></li>
                
                <li class="pre-context-line"><code>          instrument env
</code></li>
                
                <li class="pre-context-line"><code>          result = react env
</code></li>
                
                <li class="pre-context-line"><code>        end
</code></li>
                
              </ol>
              

              <ol start="49" class="context" id="30"
                  onclick="toggle(30);">
                <li class="context-line" id="context-30"><code>        result or app.call(env)</code></li>
              </ol>

              
              <ol start="50" class="post-context"
                  id="post-30" onclick="toggle(30);">
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      def react(env)
</code></li>
                
                <li class="post-context-line"><code>        result = send(options[:reaction], env)
</code></li>
                
                <li class="post-context-line"><code>        result if Array === result and result.size == 3
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;.rbenv&#x2F;versions&#x2F;2.1.5&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;rack-protection-1.5.3&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;frame_options.rb</code> in
                <code><strong>call</strong></code>
            </li>

            <li class="code system">
              
              <ol start="24"
                  class="pre-context" id="pre-31"
                  onclick="toggle(31);">
                
                <li class="pre-context-line"><code>          frame_options = options[:frame_options]
</code></li>
                
                <li class="pre-context-line"><code>          frame_options = options[:frame_options].to_s.upcase unless frame_options.respond_to? :to_str
</code></li>
                
                <li class="pre-context-line"><code>          frame_options.to_str
</code></li>
                
                <li class="pre-context-line"><code>        end
</code></li>
                
                <li class="pre-context-line"><code>      end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      def call(env)
</code></li>
                
              </ol>
              

              <ol start="31" class="context" id="31"
                  onclick="toggle(31);">
                <li class="context-line" id="context-31"><code>        status, headers, body        = @app.call(env)</code></li>
              </ol>

              
              <ol start="32" class="post-context"
                  id="post-31" onclick="toggle(31);">
                
                <li class="post-context-line"><code>        headers[&#x27;X-Frame-Options&#x27;] ||= frame_options if html? headers
</code></li>
                
                <li class="post-context-line"><code>        [status, headers, body]
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>  end
</code></li>
                
                <li class="post-context-line"><code>end
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;.rbenv&#x2F;versions&#x2F;2.1.5&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;rack-1.6.4&#x2F;lib&#x2F;rack&#x2F;nulllogger.rb</code> in
                <code><strong>call</strong></code>
            </li>

            <li class="code system">
              
              <ol start="2"
                  class="pre-context" id="pre-32"
                  onclick="toggle(32);">
                
                <li class="pre-context-line"><code>  class NullLogger
</code></li>
                
                <li class="pre-context-line"><code>    def initialize(app)
</code></li>
                
                <li class="pre-context-line"><code>      @app = app
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    def call(env)
</code></li>
                
                <li class="pre-context-line"><code>      env[&#x27;rack.logger&#x27;] = self
</code></li>
                
              </ol>
              

              <ol start="9" class="context" id="32"
                  onclick="toggle(32);">
                <li class="context-line" id="context-32"><code>      @app.call(env)</code></li>
              </ol>

              
              <ol start="10" class="post-context"
                  id="post-32" onclick="toggle(32);">
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    def info(progname = nil, &amp;block); end
</code></li>
                
                <li class="post-context-line"><code>    def debug(progname = nil, &amp;block); end
</code></li>
                
                <li class="post-context-line"><code>    def warn(progname = nil, &amp;block); end
</code></li>
                
                <li class="post-context-line"><code>    def error(progname = nil, &amp;block); end
</code></li>
                
                <li class="post-context-line"><code>    def fatal(progname = nil, &amp;block); end
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;.rbenv&#x2F;versions&#x2F;2.1.5&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;rack-1.6.4&#x2F;lib&#x2F;rack&#x2F;head.rb</code> in
                <code><strong>call</strong></code>
            </li>

            <li class="code system">
              
              <ol start="6"
                  class="pre-context" id="pre-33"
                  onclick="toggle(33);">
                
                <li class="pre-context-line"><code>  # Rack::Head returns an empty body for all HEAD requests. It leaves
</code></li>
                
                <li class="pre-context-line"><code>  # all other requests unchanged.
</code></li>
                
                <li class="pre-context-line"><code>  def initialize(app)
</code></li>
                
                <li class="pre-context-line"><code>    @app = app
</code></li>
                
                <li class="pre-context-line"><code>  end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>  def call(env)
</code></li>
                
              </ol>
              

              <ol start="13" class="context" id="33"
                  onclick="toggle(33);">
                <li class="context-line" id="context-33"><code>    status, headers, body = @app.call(env)</code></li>
              </ol>

              
              <ol start="14" class="post-context"
                  id="post-33" onclick="toggle(33);">
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    if env[REQUEST_METHOD] == HEAD
</code></li>
                
                <li class="post-context-line"><code>      [
</code></li>
                
                <li class="post-context-line"><code>        status, headers, Rack::BodyProxy.new([]) do
</code></li>
                
                <li class="post-context-line"><code>          body.close if body.respond_to? :close
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>      ]
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;.rbenv&#x2F;versions&#x2F;2.1.5&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;sinatra-1.4.6&#x2F;lib&#x2F;sinatra&#x2F;show_exceptions.rb</code> in
                <code><strong>call</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="14"
                  class="pre-context" id="pre-34"
                  onclick="toggle(34);">
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    def initialize(app)
</code></li>
                
                <li class="pre-context-line"><code>      @app      = app
</code></li>
                
                <li class="pre-context-line"><code>      @template = ERB.new(TEMPLATE)
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    def call(env)
</code></li>
                
              </ol>
              

              <ol start="21" class="context" id="34"
                  onclick="toggle(34);">
                <li class="context-line" id="context-34"><code>      @app.call(env)</code></li>
              </ol>

              
              <ol start="22" class="post-context"
                  id="post-34" onclick="toggle(34);">
                
                <li class="post-context-line"><code>    rescue Exception =&gt; e
</code></li>
                
                <li class="post-context-line"><code>      errors, env[&quot;rack.errors&quot;] = env[&quot;rack.errors&quot;], @@eats_errors
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      if prefers_plain_text?(env)
</code></li>
                
                <li class="post-context-line"><code>        content_type = &quot;text&#x2F;plain&quot;
</code></li>
                
                <li class="post-context-line"><code>        exception_string = dump_exception(e)
</code></li>
                
                <li class="post-context-line"><code>      else
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;.rbenv&#x2F;versions&#x2F;2.1.5&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;sinatra-1.4.6&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>call</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="174"
                  class="pre-context" id="pre-35"
                  onclick="toggle(35);">
                
                <li class="pre-context-line"><code>  # Some Rack handlers (Thin, Rainbows!) implement an extended body object protocol, however,
</code></li>
                
                <li class="pre-context-line"><code>  # some middleware (namely Rack::Lint) will break it by not mirroring the methods in question.
</code></li>
                
                <li class="pre-context-line"><code>  # This middleware will detect an extended body object and will make sure it reaches the
</code></li>
                
                <li class="pre-context-line"><code>  # handler directly. We do this here, so our middleware and middleware set up by the app will
</code></li>
                
                <li class="pre-context-line"><code>  # still be able to run.
</code></li>
                
                <li class="pre-context-line"><code>  class ExtendedRack &lt; Struct.new(:app)
</code></li>
                
                <li class="pre-context-line"><code>    def call(env)
</code></li>
                
              </ol>
              

              <ol start="181" class="context" id="35"
                  onclick="toggle(35);">
                <li class="context-line" id="context-35"><code>      result, callback = app.call(env), env[&#x27;async.callback&#x27;]</code></li>
              </ol>

              
              <ol start="182" class="post-context"
                  id="post-35" onclick="toggle(35);">
                
                <li class="post-context-line"><code>      return result unless callback and async?(*result)
</code></li>
                
                <li class="post-context-line"><code>      after_response { callback.call result }
</code></li>
                
                <li class="post-context-line"><code>      setup_close(env, *result)
</code></li>
                
                <li class="post-context-line"><code>      throw :async
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    private
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;.rbenv&#x2F;versions&#x2F;2.1.5&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;sinatra-1.4.6&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>call</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="2014"
                  class="pre-context" id="pre-36"
                  onclick="toggle(36);">
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    def helpers
</code></li>
                
                <li class="pre-context-line"><code>      @instance
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    def call(env)
</code></li>
                
              </ol>
              

              <ol start="2021" class="context" id="36"
                  onclick="toggle(36);">
                <li class="context-line" id="context-36"><code>      @stack.call(env)</code></li>
              </ol>

              
              <ol start="2022" class="post-context"
                  id="post-36" onclick="toggle(36);">
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    def inspect
</code></li>
                
                <li class="post-context-line"><code>      &quot;#&lt;#{@instance.class} app_file=#{settings.app_file.inspect}&gt;&quot;
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>  end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;.rbenv&#x2F;versions&#x2F;2.1.5&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;sinatra-1.4.6&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>block in call</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="1479"
                  class="pre-context" id="pre-37"
                  onclick="toggle(37);">
                
                <li class="pre-context-line"><code>        setup_default_middleware builder
</code></li>
                
                <li class="pre-context-line"><code>        setup_middleware builder
</code></li>
                
                <li class="pre-context-line"><code>        builder.run app
</code></li>
                
                <li class="pre-context-line"><code>        builder
</code></li>
                
                <li class="pre-context-line"><code>      end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      def call(env)
</code></li>
                
              </ol>
              

              <ol start="1486" class="context" id="37"
                  onclick="toggle(37);">
                <li class="context-line" id="context-37"><code>        synchronize { prototype.call(env) }</code></li>
              </ol>

              
              <ol start="1487" class="post-context"
                  id="post-37" onclick="toggle(37);">
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      # Like Kernel#caller but excluding certain magic entries and without
</code></li>
                
                <li class="post-context-line"><code>      # line &#x2F; method information; the resulting array contains filenames only.
</code></li>
                
                <li class="post-context-line"><code>      def caller_files
</code></li>
                
                <li class="post-context-line"><code>        cleaned_caller(1).flatten
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;.rbenv&#x2F;versions&#x2F;2.1.5&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;sinatra-1.4.6&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>synchronize</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="1788"
                  class="pre-context" id="pre-38"
                  onclick="toggle(38);">
                
                <li class="pre-context-line"><code>      end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      @@mutex = Mutex.new
</code></li>
                
                <li class="pre-context-line"><code>      def synchronize(&amp;block)
</code></li>
                
                <li class="pre-context-line"><code>        if lock?
</code></li>
                
                <li class="pre-context-line"><code>          @@mutex.synchronize(&amp;block)
</code></li>
                
                <li class="pre-context-line"><code>        else
</code></li>
                
              </ol>
              

              <ol start="1795" class="context" id="38"
                  onclick="toggle(38);">
                <li class="context-line" id="context-38"><code>          yield</code></li>
              </ol>

              
              <ol start="1796" class="post-context"
                  id="post-38" onclick="toggle(38);">
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      # used for deprecation warnings
</code></li>
                
                <li class="post-context-line"><code>      def warn(message)
</code></li>
                
                <li class="post-context-line"><code>        super message + &quot;\n\tfrom #{cleaned_caller.first.join(&#x27;:&#x27;)}&quot;
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;.rbenv&#x2F;versions&#x2F;2.1.5&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;sinatra-1.4.6&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>call</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="1479"
                  class="pre-context" id="pre-39"
                  onclick="toggle(39);">
                
                <li class="pre-context-line"><code>        setup_default_middleware builder
</code></li>
                
                <li class="pre-context-line"><code>        setup_middleware builder
</code></li>
                
                <li class="pre-context-line"><code>        builder.run app
</code></li>
                
                <li class="pre-context-line"><code>        builder
</code></li>
                
                <li class="pre-context-line"><code>      end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      def call(env)
</code></li>
                
              </ol>
              

              <ol start="1486" class="context" id="39"
                  onclick="toggle(39);">
                <li class="context-line" id="context-39"><code>        synchronize { prototype.call(env) }</code></li>
              </ol>

              
              <ol start="1487" class="post-context"
                  id="post-39" onclick="toggle(39);">
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      # Like Kernel#caller but excluding certain magic entries and without
</code></li>
                
                <li class="post-context-line"><code>      # line &#x2F; method information; the resulting array contains filenames only.
</code></li>
                
                <li class="post-context-line"><code>      def caller_files
</code></li>
                
                <li class="post-context-line"><code>        cleaned_caller(1).flatten
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;.rbenv&#x2F;versions&#x2F;2.1.5&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;rack-test-0.6.3&#x2F;lib&#x2F;rack&#x2F;mock_session.rb</code> in
                <code><strong>request</strong></code>
            </li>

            <li class="code system">
              
              <ol start="23"
                  class="pre-context" id="pre-40"
                  onclick="toggle(40);">
                
                <li class="pre-context-line"><code>    def set_cookie(cookie, uri = nil)
</code></li>
                
                <li class="pre-context-line"><code>      cookie_jar.merge(cookie, uri)
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    def request(uri, env)
</code></li>
                
                <li class="pre-context-line"><code>      env[&quot;HTTP_COOKIE&quot;] ||= cookie_jar.for(uri)
</code></li>
                
                <li class="pre-context-line"><code>      @last_request = Rack::Request.new(env)
</code></li>
                
              </ol>
              

              <ol start="30" class="context" id="40"
                  onclick="toggle(40);">
                <li class="context-line" id="context-40"><code>      status, headers, body = @app.call(@last_request.env)</code></li>
              </ol>

              
              <ol start="31" class="post-context"
                  id="post-40" onclick="toggle(40);">
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      @last_response = MockResponse.new(status, headers, body, env[&quot;rack.errors&quot;].flush)
</code></li>
                
                <li class="post-context-line"><code>      body.close if body.respond_to?(:close)
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      cookie_jar.merge(last_response.headers[&quot;Set-Cookie&quot;], uri)
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      @after_request.each { |hook| hook.call }
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;.rbenv&#x2F;versions&#x2F;2.1.5&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;rack-test-0.6.3&#x2F;lib&#x2F;rack&#x2F;test.rb</code> in
                <code><strong>process_request</strong></code>
            </li>

            <li class="code system">
              
              <ol start="237"
                  class="pre-context" id="pre-41"
                  onclick="toggle(41);">
                
                <li class="pre-context-line"><code>        Rack::MockRequest.env_for(uri.to_s, env)
</code></li>
                
                <li class="pre-context-line"><code>      end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      def process_request(uri, env)
</code></li>
                
                <li class="pre-context-line"><code>        uri = URI.parse(uri)
</code></li>
                
                <li class="pre-context-line"><code>        uri.host ||= @default_host
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
              </ol>
              

              <ol start="244" class="context" id="41"
                  onclick="toggle(41);">
                <li class="context-line" id="context-41"><code>        @rack_mock_session.request(uri, env)</code></li>
              </ol>

              
              <ol start="245" class="post-context"
                  id="post-41" onclick="toggle(41);">
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>        if retry_with_digest_auth?(env)
</code></li>
                
                <li class="post-context-line"><code>          auth_env = env.merge({
</code></li>
                
                <li class="post-context-line"><code>            &quot;HTTP_AUTHORIZATION&quot;          =&gt; digest_auth_header,
</code></li>
                
                <li class="post-context-line"><code>            &quot;rack-test.digest_auth_retry&quot; =&gt; true
</code></li>
                
                <li class="post-context-line"><code>          })
</code></li>
                
                <li class="post-context-line"><code>          auth_env.delete(&#x27;rack.request&#x27;)
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;.rbenv&#x2F;versions&#x2F;2.1.5&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;rack-test-0.6.3&#x2F;lib&#x2F;rack&#x2F;test.rb</code> in
                <code><strong>get</strong></code>
            </li>

            <li class="code system">
              
              <ol start="51"
                  class="pre-context" id="pre-42"
                  onclick="toggle(42);">
                
                <li class="pre-context-line"><code>      # the app&#x27;s response in #last_response. Yield #last_response to a block
</code></li>
                
                <li class="pre-context-line"><code>      # if given.
</code></li>
                
                <li class="pre-context-line"><code>      #
</code></li>
                
                <li class="pre-context-line"><code>      # Example:
</code></li>
                
                <li class="pre-context-line"><code>      #   get &quot;&#x2F;&quot;
</code></li>
                
                <li class="pre-context-line"><code>      def get(uri, params = {}, env = {}, &amp;block)
</code></li>
                
                <li class="pre-context-line"><code>        env = env_for(uri, env.merge(:method =&gt; &quot;GET&quot;, :params =&gt; params))
</code></li>
                
              </ol>
              

              <ol start="58" class="context" id="42"
                  onclick="toggle(42);">
                <li class="context-line" id="context-42"><code>        process_request(uri, env, &amp;block)</code></li>
              </ol>

              
              <ol start="59" class="post-context"
                  id="post-42" onclick="toggle(42);">
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      # Issue a POST request for the given URI. See #get
</code></li>
                
                <li class="post-context-line"><code>      #
</code></li>
                
                <li class="post-context-line"><code>      # Example:
</code></li>
                
                <li class="post-context-line"><code>      #   post &quot;&#x2F;signup&quot;, &quot;name&quot; =&gt; &quot;Bryan&quot;
</code></li>
                
                <li class="post-context-line"><code>      def post(uri, params = {}, env = {}, &amp;block)
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info app">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;.rbenv&#x2F;versions&#x2F;2.1.5&#x2F;lib&#x2F;ruby&#x2F;2.1.0&#x2F;forwardable.rb</code> in
                <code><strong>get</strong></code>
            </li>

            <li class="code app">
              
              <ol start="176"
                  class="pre-context" id="pre-43"
                  onclick="toggle(43);">
                
                <li class="pre-context-line"><code>  #   q.queue    #=&gt; [42]
</code></li>
                
                <li class="pre-context-line"><code>  #   q.push 23  #=&gt; NoMethodError
</code></li>
                
                <li class="pre-context-line"><code>  #
</code></li>
                
                <li class="pre-context-line"><code>  def def_instance_delegator(accessor, method, ali = method)
</code></li>
                
                <li class="pre-context-line"><code>    line_no = __LINE__; str = %{
</code></li>
                
                <li class="pre-context-line"><code>      def #{ali}(*args, &amp;block)
</code></li>
                
                <li class="pre-context-line"><code>        begin
</code></li>
                
              </ol>
              

              <ol start="183" class="context" id="43"
                  onclick="toggle(43);">
                <li class="context-line" id="context-43"><code>          #{accessor}.__send__(:#{method}, *args, &amp;block)</code></li>
              </ol>

              
              <ol start="184" class="post-context"
                  id="post-43" onclick="toggle(43);">
                
                <li class="post-context-line"><code>        rescue Exception
</code></li>
                
                <li class="post-context-line"><code>          $@.delete_if{|s| Forwardable::FILE_REGEXP =~ s} unless Forwardable::debug
</code></li>
                
                <li class="post-context-line"><code>          ::Kernel::raise
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>    }
</code></li>
                
                <li class="post-context-line"><code>    # If it&#x27;s not a class or module, it&#x27;s an instance
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;.rbenv&#x2F;versions&#x2F;2.1.5&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;pact-1.9.0&#x2F;lib&#x2F;pact&#x2F;provider&#x2F;test_methods.rb</code> in
                <code><strong>replay_interaction</strong></code>
            </li>

            <li class="code system">
              
              <ol start="16"
                  class="pre-context" id="pre-44"
                  onclick="toggle(44);">
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      def replay_interaction interaction
</code></li>
                
                <li class="pre-context-line"><code>        request = Request::Replayable.new(interaction.request)
</code></li>
                
                <li class="pre-context-line"><code>        args = [request.path, request.body, request.headers]
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>        logger.info &quot;Sending #{request.method.upcase} request to path: \&quot;#{request.path}\&quot; with headers: #{request.headers}, see debug logs for body&quot;
</code></li>
                
                <li class="pre-context-line"><code>        logger.debug &quot;body :#{request.body}&quot;
</code></li>
                
              </ol>
              

              <ol start="23" class="context" id="44"
                  onclick="toggle(44);">
                <li class="context-line" id="context-44"><code>        response = self.send(request.method.downcase, *args)</code></li>
              </ol>

              
              <ol start="24" class="post-context"
                  id="post-44" onclick="toggle(44);">
                
                <li class="post-context-line"><code>        logger.info &quot;Received response with status: #{response.status}, headers: #{response.headers}, see debug logs for body&quot;
</code></li>
                
                <li class="post-context-line"><code>        logger.debug &quot;body: #{response.body}&quot;
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      def parse_body_from_response rack_response
</code></li>
                
                <li class="post-context-line"><code>        case rack_response.headers[&#x27;Content-Type&#x27;]
</code></li>
                
                <li class="post-context-line"><code>        when &#x2F;json&#x2F;
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;.rbenv&#x2F;versions&#x2F;2.1.5&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;pact-1.9.0&#x2F;lib&#x2F;pact&#x2F;provider&#x2F;rspec.rb</code> in
                <code><strong>block (4 levels) in describe_interaction</strong></code>
            </li>

            <li class="code system">
              
              <ol start="75"
                  class="pre-context" id="pre-45"
                  onclick="toggle(45);">
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>              interaction_context = InteractionContext.new
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>              before do | example |
</code></li>
                
                <li class="pre-context-line"><code>                interaction_context.run_once :before do
</code></li>
                
                <li class="pre-context-line"><code>                  Pact.configuration.logger.info &quot;Running example &#x27;#{Pact::RSpec.full_description(example)}&#x27;&quot;
</code></li>
                
                <li class="pre-context-line"><code>                  set_up_provider_state interaction.provider_state, options[:consumer]
</code></li>
                
              </ol>
              

              <ol start="82" class="context" id="45"
                  onclick="toggle(45);">
                <li class="context-line" id="context-45"><code>                  replay_interaction interaction</code></li>
              </ol>

              
              <ol start="83" class="post-context"
                  id="post-45" onclick="toggle(45);">
                
                <li class="post-context-line"><code>                  interaction_context.last_response = last_response
</code></li>
                
                <li class="post-context-line"><code>                end
</code></li>
                
                <li class="post-context-line"><code>              end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>              after do
</code></li>
                
                <li class="post-context-line"><code>                interaction_context.run_once :after do
</code></li>
                
                <li class="post-context-line"><code>                  tear_down_provider_state interaction.provider_state, options[:consumer]
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;.rbenv&#x2F;versions&#x2F;2.1.5&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;pact-1.9.0&#x2F;lib&#x2F;pact&#x2F;provider&#x2F;rspec.rb</code> in
                <code><strong>run_once</strong></code>
            </li>

            <li class="code system">
              
              <ol start="164"
                  class="pre-context" id="pre-46"
                  onclick="toggle(46);">
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>        def initialize
</code></li>
                
                <li class="pre-context-line"><code>          @already_run = []
</code></li>
                
                <li class="pre-context-line"><code>        end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>        def run_once hook
</code></li>
                
                <li class="pre-context-line"><code>          unless @already_run.include?(hook)
</code></li>
                
              </ol>
              

              <ol start="171" class="context" id="46"
                  onclick="toggle(46);">
                <li class="context-line" id="context-46"><code>            yield</code></li>
              </ol>

              
              <ol start="172" class="post-context"
                  id="post-46" onclick="toggle(46);">
                
                <li class="post-context-line"><code>            @already_run &lt;&lt; hook
</code></li>
                
                <li class="post-context-line"><code>          end
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>  end
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;.rbenv&#x2F;versions&#x2F;2.1.5&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;pact-1.9.0&#x2F;lib&#x2F;pact&#x2F;provider&#x2F;rspec.rb</code> in
                <code><strong>block (3 levels) in describe_interaction</strong></code>
            </li>

            <li class="code system">
              
              <ol start="72"
                  class="pre-context" id="pre-47"
                  onclick="toggle(47);">
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>            describe &quot;with #{interaction.request.method_and_path}&quot; do
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>              interaction_context = InteractionContext.new
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>              before do | example |
</code></li>
                
              </ol>
              

              <ol start="79" class="context" id="47"
                  onclick="toggle(47);">
                <li class="context-line" id="context-47"><code>                interaction_context.run_once :before do</code></li>
              </ol>

              
              <ol start="80" class="post-context"
                  id="post-47" onclick="toggle(47);">
                
                <li class="post-context-line"><code>                  Pact.configuration.logger.info &quot;Running example &#x27;#{Pact::RSpec.full_description(example)}&#x27;&quot;
</code></li>
                
                <li class="post-context-line"><code>                  set_up_provider_state interaction.provider_state, options[:consumer]
</code></li>
                
                <li class="post-context-line"><code>                  replay_interaction interaction
</code></li>
                
                <li class="post-context-line"><code>                  interaction_context.last_response = last_response
</code></li>
                
                <li class="post-context-line"><code>                end
</code></li>
                
                <li class="post-context-line"><code>              end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;.rbenv&#x2F;versions&#x2F;2.1.5&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;rspec-core-3.4.1&#x2F;lib&#x2F;rspec&#x2F;core&#x2F;example.rb</code> in
                <code><strong>instance_exec</strong></code>
            </li>

            <li class="code system">
              
              <ol start="417"
                  class="pre-context" id="pre-48"
                  onclick="toggle(48);">
                
                <li class="pre-context-line"><code>        start(reporter)
</code></li>
                
                <li class="pre-context-line"><code>        Pending.mark_skipped! self, exception.argument
</code></li>
                
                <li class="pre-context-line"><code>        finish(reporter)
</code></li>
                
                <li class="pre-context-line"><code>      end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      # @private
</code></li>
                
                <li class="pre-context-line"><code>      def instance_exec(*args, &amp;block)
</code></li>
                
              </ol>
              

              <ol start="424" class="context" id="48"
                  onclick="toggle(48);">
                <li class="context-line" id="context-48"><code>        @example_group_instance.instance_exec(*args, &amp;block)</code></li>
              </ol>

              
              <ol start="425" class="post-context"
                  id="post-48" onclick="toggle(48);">
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    private
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      def hooks
</code></li>
                
                <li class="post-context-line"><code>        example_group_instance.singleton_class.hooks
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;.rbenv&#x2F;versions&#x2F;2.1.5&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;rspec-core-3.4.1&#x2F;lib&#x2F;rspec&#x2F;core&#x2F;example.rb</code> in
                <code><strong>instance_exec</strong></code>
            </li>

            <li class="code system">
              
              <ol start="417"
                  class="pre-context" id="pre-49"
                  onclick="toggle(49);">
                
                <li class="pre-context-line"><code>        start(reporter)
</code></li>
                
                <li class="pre-context-line"><code>        Pending.mark_skipped! self, exception.argument
</code></li>
                
                <li class="pre-context-line"><code>        finish(reporter)
</code></li>
                
                <li class="pre-context-line"><code>      end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      # @private
</code></li>
                
                <li class="pre-context-line"><code>      def instance_exec(*args, &amp;block)
</code></li>
                
              </ol>
              

              <ol start="424" class="context" id="49"
                  onclick="toggle(49);">
                <li class="context-line" id="context-49"><code>        @example_group_instance.instance_exec(*args, &amp;block)</code></li>
              </ol>

              
              <ol start="425" class="post-context"
                  id="post-49" onclick="toggle(49);">
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    private
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      def hooks
</code></li>
                
                <li class="post-context-line"><code>        example_group_instance.singleton_class.hooks
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;.rbenv&#x2F;versions&#x2F;2.1.5&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;rspec-core-3.4.1&#x2F;lib&#x2F;rspec&#x2F;core&#x2F;hooks.rb</code> in
                <code><strong>run</strong></code>
            </li>

            <li class="code system">
              
              <ol start="350"
                  class="pre-context" id="pre-50"
                  onclick="toggle(50);">
                
                <li class="pre-context-line"><code>          @options = options
</code></li>
                
                <li class="pre-context-line"><code>        end
</code></li>
                
                <li class="pre-context-line"><code>      end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      # @private
</code></li>
                
                <li class="pre-context-line"><code>      class BeforeHook &lt; Hook
</code></li>
                
                <li class="pre-context-line"><code>        def run(example)
</code></li>
                
              </ol>
              

              <ol start="357" class="context" id="50"
                  onclick="toggle(50);">
                <li class="context-line" id="context-50"><code>          example.instance_exec(example, &amp;block)</code></li>
              </ol>

              
              <ol start="358" class="post-context"
                  id="post-50" onclick="toggle(50);">
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      # @private
</code></li>
                
                <li class="post-context-line"><code>      class AfterHook &lt; Hook
</code></li>
                
                <li class="post-context-line"><code>        def run(example)
</code></li>
                
                <li class="post-context-line"><code>          example.instance_exec(example, &amp;block)
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;.rbenv&#x2F;versions&#x2F;2.1.5&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;rspec-core-3.4.1&#x2F;lib&#x2F;rspec&#x2F;core&#x2F;hooks.rb</code> in
                <code><strong>block in run_owned_hooks_for</strong></code>
            </li>

            <li class="code system">
              
              <ol start="514"
                  class="pre-context" id="pre-51"
                  onclick="toggle(51);">
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>        def all_hooks_for(position, scope)
</code></li>
                
                <li class="pre-context-line"><code>          hooks_for(position, scope) { return EMPTY_HOOK_ARRAY }.items_and_filters.map(&amp;:first)
</code></li>
                
                <li class="pre-context-line"><code>        end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>        def run_owned_hooks_for(position, scope, example_or_group)
</code></li>
                
                <li class="pre-context-line"><code>          matching_hooks_for(position, scope, example_or_group).each do |hook|
</code></li>
                
              </ol>
              

              <ol start="521" class="context" id="51"
                  onclick="toggle(51);">
                <li class="context-line" id="context-51"><code>            hook.run(example_or_group)</code></li>
              </ol>

              
              <ol start="522" class="post-context"
                  id="post-51" onclick="toggle(51);">
                
                <li class="post-context-line"><code>          end
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>        def processable_hooks_for(position, scope, host)
</code></li>
                
                <li class="post-context-line"><code>          if scope == :example
</code></li>
                
                <li class="post-context-line"><code>            all_hooks_for(position, scope)
</code></li>
                
                <li class="post-context-line"><code>          else
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;.rbenv&#x2F;versions&#x2F;2.1.5&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;rspec-core-3.4.1&#x2F;lib&#x2F;rspec&#x2F;core&#x2F;hooks.rb</code> in
                <code><strong>each</strong></code>
            </li>

            <li class="code system">
              
              <ol start="513"
                  class="pre-context" id="pre-52"
                  onclick="toggle(52);">
                
                <li class="pre-context-line"><code>        end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>        def all_hooks_for(position, scope)
</code></li>
                
                <li class="pre-context-line"><code>          hooks_for(position, scope) { return EMPTY_HOOK_ARRAY }.items_and_filters.map(&amp;:first)
</code></li>
                
                <li class="pre-context-line"><code>        end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>        def run_owned_hooks_for(position, scope, example_or_group)
</code></li>
                
              </ol>
              

              <ol start="520" class="context" id="52"
                  onclick="toggle(52);">
                <li class="context-line" id="context-52"><code>          matching_hooks_for(position, scope, example_or_group).each do |hook|</code></li>
              </ol>

              
              <ol start="521" class="post-context"
                  id="post-52" onclick="toggle(52);">
                
                <li class="post-context-line"><code>            hook.run(example_or_group)
</code></li>
                
                <li class="post-context-line"><code>          end
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>        def processable_hooks_for(position, scope, host)
</code></li>
                
                <li class="post-context-line"><code>          if scope == :example
</code></li>
                
                <li class="post-context-line"><code>            all_hooks_for(position, scope)
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;.rbenv&#x2F;versions&#x2F;2.1.5&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;rspec-core-3.4.1&#x2F;lib&#x2F;rspec&#x2F;core&#x2F;hooks.rb</code> in
                <code><strong>run_owned_hooks_for</strong></code>
            </li>

            <li class="code system">
              
              <ol start="513"
                  class="pre-context" id="pre-53"
                  onclick="toggle(53);">
                
                <li class="pre-context-line"><code>        end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>        def all_hooks_for(position, scope)
</code></li>
                
                <li class="pre-context-line"><code>          hooks_for(position, scope) { return EMPTY_HOOK_ARRAY }.items_and_filters.map(&amp;:first)
</code></li>
                
                <li class="pre-context-line"><code>        end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>        def run_owned_hooks_for(position, scope, example_or_group)
</code></li>
                
              </ol>
              

              <ol start="520" class="context" id="53"
                  onclick="toggle(53);">
                <li class="context-line" id="context-53"><code>          matching_hooks_for(position, scope, example_or_group).each do |hook|</code></li>
              </ol>

              
              <ol start="521" class="post-context"
                  id="post-53" onclick="toggle(53);">
                
                <li class="post-context-line"><code>            hook.run(example_or_group)
</code></li>
                
                <li class="post-context-line"><code>          end
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>        def processable_hooks_for(position, scope, host)
</code></li>
                
                <li class="post-context-line"><code>          if scope == :example
</code></li>
                
                <li class="post-context-line"><code>            all_hooks_for(position, scope)
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;.rbenv&#x2F;versions&#x2F;2.1.5&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;rspec-core-3.4.1&#x2F;lib&#x2F;rspec&#x2F;core&#x2F;hooks.rb</code> in
                <code><strong>block in run_example_hooks_for</strong></code>
            </li>

            <li class="code system">
              
              <ol start="600"
                  class="pre-context" id="pre-54"
                  onclick="toggle(54);">
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>        def normalized_scope_for(scope)
</code></li>
                
                <li class="pre-context-line"><code>          SCOPE_ALIASES[scope] || scope
</code></li>
                
                <li class="pre-context-line"><code>        end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>        def run_example_hooks_for(example, position, each_method)
</code></li>
                
                <li class="pre-context-line"><code>          owner_parent_groups.__send__(each_method) do |group|
</code></li>
                
              </ol>
              

              <ol start="607" class="context" id="54"
                  onclick="toggle(54);">
                <li class="context-line" id="context-54"><code>            group.hooks.run_owned_hooks_for(position, :example, example)</code></li>
              </ol>

              
              <ol start="608" class="post-context"
                  id="post-54" onclick="toggle(54);">
                
                <li class="post-context-line"><code>          end
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>        def run_around_example_hooks_for(example)
</code></li>
                
                <li class="post-context-line"><code>          hooks = FlatMap.flat_map(owner_parent_groups) do |group|
</code></li>
                
                <li class="post-context-line"><code>            group.hooks.matching_hooks_for(:around, :example, example)
</code></li>
                
                <li class="post-context-line"><code>          end
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;.rbenv&#x2F;versions&#x2F;2.1.5&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;rspec-core-3.4.1&#x2F;lib&#x2F;rspec&#x2F;core&#x2F;hooks.rb</code> in
                <code><strong>reverse_each</strong></code>
            </li>

            <li class="code system">
              
              <ol start="599"
                  class="pre-context" id="pre-55"
                  onclick="toggle(55);">
                
                <li class="pre-context-line"><code>        end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>        def normalized_scope_for(scope)
</code></li>
                
                <li class="pre-context-line"><code>          SCOPE_ALIASES[scope] || scope
</code></li>
                
                <li class="pre-context-line"><code>        end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>        def run_example_hooks_for(example, position, each_method)
</code></li>
                
              </ol>
              

              <ol start="606" class="context" id="55"
                  onclick="toggle(55);">
                <li class="context-line" id="context-55"><code>          owner_parent_groups.__send__(each_method) do |group|</code></li>
              </ol>

              
              <ol start="607" class="post-context"
                  id="post-55" onclick="toggle(55);">
                
                <li class="post-context-line"><code>            group.hooks.run_owned_hooks_for(position, :example, example)
</code></li>
                
                <li class="post-context-line"><code>          end
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>        def run_around_example_hooks_for(example)
</code></li>
                
                <li class="post-context-line"><code>          hooks = FlatMap.flat_map(owner_parent_groups) do |group|
</code></li>
                
                <li class="post-context-line"><code>            group.hooks.matching_hooks_for(:around, :example, example)
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;.rbenv&#x2F;versions&#x2F;2.1.5&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;rspec-core-3.4.1&#x2F;lib&#x2F;rspec&#x2F;core&#x2F;hooks.rb</code> in
                <code><strong>run_example_hooks_for</strong></code>
            </li>

            <li class="code system">
              
              <ol start="599"
                  class="pre-context" id="pre-56"
                  onclick="toggle(56);">
                
                <li class="pre-context-line"><code>        end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>        def normalized_scope_for(scope)
</code></li>
                
                <li class="pre-context-line"><code>          SCOPE_ALIASES[scope] || scope
</code></li>
                
                <li class="pre-context-line"><code>        end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>        def run_example_hooks_for(example, position, each_method)
</code></li>
                
              </ol>
              

              <ol start="606" class="context" id="56"
                  onclick="toggle(56);">
                <li class="context-line" id="context-56"><code>          owner_parent_groups.__send__(each_method) do |group|</code></li>
              </ol>

              
              <ol start="607" class="post-context"
                  id="post-56" onclick="toggle(56);">
                
                <li class="post-context-line"><code>            group.hooks.run_owned_hooks_for(position, :example, example)
</code></li>
                
                <li class="post-context-line"><code>          end
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>        def run_around_example_hooks_for(example)
</code></li>
                
                <li class="post-context-line"><code>          hooks = FlatMap.flat_map(owner_parent_groups) do |group|
</code></li>
                
                <li class="post-context-line"><code>            group.hooks.matching_hooks_for(:around, :example, example)
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;.rbenv&#x2F;versions&#x2F;2.1.5&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;rspec-core-3.4.1&#x2F;lib&#x2F;rspec&#x2F;core&#x2F;hooks.rb</code> in
                <code><strong>run</strong></code>
            </li>

            <li class="code system">
              
              <ol start="469"
                  class="pre-context" id="pre-57"
                  onclick="toggle(57);">
                
                <li class="pre-context-line"><code>        def run(position, scope, example_or_group)
</code></li>
                
                <li class="pre-context-line"><code>          return if RSpec.configuration.dry_run?
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>          if scope == :context
</code></li>
                
                <li class="pre-context-line"><code>            run_owned_hooks_for(position, :context, example_or_group)
</code></li>
                
                <li class="pre-context-line"><code>          else
</code></li>
                
                <li class="pre-context-line"><code>            case position
</code></li>
                
              </ol>
              

              <ol start="476" class="context" id="57"
                  onclick="toggle(57);">
                <li class="context-line" id="context-57"><code>            when :before then run_example_hooks_for(example_or_group, :before, :reverse_each)</code></li>
              </ol>

              
              <ol start="477" class="post-context"
                  id="post-57" onclick="toggle(57);">
                
                <li class="post-context-line"><code>            when :after  then run_example_hooks_for(example_or_group, :after,  :each)
</code></li>
                
                <li class="post-context-line"><code>            when :around then run_around_example_hooks_for(example_or_group) { yield }
</code></li>
                
                <li class="post-context-line"><code>            end
</code></li>
                
                <li class="post-context-line"><code>          end
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>        SCOPES = [:example, :context]
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;.rbenv&#x2F;versions&#x2F;2.1.5&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;rspec-core-3.4.1&#x2F;lib&#x2F;rspec&#x2F;core&#x2F;example.rb</code> in
                <code><strong>run_before_example</strong></code>
            </li>

            <li class="code system">
              
              <ol start="464"
                  class="pre-context" id="pre-58"
                  onclick="toggle(58);">
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      def record_finished(status)
</code></li>
                
                <li class="pre-context-line"><code>        execution_result.record_finished(status, clock.now)
</code></li>
                
                <li class="pre-context-line"><code>      end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      def run_before_example
</code></li>
                
                <li class="pre-context-line"><code>        @example_group_instance.setup_mocks_for_rspec
</code></li>
                
              </ol>
              

              <ol start="471" class="context" id="58"
                  onclick="toggle(58);">
                <li class="context-line" id="context-58"><code>        hooks.run(:before, :example, self)</code></li>
              </ol>

              
              <ol start="472" class="post-context"
                  id="post-58" onclick="toggle(58);">
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      def with_around_and_singleton_context_hooks
</code></li>
                
                <li class="post-context-line"><code>        singleton_context_hooks_host = example_group_instance.singleton_class
</code></li>
                
                <li class="post-context-line"><code>        singleton_context_hooks_host.run_before_context_hooks(example_group_instance)
</code></li>
                
                <li class="post-context-line"><code>        with_around_example_hooks { yield }
</code></li>
                
                <li class="post-context-line"><code>      ensure
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;.rbenv&#x2F;versions&#x2F;2.1.5&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;rspec-core-3.4.1&#x2F;lib&#x2F;rspec&#x2F;core&#x2F;example.rb</code> in
                <code><strong>block in run</strong></code>
            </li>

            <li class="code system">
              
              <ol start="228"
                  class="pre-context" id="pre-59"
                  onclick="toggle(59);">
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>        begin
</code></li>
                
                <li class="pre-context-line"><code>          if skipped?
</code></li>
                
                <li class="pre-context-line"><code>            Pending.mark_pending! self, skip
</code></li>
                
                <li class="pre-context-line"><code>          elsif !RSpec.configuration.dry_run?
</code></li>
                
                <li class="pre-context-line"><code>            with_around_and_singleton_context_hooks do
</code></li>
                
                <li class="pre-context-line"><code>              begin
</code></li>
                
              </ol>
              

              <ol start="235" class="context" id="59"
                  onclick="toggle(59);">
                <li class="context-line" id="context-59"><code>                run_before_example</code></li>
              </ol>

              
              <ol start="236" class="post-context"
                  id="post-59" onclick="toggle(59);">
                
                <li class="post-context-line"><code>                @example_group_instance.instance_exec(self, &amp;@example_block)
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>                if pending?
</code></li>
                
                <li class="post-context-line"><code>                  Pending.mark_fixed! self
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>                  raise Pending::PendingExampleFixedError,
</code></li>
                
                <li class="post-context-line"><code>                        &#x27;Expected example to fail since it is pending, but it passed.&#x27;,
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;.rbenv&#x2F;versions&#x2F;2.1.5&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;rspec-core-3.4.1&#x2F;lib&#x2F;rspec&#x2F;core&#x2F;example.rb</code> in
                <code><strong>block in with_around_and_singleton_context_hooks</strong></code>
            </li>

            <li class="code system">
              
              <ol start="470"
                  class="pre-context" id="pre-60"
                  onclick="toggle(60);">
                
                <li class="pre-context-line"><code>        @example_group_instance.setup_mocks_for_rspec
</code></li>
                
                <li class="pre-context-line"><code>        hooks.run(:before, :example, self)
</code></li>
                
                <li class="pre-context-line"><code>      end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      def with_around_and_singleton_context_hooks
</code></li>
                
                <li class="pre-context-line"><code>        singleton_context_hooks_host = example_group_instance.singleton_class
</code></li>
                
                <li class="pre-context-line"><code>        singleton_context_hooks_host.run_before_context_hooks(example_group_instance)
</code></li>
                
              </ol>
              

              <ol start="477" class="context" id="60"
                  onclick="toggle(60);">
                <li class="context-line" id="context-60"><code>        with_around_example_hooks { yield }</code></li>
              </ol>

              
              <ol start="478" class="post-context"
                  id="post-60" onclick="toggle(60);">
                
                <li class="post-context-line"><code>      ensure
</code></li>
                
                <li class="post-context-line"><code>        singleton_context_hooks_host.run_after_context_hooks(example_group_instance)
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      def run_after_example
</code></li>
                
                <li class="post-context-line"><code>        assign_generated_description if defined?(::RSpec::Matchers)
</code></li>
                
                <li class="post-context-line"><code>        hooks.run(:after, :example, self)
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;.rbenv&#x2F;versions&#x2F;2.1.5&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;rspec-core-3.4.1&#x2F;lib&#x2F;rspec&#x2F;core&#x2F;example.rb</code> in
                <code><strong>block in with_around_example_hooks</strong></code>
            </li>

            <li class="code system">
              
              <ol start="427"
                  class="pre-context" id="pre-61"
                  onclick="toggle(61);">
                
                <li class="pre-context-line"><code>    private
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      def hooks
</code></li>
                
                <li class="pre-context-line"><code>        example_group_instance.singleton_class.hooks
</code></li>
                
                <li class="pre-context-line"><code>      end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      def with_around_example_hooks
</code></li>
                
              </ol>
              

              <ol start="434" class="context" id="61"
                  onclick="toggle(61);">
                <li class="context-line" id="context-61"><code>        hooks.run(:around, :example, self) { yield }</code></li>
              </ol>

              
              <ol start="435" class="post-context"
                  id="post-61" onclick="toggle(61);">
                
                <li class="post-context-line"><code>      rescue Support::AllExceptionsExceptOnesWeMustNotRescue =&gt; e
</code></li>
                
                <li class="post-context-line"><code>        set_exception(e)
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      def start(reporter)
</code></li>
                
                <li class="post-context-line"><code>        reporter.example_started(self)
</code></li>
                
                <li class="post-context-line"><code>        execution_result.started_at = clock.now
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;.rbenv&#x2F;versions&#x2F;2.1.5&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;rspec-core-3.4.1&#x2F;lib&#x2F;rspec&#x2F;core&#x2F;hooks.rb</code> in
                <code><strong>block in run</strong></code>
            </li>

            <li class="code system">
              
              <ol start="471"
                  class="pre-context" id="pre-62"
                  onclick="toggle(62);">
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>          if scope == :context
</code></li>
                
                <li class="pre-context-line"><code>            run_owned_hooks_for(position, :context, example_or_group)
</code></li>
                
                <li class="pre-context-line"><code>          else
</code></li>
                
                <li class="pre-context-line"><code>            case position
</code></li>
                
                <li class="pre-context-line"><code>            when :before then run_example_hooks_for(example_or_group, :before, :reverse_each)
</code></li>
                
                <li class="pre-context-line"><code>            when :after  then run_example_hooks_for(example_or_group, :after,  :each)
</code></li>
                
              </ol>
              

              <ol start="478" class="context" id="62"
                  onclick="toggle(62);">
                <li class="context-line" id="context-62"><code>            when :around then run_around_example_hooks_for(example_or_group) { yield }</code></li>
              </ol>

              
              <ol start="479" class="post-context"
                  id="post-62" onclick="toggle(62);">
                
                <li class="post-context-line"><code>            end
</code></li>
                
                <li class="post-context-line"><code>          end
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>        SCOPES = [:example, :context]
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>        SCOPE_ALIASES = { :each =&gt; :example, :all =&gt; :context }
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;.rbenv&#x2F;versions&#x2F;2.1.5&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;rspec-core-3.4.1&#x2F;lib&#x2F;rspec&#x2F;core&#x2F;hooks.rb</code> in
                <code><strong>run_around_example_hooks_for</strong></code>
            </li>

            <li class="code system">
              
              <ol start="609"
                  class="pre-context" id="pre-63"
                  onclick="toggle(63);">
                
                <li class="pre-context-line"><code>        end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>        def run_around_example_hooks_for(example)
</code></li>
                
                <li class="pre-context-line"><code>          hooks = FlatMap.flat_map(owner_parent_groups) do |group|
</code></li>
                
                <li class="pre-context-line"><code>            group.hooks.matching_hooks_for(:around, :example, example)
</code></li>
                
                <li class="pre-context-line"><code>          end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
              </ol>
              

              <ol start="616" class="context" id="63"
                  onclick="toggle(63);">
                <li class="context-line" id="context-63"><code>          return yield if hooks.empty? # exit early to avoid the extra allocation cost of `Example::Procsy`</code></li>
              </ol>

              
              <ol start="617" class="post-context"
                  id="post-63" onclick="toggle(63);">
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>          initial_procsy = Example::Procsy.new(example) { yield }
</code></li>
                
                <li class="post-context-line"><code>          hooks.inject(initial_procsy) do |procsy, around_hook|
</code></li>
                
                <li class="post-context-line"><code>            procsy.wrap { around_hook.execute_with(example, procsy) }
</code></li>
                
                <li class="post-context-line"><code>          end.call
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;.rbenv&#x2F;versions&#x2F;2.1.5&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;rspec-core-3.4.1&#x2F;lib&#x2F;rspec&#x2F;core&#x2F;hooks.rb</code> in
                <code><strong>run</strong></code>
            </li>

            <li class="code system">
              
              <ol start="471"
                  class="pre-context" id="pre-64"
                  onclick="toggle(64);">
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>          if scope == :context
</code></li>
                
                <li class="pre-context-line"><code>            run_owned_hooks_for(position, :context, example_or_group)
</code></li>
                
                <li class="pre-context-line"><code>          else
</code></li>
                
                <li class="pre-context-line"><code>            case position
</code></li>
                
                <li class="pre-context-line"><code>            when :before then run_example_hooks_for(example_or_group, :before, :reverse_each)
</code></li>
                
                <li class="pre-context-line"><code>            when :after  then run_example_hooks_for(example_or_group, :after,  :each)
</code></li>
                
              </ol>
              

              <ol start="478" class="context" id="64"
                  onclick="toggle(64);">
                <li class="context-line" id="context-64"><code>            when :around then run_around_example_hooks_for(example_or_group) { yield }</code></li>
              </ol>

              
              <ol start="479" class="post-context"
                  id="post-64" onclick="toggle(64);">
                
                <li class="post-context-line"><code>            end
</code></li>
                
                <li class="post-context-line"><code>          end
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>        SCOPES = [:example, :context]
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>        SCOPE_ALIASES = { :each =&gt; :example, :all =&gt; :context }
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;.rbenv&#x2F;versions&#x2F;2.1.5&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;rspec-core-3.4.1&#x2F;lib&#x2F;rspec&#x2F;core&#x2F;example.rb</code> in
                <code><strong>with_around_example_hooks</strong></code>
            </li>

            <li class="code system">
              
              <ol start="427"
                  class="pre-context" id="pre-65"
                  onclick="toggle(65);">
                
                <li class="pre-context-line"><code>    private
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      def hooks
</code></li>
                
                <li class="pre-context-line"><code>        example_group_instance.singleton_class.hooks
</code></li>
                
                <li class="pre-context-line"><code>      end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      def with_around_example_hooks
</code></li>
                
              </ol>
              

              <ol start="434" class="context" id="65"
                  onclick="toggle(65);">
                <li class="context-line" id="context-65"><code>        hooks.run(:around, :example, self) { yield }</code></li>
              </ol>

              
              <ol start="435" class="post-context"
                  id="post-65" onclick="toggle(65);">
                
                <li class="post-context-line"><code>      rescue Support::AllExceptionsExceptOnesWeMustNotRescue =&gt; e
</code></li>
                
                <li class="post-context-line"><code>        set_exception(e)
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      def start(reporter)
</code></li>
                
                <li class="post-context-line"><code>        reporter.example_started(self)
</code></li>
                
                <li class="post-context-line"><code>        execution_result.started_at = clock.now
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;.rbenv&#x2F;versions&#x2F;2.1.5&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;rspec-core-3.4.1&#x2F;lib&#x2F;rspec&#x2F;core&#x2F;example.rb</code> in
                <code><strong>with_around_and_singleton_context_hooks</strong></code>
            </li>

            <li class="code system">
              
              <ol start="470"
                  class="pre-context" id="pre-66"
                  onclick="toggle(66);">
                
                <li class="pre-context-line"><code>        @example_group_instance.setup_mocks_for_rspec
</code></li>
                
                <li class="pre-context-line"><code>        hooks.run(:before, :example, self)
</code></li>
                
                <li class="pre-context-line"><code>      end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      def with_around_and_singleton_context_hooks
</code></li>
                
                <li class="pre-context-line"><code>        singleton_context_hooks_host = example_group_instance.singleton_class
</code></li>
                
                <li class="pre-context-line"><code>        singleton_context_hooks_host.run_before_context_hooks(example_group_instance)
</code></li>
                
              </ol>
              

              <ol start="477" class="context" id="66"
                  onclick="toggle(66);">
                <li class="context-line" id="context-66"><code>        with_around_example_hooks { yield }</code></li>
              </ol>

              
              <ol start="478" class="post-context"
                  id="post-66" onclick="toggle(66);">
                
                <li class="post-context-line"><code>      ensure
</code></li>
                
                <li class="post-context-line"><code>        singleton_context_hooks_host.run_after_context_hooks(example_group_instance)
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      def run_after_example
</code></li>
                
                <li class="post-context-line"><code>        assign_generated_description if defined?(::RSpec::Matchers)
</code></li>
                
                <li class="post-context-line"><code>        hooks.run(:after, :example, self)
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;.rbenv&#x2F;versions&#x2F;2.1.5&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;rspec-core-3.4.1&#x2F;lib&#x2F;rspec&#x2F;core&#x2F;example.rb</code> in
                <code><strong>run</strong></code>
            </li>

            <li class="code system">
              
              <ol start="226"
                  class="pre-context" id="pre-67"
                  onclick="toggle(67);">
                
                <li class="pre-context-line"><code>        start(reporter)
</code></li>
                
                <li class="pre-context-line"><code>        Pending.mark_pending!(self, pending) if pending?
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>        begin
</code></li>
                
                <li class="pre-context-line"><code>          if skipped?
</code></li>
                
                <li class="pre-context-line"><code>            Pending.mark_pending! self, skip
</code></li>
                
                <li class="pre-context-line"><code>          elsif !RSpec.configuration.dry_run?
</code></li>
                
              </ol>
              

              <ol start="233" class="context" id="67"
                  onclick="toggle(67);">
                <li class="context-line" id="context-67"><code>            with_around_and_singleton_context_hooks do</code></li>
              </ol>

              
              <ol start="234" class="post-context"
                  id="post-67" onclick="toggle(67);">
                
                <li class="post-context-line"><code>              begin
</code></li>
                
                <li class="post-context-line"><code>                run_before_example
</code></li>
                
                <li class="post-context-line"><code>                @example_group_instance.instance_exec(self, &amp;@example_block)
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>                if pending?
</code></li>
                
                <li class="post-context-line"><code>                  Pending.mark_fixed! self
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;.rbenv&#x2F;versions&#x2F;2.1.5&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;rspec-core-3.4.1&#x2F;lib&#x2F;rspec&#x2F;core&#x2F;example_group.rb</code> in
                <code><strong>block in run_examples</strong></code>
            </li>

            <li class="code system">
              
              <ol start="574"
                  class="pre-context" id="pre-68"
                  onclick="toggle(68);">
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      # @private
</code></li>
                
                <li class="pre-context-line"><code>      def self.run_examples(reporter)
</code></li>
                
                <li class="pre-context-line"><code>        ordering_strategy.order(filtered_examples).map do |example|
</code></li>
                
                <li class="pre-context-line"><code>          next if RSpec.world.wants_to_quit
</code></li>
                
                <li class="pre-context-line"><code>          instance = new(example.inspect_output)
</code></li>
                
                <li class="pre-context-line"><code>          set_ivars(instance, before_context_ivars)
</code></li>
                
              </ol>
              

              <ol start="581" class="context" id="68"
                  onclick="toggle(68);">
                <li class="context-line" id="context-68"><code>          succeeded = example.run(instance, reporter)</code></li>
              </ol>

              
              <ol start="582" class="post-context"
                  id="post-68" onclick="toggle(68);">
                
                <li class="post-context-line"><code>          if !succeeded &amp;&amp; reporter.fail_fast_limit_met?
</code></li>
                
                <li class="post-context-line"><code>            RSpec.world.wants_to_quit = true
</code></li>
                
                <li class="post-context-line"><code>          end
</code></li>
                
                <li class="post-context-line"><code>          succeeded
</code></li>
                
                <li class="post-context-line"><code>        end.all?
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;.rbenv&#x2F;versions&#x2F;2.1.5&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;rspec-core-3.4.1&#x2F;lib&#x2F;rspec&#x2F;core&#x2F;example_group.rb</code> in
                <code><strong>map</strong></code>
            </li>

            <li class="code system">
              
              <ol start="570"
                  class="pre-context" id="pre-69"
                  onclick="toggle(69);">
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>          registry.fetch(:global)
</code></li>
                
                <li class="pre-context-line"><code>        end
</code></li>
                
                <li class="pre-context-line"><code>      end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      # @private
</code></li>
                
                <li class="pre-context-line"><code>      def self.run_examples(reporter)
</code></li>
                
              </ol>
              

              <ol start="577" class="context" id="69"
                  onclick="toggle(69);">
                <li class="context-line" id="context-69"><code>        ordering_strategy.order(filtered_examples).map do |example|</code></li>
              </ol>

              
              <ol start="578" class="post-context"
                  id="post-69" onclick="toggle(69);">
                
                <li class="post-context-line"><code>          next if RSpec.world.wants_to_quit
</code></li>
                
                <li class="post-context-line"><code>          instance = new(example.inspect_output)
</code></li>
                
                <li class="post-context-line"><code>          set_ivars(instance, before_context_ivars)
</code></li>
                
                <li class="post-context-line"><code>          succeeded = example.run(instance, reporter)
</code></li>
                
                <li class="post-context-line"><code>          if !succeeded &amp;&amp; reporter.fail_fast_limit_met?
</code></li>
                
                <li class="post-context-line"><code>            RSpec.world.wants_to_quit = true
</code></li>
                
                <li class="post-context-line"><code>          end
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;.rbenv&#x2F;versions&#x2F;2.1.5&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;rspec-core-3.4.1&#x2F;lib&#x2F;rspec&#x2F;core&#x2F;example_group.rb</code> in
                <code><strong>run_examples</strong></code>
            </li>

            <li class="code system">
              
              <ol start="570"
                  class="pre-context" id="pre-70"
                  onclick="toggle(70);">
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>          registry.fetch(:global)
</code></li>
                
                <li class="pre-context-line"><code>        end
</code></li>
                
                <li class="pre-context-line"><code>      end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      # @private
</code></li>
                
                <li class="pre-context-line"><code>      def self.run_examples(reporter)
</code></li>
                
              </ol>
              

              <ol start="577" class="context" id="70"
                  onclick="toggle(70);">
                <li class="context-line" id="context-70"><code>        ordering_strategy.order(filtered_examples).map do |example|</code></li>
              </ol>

              
              <ol start="578" class="post-context"
                  id="post-70" onclick="toggle(70);">
                
                <li class="post-context-line"><code>          next if RSpec.world.wants_to_quit
</code></li>
                
                <li class="post-context-line"><code>          instance = new(example.inspect_output)
</code></li>
                
                <li class="post-context-line"><code>          set_ivars(instance, before_context_ivars)
</code></li>
                
                <li class="post-context-line"><code>          succeeded = example.run(instance, reporter)
</code></li>
                
                <li class="post-context-line"><code>          if !succeeded &amp;&amp; reporter.fail_fast_limit_met?
</code></li>
                
                <li class="post-context-line"><code>            RSpec.world.wants_to_quit = true
</code></li>
                
                <li class="post-context-line"><code>          end
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;.rbenv&#x2F;versions&#x2F;2.1.5&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;rspec-core-3.4.1&#x2F;lib&#x2F;rspec&#x2F;core&#x2F;example_group.rb</code> in
                <code><strong>run</strong></code>
            </li>

            <li class="code system">
              
              <ol start="536"
                  class="pre-context" id="pre-71"
                  onclick="toggle(71);">
                
                <li class="pre-context-line"><code>      def self.run(reporter=RSpec::Core::NullReporter)
</code></li>
                
                <li class="pre-context-line"><code>        return if RSpec.world.wants_to_quit
</code></li>
                
                <li class="pre-context-line"><code>        reporter.example_group_started(self)
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>        should_run_context_hooks = descendant_filtered_examples.any?
</code></li>
                
                <li class="pre-context-line"><code>        begin
</code></li>
                
                <li class="pre-context-line"><code>          run_before_context_hooks(new(&#x27;before(:context) hook&#x27;)) if should_run_context_hooks
</code></li>
                
              </ol>
              

              <ol start="543" class="context" id="71"
                  onclick="toggle(71);">
                <li class="context-line" id="context-71"><code>          result_for_this_group = run_examples(reporter)</code></li>
              </ol>

              
              <ol start="544" class="post-context"
                  id="post-71" onclick="toggle(71);">
                
                <li class="post-context-line"><code>          results_for_descendants = ordering_strategy.order(children).map { |child| child.run(reporter) }.all?
</code></li>
                
                <li class="post-context-line"><code>          result_for_this_group &amp;&amp; results_for_descendants
</code></li>
                
                <li class="post-context-line"><code>        rescue Pending::SkipDeclaredInExample =&gt; ex
</code></li>
                
                <li class="post-context-line"><code>          for_filtered_examples(reporter) { |example| example.skip_with_exception(reporter, ex) }
</code></li>
                
                <li class="post-context-line"><code>          true
</code></li>
                
                <li class="post-context-line"><code>        rescue Support::AllExceptionsExceptOnesWeMustNotRescue =&gt; ex
</code></li>
                
                <li class="post-context-line"><code>          for_filtered_examples(reporter) { |example| example.fail_with_exception(reporter, ex) }
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;.rbenv&#x2F;versions&#x2F;2.1.5&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;rspec-core-3.4.1&#x2F;lib&#x2F;rspec&#x2F;core&#x2F;example_group.rb</code> in
                <code><strong>block in run</strong></code>
            </li>

            <li class="code system">
              
              <ol start="537"
                  class="pre-context" id="pre-72"
                  onclick="toggle(72);">
                
                <li class="pre-context-line"><code>        return if RSpec.world.wants_to_quit
</code></li>
                
                <li class="pre-context-line"><code>        reporter.example_group_started(self)
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>        should_run_context_hooks = descendant_filtered_examples.any?
</code></li>
                
                <li class="pre-context-line"><code>        begin
</code></li>
                
                <li class="pre-context-line"><code>          run_before_context_hooks(new(&#x27;before(:context) hook&#x27;)) if should_run_context_hooks
</code></li>
                
                <li class="pre-context-line"><code>          result_for_this_group = run_examples(reporter)
</code></li>
                
              </ol>
              

              <ol start="544" class="context" id="72"
                  onclick="toggle(72);">
                <li class="context-line" id="context-72"><code>          results_for_descendants = ordering_strategy.order(children).map { |child| child.run(reporter) }.all?</code></li>
              </ol>

              
              <ol start="545" class="post-context"
                  id="post-72" onclick="toggle(72);">
                
                <li class="post-context-line"><code>          result_for_this_group &amp;&amp; results_for_descendants
</code></li>
                
                <li class="post-context-line"><code>        rescue Pending::SkipDeclaredInExample =&gt; ex
</code></li>
                
                <li class="post-context-line"><code>          for_filtered_examples(reporter) { |example| example.skip_with_exception(reporter, ex) }
</code></li>
                
                <li class="post-context-line"><code>          true
</code></li>
                
                <li class="post-context-line"><code>        rescue Support::AllExceptionsExceptOnesWeMustNotRescue =&gt; ex
</code></li>
                
                <li class="post-context-line"><code>          for_filtered_examples(reporter) { |example| example.fail_with_exception(reporter, ex) }
</code></li>
                
                <li class="post-context-line"><code>          RSpec.world.wants_to_quit = true if reporter.fail_fast_limit_met?
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;.rbenv&#x2F;versions&#x2F;2.1.5&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;rspec-core-3.4.1&#x2F;lib&#x2F;rspec&#x2F;core&#x2F;example_group.rb</code> in
                <code><strong>map</strong></code>
            </li>

            <li class="code system">
              
              <ol start="537"
                  class="pre-context" id="pre-73"
                  onclick="toggle(73);">
                
                <li class="pre-context-line"><code>        return if RSpec.world.wants_to_quit
</code></li>
                
                <li class="pre-context-line"><code>        reporter.example_group_started(self)
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>        should_run_context_hooks = descendant_filtered_examples.any?
</code></li>
                
                <li class="pre-context-line"><code>        begin
</code></li>
                
                <li class="pre-context-line"><code>          run_before_context_hooks(new(&#x27;before(:context) hook&#x27;)) if should_run_context_hooks
</code></li>
                
                <li class="pre-context-line"><code>          result_for_this_group = run_examples(reporter)
</code></li>
                
              </ol>
              

              <ol start="544" class="context" id="73"
                  onclick="toggle(73);">
                <li class="context-line" id="context-73"><code>          results_for_descendants = ordering_strategy.order(children).map { |child| child.run(reporter) }.all?</code></li>
              </ol>

              
              <ol start="545" class="post-context"
                  id="post-73" onclick="toggle(73);">
                
                <li class="post-context-line"><code>          result_for_this_group &amp;&amp; results_for_descendants
</code></li>
                
                <li class="post-context-line"><code>        rescue Pending::SkipDeclaredInExample =&gt; ex
</code></li>
                
                <li class="post-context-line"><code>          for_filtered_examples(reporter) { |example| example.skip_with_exception(reporter, ex) }
</code></li>
                
                <li class="post-context-line"><code>          true
</code></li>
                
                <li class="post-context-line"><code>        rescue Support::AllExceptionsExceptOnesWeMustNotRescue =&gt; ex
</code></li>
                
                <li class="post-context-line"><code>          for_filtered_examples(reporter) { |example| example.fail_with_exception(reporter, ex) }
</code></li>
                
                <li class="post-context-line"><code>          RSpec.world.wants_to_quit = true if reporter.fail_fast_limit_met?
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;.rbenv&#x2F;versions&#x2F;2.1.5&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;rspec-core-3.4.1&#x2F;lib&#x2F;rspec&#x2F;core&#x2F;example_group.rb</code> in
                <code><strong>run</strong></code>
            </li>

            <li class="code system">
              
              <ol start="537"
                  class="pre-context" id="pre-74"
                  onclick="toggle(74);">
                
                <li class="pre-context-line"><code>        return if RSpec.world.wants_to_quit
</code></li>
                
                <li class="pre-context-line"><code>        reporter.example_group_started(self)
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>        should_run_context_hooks = descendant_filtered_examples.any?
</code></li>
                
                <li class="pre-context-line"><code>        begin
</code></li>
                
                <li class="pre-context-line"><code>          run_before_context_hooks(new(&#x27;before(:context) hook&#x27;)) if should_run_context_hooks
</code></li>
                
                <li class="pre-context-line"><code>          result_for_this_group = run_examples(reporter)
</code></li>
                
              </ol>
              

              <ol start="544" class="context" id="74"
                  onclick="toggle(74);">
                <li class="context-line" id="context-74"><code>          results_for_descendants = ordering_strategy.order(children).map { |child| child.run(reporter) }.all?</code></li>
              </ol>

              
              <ol start="545" class="post-context"
                  id="post-74" onclick="toggle(74);">
                
                <li class="post-context-line"><code>          result_for_this_group &amp;&amp; results_for_descendants
</code></li>
                
                <li class="post-context-line"><code>        rescue Pending::SkipDeclaredInExample =&gt; ex
</code></li>
                
                <li class="post-context-line"><code>          for_filtered_examples(reporter) { |example| example.skip_with_exception(reporter, ex) }
</code></li>
                
                <li class="post-context-line"><code>          true
</code></li>
                
                <li class="post-context-line"><code>        rescue Support::AllExceptionsExceptOnesWeMustNotRescue =&gt; ex
</code></li>
                
                <li class="post-context-line"><code>          for_filtered_examples(reporter) { |example| example.fail_with_exception(reporter, ex) }
</code></li>
                
                <li class="post-context-line"><code>          RSpec.world.wants_to_quit = true if reporter.fail_fast_limit_met?
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;.rbenv&#x2F;versions&#x2F;2.1.5&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;rspec-core-3.4.1&#x2F;lib&#x2F;rspec&#x2F;core&#x2F;example_group.rb</code> in
                <code><strong>block in run</strong></code>
            </li>

            <li class="code system">
              
              <ol start="537"
                  class="pre-context" id="pre-75"
                  onclick="toggle(75);">
                
                <li class="pre-context-line"><code>        return if RSpec.world.wants_to_quit
</code></li>
                
                <li class="pre-context-line"><code>        reporter.example_group_started(self)
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>        should_run_context_hooks = descendant_filtered_examples.any?
</code></li>
                
                <li class="pre-context-line"><code>        begin
</code></li>
                
                <li class="pre-context-line"><code>          run_before_context_hooks(new(&#x27;before(:context) hook&#x27;)) if should_run_context_hooks
</code></li>
                
                <li class="pre-context-line"><code>          result_for_this_group = run_examples(reporter)
</code></li>
                
              </ol>
              

              <ol start="544" class="context" id="75"
                  onclick="toggle(75);">
                <li class="context-line" id="context-75"><code>          results_for_descendants = ordering_strategy.order(children).map { |child| child.run(reporter) }.all?</code></li>
              </ol>

              
              <ol start="545" class="post-context"
                  id="post-75" onclick="toggle(75);">
                
                <li class="post-context-line"><code>          result_for_this_group &amp;&amp; results_for_descendants
</code></li>
                
                <li class="post-context-line"><code>        rescue Pending::SkipDeclaredInExample =&gt; ex
</code></li>
                
                <li class="post-context-line"><code>          for_filtered_examples(reporter) { |example| example.skip_with_exception(reporter, ex) }
</code></li>
                
                <li class="post-context-line"><code>          true
</code></li>
                
                <li class="post-context-line"><code>        rescue Support::AllExceptionsExceptOnesWeMustNotRescue =&gt; ex
</code></li>
                
                <li class="post-context-line"><code>          for_filtered_examples(reporter) { |example| example.fail_with_exception(reporter, ex) }
</code></li>
                
                <li class="post-context-line"><code>          RSpec.world.wants_to_quit = true if reporter.fail_fast_limit_met?
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;.rbenv&#x2F;versions&#x2F;2.1.5&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;rspec-core-3.4.1&#x2F;lib&#x2F;rspec&#x2F;core&#x2F;example_group.rb</code> in
                <code><strong>map</strong></code>
            </li>

            <li class="code system">
              
              <ol start="537"
                  class="pre-context" id="pre-76"
                  onclick="toggle(76);">
                
                <li class="pre-context-line"><code>        return if RSpec.world.wants_to_quit
</code></li>
                
                <li class="pre-context-line"><code>        reporter.example_group_started(self)
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>        should_run_context_hooks = descendant_filtered_examples.any?
</code></li>
                
                <li class="pre-context-line"><code>        begin
</code></li>
                
                <li class="pre-context-line"><code>          run_before_context_hooks(new(&#x27;before(:context) hook&#x27;)) if should_run_context_hooks
</code></li>
                
                <li class="pre-context-line"><code>          result_for_this_group = run_examples(reporter)
</code></li>
                
              </ol>
              

              <ol start="544" class="context" id="76"
                  onclick="toggle(76);">
                <li class="context-line" id="context-76"><code>          results_for_descendants = ordering_strategy.order(children).map { |child| child.run(reporter) }.all?</code></li>
              </ol>

              
              <ol start="545" class="post-context"
                  id="post-76" onclick="toggle(76);">
                
                <li class="post-context-line"><code>          result_for_this_group &amp;&amp; results_for_descendants
</code></li>
                
                <li class="post-context-line"><code>        rescue Pending::SkipDeclaredInExample =&gt; ex
</code></li>
                
                <li class="post-context-line"><code>          for_filtered_examples(reporter) { |example| example.skip_with_exception(reporter, ex) }
</code></li>
                
                <li class="post-context-line"><code>          true
</code></li>
                
                <li class="post-context-line"><code>        rescue Support::AllExceptionsExceptOnesWeMustNotRescue =&gt; ex
</code></li>
                
                <li class="post-context-line"><code>          for_filtered_examples(reporter) { |example| example.fail_with_exception(reporter, ex) }
</code></li>
                
                <li class="post-context-line"><code>          RSpec.world.wants_to_quit = true if reporter.fail_fast_limit_met?
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;.rbenv&#x2F;versions&#x2F;2.1.5&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;rspec-core-3.4.1&#x2F;lib&#x2F;rspec&#x2F;core&#x2F;example_group.rb</code> in
                <code><strong>run</strong></code>
            </li>

            <li class="code system">
              
              <ol start="537"
                  class="pre-context" id="pre-77"
                  onclick="toggle(77);">
                
                <li class="pre-context-line"><code>        return if RSpec.world.wants_to_quit
</code></li>
                
                <li class="pre-context-line"><code>        reporter.example_group_started(self)
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>        should_run_context_hooks = descendant_filtered_examples.any?
</code></li>
                
                <li class="pre-context-line"><code>        begin
</code></li>
                
                <li class="pre-context-line"><code>          run_before_context_hooks(new(&#x27;before(:context) hook&#x27;)) if should_run_context_hooks
</code></li>
                
                <li class="pre-context-line"><code>          result_for_this_group = run_examples(reporter)
</code></li>
                
              </ol>
              

              <ol start="544" class="context" id="77"
                  onclick="toggle(77);">
                <li class="context-line" id="context-77"><code>          results_for_descendants = ordering_strategy.order(children).map { |child| child.run(reporter) }.all?</code></li>
              </ol>

              
              <ol start="545" class="post-context"
                  id="post-77" onclick="toggle(77);">
                
                <li class="post-context-line"><code>          result_for_this_group &amp;&amp; results_for_descendants
</code></li>
                
                <li class="post-context-line"><code>        rescue Pending::SkipDeclaredInExample =&gt; ex
</code></li>
                
                <li class="post-context-line"><code>          for_filtered_examples(reporter) { |example| example.skip_with_exception(reporter, ex) }
</code></li>
                
                <li class="post-context-line"><code>          true
</code></li>
                
                <li class="post-context-line"><code>        rescue Support::AllExceptionsExceptOnesWeMustNotRescue =&gt; ex
</code></li>
                
                <li class="post-context-line"><code>          for_filtered_examples(reporter) { |example| example.fail_with_exception(reporter, ex) }
</code></li>
                
                <li class="post-context-line"><code>          RSpec.world.wants_to_quit = true if reporter.fail_fast_limit_met?
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;.rbenv&#x2F;versions&#x2F;2.1.5&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;rspec-core-3.4.1&#x2F;lib&#x2F;rspec&#x2F;core&#x2F;example_group.rb</code> in
                <code><strong>block in run</strong></code>
            </li>

            <li class="code system">
              
              <ol start="537"
                  class="pre-context" id="pre-78"
                  onclick="toggle(78);">
                
                <li class="pre-context-line"><code>        return if RSpec.world.wants_to_quit
</code></li>
                
                <li class="pre-context-line"><code>        reporter.example_group_started(self)
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>        should_run_context_hooks = descendant_filtered_examples.any?
</code></li>
                
                <li class="pre-context-line"><code>        begin
</code></li>
                
                <li class="pre-context-line"><code>          run_before_context_hooks(new(&#x27;before(:context) hook&#x27;)) if should_run_context_hooks
</code></li>
                
                <li class="pre-context-line"><code>          result_for_this_group = run_examples(reporter)
</code></li>
                
              </ol>
              

              <ol start="544" class="context" id="78"
                  onclick="toggle(78);">
                <li class="context-line" id="context-78"><code>          results_for_descendants = ordering_strategy.order(children).map { |child| child.run(reporter) }.all?</code></li>
              </ol>

              
              <ol start="545" class="post-context"
                  id="post-78" onclick="toggle(78);">
                
                <li class="post-context-line"><code>          result_for_this_group &amp;&amp; results_for_descendants
</code></li>
                
                <li class="post-context-line"><code>        rescue Pending::SkipDeclaredInExample =&gt; ex
</code></li>
                
                <li class="post-context-line"><code>          for_filtered_examples(reporter) { |example| example.skip_with_exception(reporter, ex) }
</code></li>
                
                <li class="post-context-line"><code>          true
</code></li>
                
                <li class="post-context-line"><code>        rescue Support::AllExceptionsExceptOnesWeMustNotRescue =&gt; ex
</code></li>
                
                <li class="post-context-line"><code>          for_filtered_examples(reporter) { |example| example.fail_with_exception(reporter, ex) }
</code></li>
                
                <li class="post-context-line"><code>          RSpec.world.wants_to_quit = true if reporter.fail_fast_limit_met?
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;.rbenv&#x2F;versions&#x2F;2.1.5&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;rspec-core-3.4.1&#x2F;lib&#x2F;rspec&#x2F;core&#x2F;example_group.rb</code> in
                <code><strong>map</strong></code>
            </li>

            <li class="code system">
              
              <ol start="537"
                  class="pre-context" id="pre-79"
                  onclick="toggle(79);">
                
                <li class="pre-context-line"><code>        return if RSpec.world.wants_to_quit
</code></li>
                
                <li class="pre-context-line"><code>        reporter.example_group_started(self)
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>        should_run_context_hooks = descendant_filtered_examples.any?
</code></li>
                
                <li class="pre-context-line"><code>        begin
</code></li>
                
                <li class="pre-context-line"><code>          run_before_context_hooks(new(&#x27;before(:context) hook&#x27;)) if should_run_context_hooks
</code></li>
                
                <li class="pre-context-line"><code>          result_for_this_group = run_examples(reporter)
</code></li>
                
              </ol>
              

              <ol start="544" class="context" id="79"
                  onclick="toggle(79);">
                <li class="context-line" id="context-79"><code>          results_for_descendants = ordering_strategy.order(children).map { |child| child.run(reporter) }.all?</code></li>
              </ol>

              
              <ol start="545" class="post-context"
                  id="post-79" onclick="toggle(79);">
                
                <li class="post-context-line"><code>          result_for_this_group &amp;&amp; results_for_descendants
</code></li>
                
                <li class="post-context-line"><code>        rescue Pending::SkipDeclaredInExample =&gt; ex
</code></li>
                
                <li class="post-context-line"><code>          for_filtered_examples(reporter) { |example| example.skip_with_exception(reporter, ex) }
</code></li>
                
                <li class="post-context-line"><code>          true
</code></li>
                
                <li class="post-context-line"><code>        rescue Support::AllExceptionsExceptOnesWeMustNotRescue =&gt; ex
</code></li>
                
                <li class="post-context-line"><code>          for_filtered_examples(reporter) { |example| example.fail_with_exception(reporter, ex) }
</code></li>
                
                <li class="post-context-line"><code>          RSpec.world.wants_to_quit = true if reporter.fail_fast_limit_met?
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;.rbenv&#x2F;versions&#x2F;2.1.5&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;rspec-core-3.4.1&#x2F;lib&#x2F;rspec&#x2F;core&#x2F;example_group.rb</code> in
                <code><strong>run</strong></code>
            </li>

            <li class="code system">
              
              <ol start="537"
                  class="pre-context" id="pre-80"
                  onclick="toggle(80);">
                
                <li class="pre-context-line"><code>        return if RSpec.world.wants_to_quit
</code></li>
                
                <li class="pre-context-line"><code>        reporter.example_group_started(self)
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>        should_run_context_hooks = descendant_filtered_examples.any?
</code></li>
                
                <li class="pre-context-line"><code>        begin
</code></li>
                
                <li class="pre-context-line"><code>          run_before_context_hooks(new(&#x27;before(:context) hook&#x27;)) if should_run_context_hooks
</code></li>
                
                <li class="pre-context-line"><code>          result_for_this_group = run_examples(reporter)
</code></li>
                
              </ol>
              

              <ol start="544" class="context" id="80"
                  onclick="toggle(80);">
                <li class="context-line" id="context-80"><code>          results_for_descendants = ordering_strategy.order(children).map { |child| child.run(reporter) }.all?</code></li>
              </ol>

              
              <ol start="545" class="post-context"
                  id="post-80" onclick="toggle(80);">
                
                <li class="post-context-line"><code>          result_for_this_group &amp;&amp; results_for_descendants
</code></li>
                
                <li class="post-context-line"><code>        rescue Pending::SkipDeclaredInExample =&gt; ex
</code></li>
                
                <li class="post-context-line"><code>          for_filtered_examples(reporter) { |example| example.skip_with_exception(reporter, ex) }
</code></li>
                
                <li class="post-context-line"><code>          true
</code></li>
                
                <li class="post-context-line"><code>        rescue Support::AllExceptionsExceptOnesWeMustNotRescue =&gt; ex
</code></li>
                
                <li class="post-context-line"><code>          for_filtered_examples(reporter) { |example| example.fail_with_exception(reporter, ex) }
</code></li>
                
                <li class="post-context-line"><code>          RSpec.world.wants_to_quit = true if reporter.fail_fast_limit_met?
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;.rbenv&#x2F;versions&#x2F;2.1.5&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;rspec-core-3.4.1&#x2F;lib&#x2F;rspec&#x2F;core&#x2F;example_group.rb</code> in
                <code><strong>block in run</strong></code>
            </li>

            <li class="code system">
              
              <ol start="537"
                  class="pre-context" id="pre-81"
                  onclick="toggle(81);">
                
                <li class="pre-context-line"><code>        return if RSpec.world.wants_to_quit
</code></li>
                
                <li class="pre-context-line"><code>        reporter.example_group_started(self)
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>        should_run_context_hooks = descendant_filtered_examples.any?
</code></li>
                
                <li class="pre-context-line"><code>        begin
</code></li>
                
                <li class="pre-context-line"><code>          run_before_context_hooks(new(&#x27;before(:context) hook&#x27;)) if should_run_context_hooks
</code></li>
                
                <li class="pre-context-line"><code>          result_for_this_group = run_examples(reporter)
</code></li>
                
              </ol>
              

              <ol start="544" class="context" id="81"
                  onclick="toggle(81);">
                <li class="context-line" id="context-81"><code>          results_for_descendants = ordering_strategy.order(children).map { |child| child.run(reporter) }.all?</code></li>
              </ol>

              
              <ol start="545" class="post-context"
                  id="post-81" onclick="toggle(81);">
                
                <li class="post-context-line"><code>          result_for_this_group &amp;&amp; results_for_descendants
</code></li>
                
                <li class="post-context-line"><code>        rescue Pending::SkipDeclaredInExample =&gt; ex
</code></li>
                
                <li class="post-context-line"><code>          for_filtered_examples(reporter) { |example| example.skip_with_exception(reporter, ex) }
</code></li>
                
                <li class="post-context-line"><code>          true
</code></li>
                
                <li class="post-context-line"><code>        rescue Support::AllExceptionsExceptOnesWeMustNotRescue =&gt; ex
</code></li>
                
                <li class="post-context-line"><code>          for_filtered_examples(reporter) { |example| example.fail_with_exception(reporter, ex) }
</code></li>
                
                <li class="post-context-line"><code>          RSpec.world.wants_to_quit = true if reporter.fail_fast_limit_met?
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;.rbenv&#x2F;versions&#x2F;2.1.5&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;rspec-core-3.4.1&#x2F;lib&#x2F;rspec&#x2F;core&#x2F;example_group.rb</code> in
                <code><strong>map</strong></code>
            </li>

            <li class="code system">
              
              <ol start="537"
                  class="pre-context" id="pre-82"
                  onclick="toggle(82);">
                
                <li class="pre-context-line"><code>        return if RSpec.world.wants_to_quit
</code></li>
                
                <li class="pre-context-line"><code>        reporter.example_group_started(self)
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>        should_run_context_hooks = descendant_filtered_examples.any?
</code></li>
                
                <li class="pre-context-line"><code>        begin
</code></li>
                
                <li class="pre-context-line"><code>          run_before_context_hooks(new(&#x27;before(:context) hook&#x27;)) if should_run_context_hooks
</code></li>
                
                <li class="pre-context-line"><code>          result_for_this_group = run_examples(reporter)
</code></li>
                
              </ol>
              

              <ol start="544" class="context" id="82"
                  onclick="toggle(82);">
                <li class="context-line" id="context-82"><code>          results_for_descendants = ordering_strategy.order(children).map { |child| child.run(reporter) }.all?</code></li>
              </ol>

              
              <ol start="545" class="post-context"
                  id="post-82" onclick="toggle(82);">
                
                <li class="post-context-line"><code>          result_for_this_group &amp;&amp; results_for_descendants
</code></li>
                
                <li class="post-context-line"><code>        rescue Pending::SkipDeclaredInExample =&gt; ex
</code></li>
                
                <li class="post-context-line"><code>          for_filtered_examples(reporter) { |example| example.skip_with_exception(reporter, ex) }
</code></li>
                
                <li class="post-context-line"><code>          true
</code></li>
                
                <li class="post-context-line"><code>        rescue Support::AllExceptionsExceptOnesWeMustNotRescue =&gt; ex
</code></li>
                
                <li class="post-context-line"><code>          for_filtered_examples(reporter) { |example| example.fail_with_exception(reporter, ex) }
</code></li>
                
                <li class="post-context-line"><code>          RSpec.world.wants_to_quit = true if reporter.fail_fast_limit_met?
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;.rbenv&#x2F;versions&#x2F;2.1.5&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;rspec-core-3.4.1&#x2F;lib&#x2F;rspec&#x2F;core&#x2F;example_group.rb</code> in
                <code><strong>run</strong></code>
            </li>

            <li class="code system">
              
              <ol start="537"
                  class="pre-context" id="pre-83"
                  onclick="toggle(83);">
                
                <li class="pre-context-line"><code>        return if RSpec.world.wants_to_quit
</code></li>
                
                <li class="pre-context-line"><code>        reporter.example_group_started(self)
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>        should_run_context_hooks = descendant_filtered_examples.any?
</code></li>
                
                <li class="pre-context-line"><code>        begin
</code></li>
                
                <li class="pre-context-line"><code>          run_before_context_hooks(new(&#x27;before(:context) hook&#x27;)) if should_run_context_hooks
</code></li>
                
                <li class="pre-context-line"><code>          result_for_this_group = run_examples(reporter)
</code></li>
                
              </ol>
              

              <ol start="544" class="context" id="83"
                  onclick="toggle(83);">
                <li class="context-line" id="context-83"><code>          results_for_descendants = ordering_strategy.order(children).map { |child| child.run(reporter) }.all?</code></li>
              </ol>

              
              <ol start="545" class="post-context"
                  id="post-83" onclick="toggle(83);">
                
                <li class="post-context-line"><code>          result_for_this_group &amp;&amp; results_for_descendants
</code></li>
                
                <li class="post-context-line"><code>        rescue Pending::SkipDeclaredInExample =&gt; ex
</code></li>
                
                <li class="post-context-line"><code>          for_filtered_examples(reporter) { |example| example.skip_with_exception(reporter, ex) }
</code></li>
                
                <li class="post-context-line"><code>          true
</code></li>
                
                <li class="post-context-line"><code>        rescue Support::AllExceptionsExceptOnesWeMustNotRescue =&gt; ex
</code></li>
                
                <li class="post-context-line"><code>          for_filtered_examples(reporter) { |example| example.fail_with_exception(reporter, ex) }
</code></li>
                
                <li class="post-context-line"><code>          RSpec.world.wants_to_quit = true if reporter.fail_fast_limit_met?
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;.rbenv&#x2F;versions&#x2F;2.1.5&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;rspec-core-3.4.1&#x2F;lib&#x2F;rspec&#x2F;core&#x2F;runner.rb</code> in
                <code><strong>block (3 levels) in run_specs</strong></code>
            </li>

            <li class="code system">
              
              <ol start="108"
                  class="pre-context" id="pre-84"
                  onclick="toggle(84);">
                
                <li class="pre-context-line"><code>      # @param example_groups [Array&lt;RSpec::Core::ExampleGroup&gt;] groups to run
</code></li>
                
                <li class="pre-context-line"><code>      # @return [Fixnum] exit status code. 0 if all specs passed,
</code></li>
                
                <li class="pre-context-line"><code>      #   or the configured failure exit code (1 by default) if specs
</code></li>
                
                <li class="pre-context-line"><code>      #   failed.
</code></li>
                
                <li class="pre-context-line"><code>      def run_specs(example_groups)
</code></li>
                
                <li class="pre-context-line"><code>        @configuration.reporter.report(@world.example_count(example_groups)) do |reporter|
</code></li>
                
                <li class="pre-context-line"><code>          @configuration.with_suite_hooks do
</code></li>
                
              </ol>
              

              <ol start="115" class="context" id="84"
                  onclick="toggle(84);">
                <li class="context-line" id="context-84"><code>            example_groups.map { |g| g.run(reporter) }.all? ? 0 : @configuration.failure_exit_code</code></li>
              </ol>

              
              <ol start="116" class="post-context"
                  id="post-84" onclick="toggle(84);">
                
                <li class="post-context-line"><code>          end
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    private
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      def persist_example_statuses
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;.rbenv&#x2F;versions&#x2F;2.1.5&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;rspec-core-3.4.1&#x2F;lib&#x2F;rspec&#x2F;core&#x2F;runner.rb</code> in
                <code><strong>map</strong></code>
            </li>

            <li class="code system">
              
              <ol start="108"
                  class="pre-context" id="pre-85"
                  onclick="toggle(85);">
                
                <li class="pre-context-line"><code>      # @param example_groups [Array&lt;RSpec::Core::ExampleGroup&gt;] groups to run
</code></li>
                
                <li class="pre-context-line"><code>      # @return [Fixnum] exit status code. 0 if all specs passed,
</code></li>
                
                <li class="pre-context-line"><code>      #   or the configured failure exit code (1 by default) if specs
</code></li>
                
                <li class="pre-context-line"><code>      #   failed.
</code></li>
                
                <li class="pre-context-line"><code>      def run_specs(example_groups)
</code></li>
                
                <li class="pre-context-line"><code>        @configuration.reporter.report(@world.example_count(example_groups)) do |reporter|
</code></li>
                
                <li class="pre-context-line"><code>          @configuration.with_suite_hooks do
</code></li>
                
              </ol>
              

              <ol start="115" class="context" id="85"
                  onclick="toggle(85);">
                <li class="context-line" id="context-85"><code>            example_groups.map { |g| g.run(reporter) }.all? ? 0 : @configuration.failure_exit_code</code></li>
              </ol>

              
              <ol start="116" class="post-context"
                  id="post-85" onclick="toggle(85);">
                
                <li class="post-context-line"><code>          end
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    private
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      def persist_example_statuses
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;.rbenv&#x2F;versions&#x2F;2.1.5&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;rspec-core-3.4.1&#x2F;lib&#x2F;rspec&#x2F;core&#x2F;runner.rb</code> in
                <code><strong>block (2 levels) in run_specs</strong></code>
            </li>

            <li class="code system">
              
              <ol start="108"
                  class="pre-context" id="pre-86"
                  onclick="toggle(86);">
                
                <li class="pre-context-line"><code>      # @param example_groups [Array&lt;RSpec::Core::ExampleGroup&gt;] groups to run
</code></li>
                
                <li class="pre-context-line"><code>      # @return [Fixnum] exit status code. 0 if all specs passed,
</code></li>
                
                <li class="pre-context-line"><code>      #   or the configured failure exit code (1 by default) if specs
</code></li>
                
                <li class="pre-context-line"><code>      #   failed.
</code></li>
                
                <li class="pre-context-line"><code>      def run_specs(example_groups)
</code></li>
                
                <li class="pre-context-line"><code>        @configuration.reporter.report(@world.example_count(example_groups)) do |reporter|
</code></li>
                
                <li class="pre-context-line"><code>          @configuration.with_suite_hooks do
</code></li>
                
              </ol>
              

              <ol start="115" class="context" id="86"
                  onclick="toggle(86);">
                <li class="context-line" id="context-86"><code>            example_groups.map { |g| g.run(reporter) }.all? ? 0 : @configuration.failure_exit_code</code></li>
              </ol>

              
              <ol start="116" class="post-context"
                  id="post-86" onclick="toggle(86);">
                
                <li class="post-context-line"><code>          end
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    private
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      def persist_example_statuses
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;.rbenv&#x2F;versions&#x2F;2.1.5&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;rspec-core-3.4.1&#x2F;lib&#x2F;rspec&#x2F;core&#x2F;configuration.rb</code> in
                <code><strong>with_suite_hooks</strong></code>
            </li>

            <li class="code system">
              
              <ol start="1673"
                  class="pre-context" id="pre-87"
                  onclick="toggle(87);">
                
                <li class="pre-context-line"><code>      # @private
</code></li>
                
                <li class="pre-context-line"><code>      def with_suite_hooks
</code></li>
                
                <li class="pre-context-line"><code>        return yield if dry_run?
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>        hook_context = SuiteHookContext.new
</code></li>
                
                <li class="pre-context-line"><code>        begin
</code></li>
                
                <li class="pre-context-line"><code>          run_hooks_with(@before_suite_hooks, hook_context)
</code></li>
                
              </ol>
              

              <ol start="1680" class="context" id="87"
                  onclick="toggle(87);">
                <li class="context-line" id="context-87"><code>          yield</code></li>
              </ol>

              
              <ol start="1681" class="post-context"
                  id="post-87" onclick="toggle(87);">
                
                <li class="post-context-line"><code>        ensure
</code></li>
                
                <li class="post-context-line"><code>          run_hooks_with(@after_suite_hooks, hook_context)
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      # @private
</code></li>
                
                <li class="post-context-line"><code>      # Holds the various registered hooks. Here we use a FilterableItemRepository
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;.rbenv&#x2F;versions&#x2F;2.1.5&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;rspec-core-3.4.1&#x2F;lib&#x2F;rspec&#x2F;core&#x2F;runner.rb</code> in
                <code><strong>block in run_specs</strong></code>
            </li>

            <li class="code system">
              
              <ol start="107"
                  class="pre-context" id="pre-88"
                  onclick="toggle(88);">
                
                <li class="pre-context-line"><code>      #
</code></li>
                
                <li class="pre-context-line"><code>      # @param example_groups [Array&lt;RSpec::Core::ExampleGroup&gt;] groups to run
</code></li>
                
                <li class="pre-context-line"><code>      # @return [Fixnum] exit status code. 0 if all specs passed,
</code></li>
                
                <li class="pre-context-line"><code>      #   or the configured failure exit code (1 by default) if specs
</code></li>
                
                <li class="pre-context-line"><code>      #   failed.
</code></li>
                
                <li class="pre-context-line"><code>      def run_specs(example_groups)
</code></li>
                
                <li class="pre-context-line"><code>        @configuration.reporter.report(@world.example_count(example_groups)) do |reporter|
</code></li>
                
              </ol>
              

              <ol start="114" class="context" id="88"
                  onclick="toggle(88);">
                <li class="context-line" id="context-88"><code>          @configuration.with_suite_hooks do</code></li>
              </ol>

              
              <ol start="115" class="post-context"
                  id="post-88" onclick="toggle(88);">
                
                <li class="post-context-line"><code>            example_groups.map { |g| g.run(reporter) }.all? ? 0 : @configuration.failure_exit_code
</code></li>
                
                <li class="post-context-line"><code>          end
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    private
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;.rbenv&#x2F;versions&#x2F;2.1.5&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;rspec-core-3.4.1&#x2F;lib&#x2F;rspec&#x2F;core&#x2F;reporter.rb</code> in
                <code><strong>report</strong></code>
            </li>

            <li class="code system">
              
              <ol start="70"
                  class="pre-context" id="pre-89"
                  onclick="toggle(89);">
                
                <li class="pre-context-line"><code>    #     reporter.report(group.examples.size) do |r|
</code></li>
                
                <li class="pre-context-line"><code>    #       example_groups.map {|g| g.run(r) }
</code></li>
                
                <li class="pre-context-line"><code>    #     end
</code></li>
                
                <li class="pre-context-line"><code>    #
</code></li>
                
                <li class="pre-context-line"><code>    def report(expected_example_count)
</code></li>
                
                <li class="pre-context-line"><code>      start(expected_example_count)
</code></li>
                
                <li class="pre-context-line"><code>      begin
</code></li>
                
              </ol>
              

              <ol start="77" class="context" id="89"
                  onclick="toggle(89);">
                <li class="context-line" id="context-89"><code>        yield self</code></li>
              </ol>

              
              <ol start="78" class="post-context"
                  id="post-89" onclick="toggle(89);">
                
                <li class="post-context-line"><code>      ensure
</code></li>
                
                <li class="post-context-line"><code>        finish
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    # @private
</code></li>
                
                <li class="post-context-line"><code>    def start(expected_example_count, time=RSpec::Core::Time.now)
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;.rbenv&#x2F;versions&#x2F;2.1.5&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;rspec-core-3.4.1&#x2F;lib&#x2F;rspec&#x2F;core&#x2F;runner.rb</code> in
                <code><strong>run_specs</strong></code>
            </li>

            <li class="code system">
              
              <ol start="106"
                  class="pre-context" id="pre-90"
                  onclick="toggle(90);">
                
                <li class="pre-context-line"><code>      # Runs the provided example groups.
</code></li>
                
                <li class="pre-context-line"><code>      #
</code></li>
                
                <li class="pre-context-line"><code>      # @param example_groups [Array&lt;RSpec::Core::ExampleGroup&gt;] groups to run
</code></li>
                
                <li class="pre-context-line"><code>      # @return [Fixnum] exit status code. 0 if all specs passed,
</code></li>
                
                <li class="pre-context-line"><code>      #   or the configured failure exit code (1 by default) if specs
</code></li>
                
                <li class="pre-context-line"><code>      #   failed.
</code></li>
                
                <li class="pre-context-line"><code>      def run_specs(example_groups)
</code></li>
                
              </ol>
              

              <ol start="113" class="context" id="90"
                  onclick="toggle(90);">
                <li class="context-line" id="context-90"><code>        @configuration.reporter.report(@world.example_count(example_groups)) do |reporter|</code></li>
              </ol>

              
              <ol start="114" class="post-context"
                  id="post-90" onclick="toggle(90);">
                
                <li class="post-context-line"><code>          @configuration.with_suite_hooks do
</code></li>
                
                <li class="post-context-line"><code>            example_groups.map { |g| g.run(reporter) }.all? ? 0 : @configuration.failure_exit_code
</code></li>
                
                <li class="post-context-line"><code>          end
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    private
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;.rbenv&#x2F;versions&#x2F;2.1.5&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;rspec-core-3.4.1&#x2F;lib&#x2F;rspec&#x2F;core&#x2F;runner.rb</code> in
                <code><strong>run</strong></code>
            </li>

            <li class="code system">
              
              <ol start="82"
                  class="pre-context" id="pre-91"
                  onclick="toggle(91);">
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      # Configures and runs a spec suite.
</code></li>
                
                <li class="pre-context-line"><code>      #
</code></li>
                
                <li class="pre-context-line"><code>      # @param err [IO] error stream
</code></li>
                
                <li class="pre-context-line"><code>      # @param out [IO] output stream
</code></li>
                
                <li class="pre-context-line"><code>      def run(err, out)
</code></li>
                
                <li class="pre-context-line"><code>        setup(err, out)
</code></li>
                
              </ol>
              

              <ol start="89" class="context" id="91"
                  onclick="toggle(91);">
                <li class="context-line" id="context-91"><code>        run_specs(@world.ordered_example_groups).tap do</code></li>
              </ol>

              
              <ol start="90" class="post-context"
                  id="post-91" onclick="toggle(91);">
                
                <li class="post-context-line"><code>          persist_example_statuses
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      # Wires together the various configuration objects and state holders.
</code></li>
                
                <li class="post-context-line"><code>      #
</code></li>
                
                <li class="post-context-line"><code>      # @param err [IO] error stream
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;.rbenv&#x2F;versions&#x2F;2.1.5&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;rspec-core-3.4.1&#x2F;lib&#x2F;rspec&#x2F;core&#x2F;runner.rb</code> in
                <code><strong>run</strong></code>
            </li>

            <li class="code system">
              
              <ol start="66"
                  class="pre-context" id="pre-92"
                  onclick="toggle(92);">
                
                <li class="pre-context-line"><code>          begin
</code></li>
                
                <li class="pre-context-line"><code>            DRbRunner.new(options).run(err, out)
</code></li>
                
                <li class="pre-context-line"><code>          rescue DRb::DRbConnError
</code></li>
                
                <li class="pre-context-line"><code>            err.puts &quot;No DRb server is running. Running in local process instead ...&quot;
</code></li>
                
                <li class="pre-context-line"><code>            new(options).run(err, out)
</code></li>
                
                <li class="pre-context-line"><code>          end
</code></li>
                
                <li class="pre-context-line"><code>        else
</code></li>
                
              </ol>
              

              <ol start="73" class="context" id="92"
                  onclick="toggle(92);">
                <li class="context-line" id="context-92"><code>          new(options).run(err, out)</code></li>
              </ol>

              
              <ol start="74" class="post-context"
                  id="post-92" onclick="toggle(92);">
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      def initialize(options, configuration=RSpec.configuration, world=RSpec.world)
</code></li>
                
                <li class="post-context-line"><code>        @options       = options
</code></li>
                
                <li class="post-context-line"><code>        @configuration = configuration
</code></li>
                
                <li class="post-context-line"><code>        @world         = world
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;.rbenv&#x2F;versions&#x2F;2.1.5&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;pact-1.9.0&#x2F;lib&#x2F;pact&#x2F;provider&#x2F;pact_spec_runner.rb</code> in
                <code><strong>run_specs</strong></code>
            </li>

            <li class="code system">
              
              <ol start="82"
                  class="pre-context" id="pre-93"
                  onclick="toggle(93);">
                
                <li class="pre-context-line"><code>          Pact::Provider::Help::Write.call(jsons)
</code></li>
                
                <li class="pre-context-line"><code>        end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      def run_specs
</code></li>
                
                <li class="pre-context-line"><code>        exit_code = if Pact::RSpec.runner_defined?
</code></li>
                
              </ol>
              

              <ol start="89" class="context" id="93"
                  onclick="toggle(93);">
                <li class="context-line" id="context-93"><code>          ::RSpec::Core::Runner.run(rspec_runner_options)</code></li>
              </ol>

              
              <ol start="90" class="post-context"
                  id="post-93" onclick="toggle(93);">
                
                <li class="post-context-line"><code>        else
</code></li>
                
                <li class="post-context-line"><code>          ::RSpec::Core::CommandLine.new(NoConfigurationOptions.new)
</code></li>
                
                <li class="post-context-line"><code>            .run(::RSpec.configuration.output_stream, ::RSpec.configuration.error_stream)
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>        exit_code
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;.rbenv&#x2F;versions&#x2F;2.1.5&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;pact-1.9.0&#x2F;lib&#x2F;pact&#x2F;provider&#x2F;pact_spec_runner.rb</code> in
                <code><strong>run</strong></code>
            </li>

            <li class="code system">
              
              <ol start="27"
                  class="pre-context" id="pre-94"
                  onclick="toggle(94);">
                
                <li class="pre-context-line"><code>        @results = nil
</code></li>
                
                <li class="pre-context-line"><code>      end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      def run
</code></li>
                
                <li class="pre-context-line"><code>        begin
</code></li>
                
                <li class="pre-context-line"><code>          configure_rspec
</code></li>
                
                <li class="pre-context-line"><code>          initialize_specs
</code></li>
                
              </ol>
              

              <ol start="34" class="context" id="94"
                  onclick="toggle(94);">
                <li class="context-line" id="context-94"><code>          run_specs</code></li>
              </ol>

              
              <ol start="35" class="post-context"
                  id="post-94" onclick="toggle(94);">
                
                <li class="post-context-line"><code>        ensure
</code></li>
                
                <li class="post-context-line"><code>          ::RSpec.reset
</code></li>
                
                <li class="post-context-line"><code>          Pact.clear_provider_world
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      private
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;.rbenv&#x2F;versions&#x2F;2.1.5&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;pact-1.9.0&#x2F;lib&#x2F;pact&#x2F;cli&#x2F;run_pact_verification.rb</code> in
                <code><strong>run_with_configured_pacts</strong></code>
            </li>

            <li class="code system">
              
              <ol start="59"
                  class="pre-context" id="pre-95"
                  onclick="toggle(95);">
                
                <li class="pre-context-line"><code>        pact_uri = ::Pact::Provider::PactURI.new(options[:pact_uri], pact_repository_uri_options)
</code></li>
                
                <li class="pre-context-line"><code>        Pact::Provider::PactSpecRunner.new([pact_uri], pact_spec_options).run
</code></li>
                
                <li class="pre-context-line"><code>      end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      def run_with_configured_pacts
</code></li>
                
                <li class="pre-context-line"><code>        pact_urls = Pact.provider_world.pact_urls
</code></li>
                
                <li class="pre-context-line"><code>        raise &quot;Please configure a pact to verify&quot; if pact_urls.empty?
</code></li>
                
              </ol>
              

              <ol start="66" class="context" id="95"
                  onclick="toggle(95);">
                <li class="context-line" id="context-95"><code>        Pact::Provider::PactSpecRunner.new(pact_urls, pact_spec_options).run</code></li>
              </ol>

              
              <ol start="67" class="post-context"
                  id="post-95" onclick="toggle(95);">
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      def pact_spec_options
</code></li>
                
                <li class="post-context-line"><code>        {
</code></li>
                
                <li class="post-context-line"><code>          full_backtrace: options[:backtrace],
</code></li>
                
                <li class="post-context-line"><code>          criteria: SpecCriteria.call(options)
</code></li>
                
                <li class="post-context-line"><code>        }
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;.rbenv&#x2F;versions&#x2F;2.1.5&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;pact-1.9.0&#x2F;lib&#x2F;pact&#x2F;cli&#x2F;run_pact_verification.rb</code> in
                <code><strong>run_specs</strong></code>
            </li>

            <li class="code system">
              
              <ol start="43"
                  class="pre-context" id="pre-96"
                  onclick="toggle(96);">
                
                <li class="pre-context-line"><code>        load options[:pact_helper]
</code></li>
                
                <li class="pre-context-line"><code>      end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      def run_specs
</code></li>
                
                <li class="pre-context-line"><code>        exit_code = if options[:pact_uri]
</code></li>
                
                <li class="pre-context-line"><code>          run_with_pact_uri
</code></li>
                
                <li class="pre-context-line"><code>        else
</code></li>
                
              </ol>
              

              <ol start="50" class="context" id="96"
                  onclick="toggle(96);">
                <li class="context-line" id="context-96"><code>          run_with_configured_pacts</code></li>
              </ol>

              
              <ol start="51" class="post-context"
                  id="post-96" onclick="toggle(96);">
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>        exit exit_code
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      def run_with_pact_uri
</code></li>
                
                <li class="post-context-line"><code>        pact_repository_uri_options = {}
</code></li>
                
                <li class="post-context-line"><code>        pact_repository_uri_options[:username] = options[:pact_broker_username] if options[:pact_broker_username]
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;.rbenv&#x2F;versions&#x2F;2.1.5&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;pact-1.9.0&#x2F;lib&#x2F;pact&#x2F;cli&#x2F;run_pact_verification.rb</code> in
                <code><strong>call</strong></code>
            </li>

            <li class="code system">
              
              <ol start="15"
                  class="pre-context" id="pre-97"
                  onclick="toggle(97);">
                
                <li class="pre-context-line"><code>      end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      def call
</code></li>
                
                <li class="pre-context-line"><code>        initialize_rspec
</code></li>
                
                <li class="pre-context-line"><code>        setup_load_path
</code></li>
                
                <li class="pre-context-line"><code>        load_pact_helper
</code></li>
                
              </ol>
              

              <ol start="22" class="context" id="97"
                  onclick="toggle(97);">
                <li class="context-line" id="context-97"><code>        run_specs</code></li>
              </ol>

              
              <ol start="23" class="post-context"
                  id="post-97" onclick="toggle(97);">
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      private
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      def initialize_rspec
</code></li>
                
                <li class="post-context-line"><code>        # With RSpec3, if the pact_helper loads a library that adds its own formatter before we set one,
</code></li>
                
                <li class="post-context-line"><code>        # we will get a ProgressFormatter too, and get little dots sprinkled throughout our output.
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;.rbenv&#x2F;versions&#x2F;2.1.5&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;pact-1.9.0&#x2F;lib&#x2F;pact&#x2F;cli&#x2F;run_pact_verification.rb</code> in
                <code><strong>call</strong></code>
            </li>

            <li class="code system">
              
              <ol start="7"
                  class="pre-context" id="pre-98"
                  onclick="toggle(98);">
                
                <li class="pre-context-line"><code>      attr_reader :options
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      def initialize options
</code></li>
                
                <li class="pre-context-line"><code>        @options = options
</code></li>
                
                <li class="pre-context-line"><code>      end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      def self.call options
</code></li>
                
              </ol>
              

              <ol start="14" class="context" id="98"
                  onclick="toggle(98);">
                <li class="context-line" id="context-98"><code>        new(options).call</code></li>
              </ol>

              
              <ol start="15" class="post-context"
                  id="post-98" onclick="toggle(98);">
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      def call
</code></li>
                
                <li class="post-context-line"><code>        initialize_rspec
</code></li>
                
                <li class="post-context-line"><code>        setup_load_path
</code></li>
                
                <li class="post-context-line"><code>        load_pact_helper
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;.rbenv&#x2F;versions&#x2F;2.1.5&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;pact-1.9.0&#x2F;lib&#x2F;pact&#x2F;cli.rb</code> in
                <code><strong>verify</strong></code>
            </li>

            <li class="code system">
              
              <ol start="11"
                  class="pre-context" id="pre-99"
                  onclick="toggle(99);">
                
                <li class="pre-context-line"><code>    method_option :pact_broker_password, aliases: &quot;-w&quot;, desc: &quot;Pact broker password&quot;
</code></li>
                
                <li class="pre-context-line"><code>    method_option :backtrace, aliases: &quot;-b&quot;, desc: &quot;Show full backtrace&quot;, :default =&gt; false, :type =&gt; :boolean
</code></li>
                
                <li class="pre-context-line"><code>    method_option :description, aliases: &quot;-d&quot;, desc: &quot;Interaction description filter&quot;
</code></li>
                
                <li class="pre-context-line"><code>    method_option :provider_state, aliases: &quot;-s&quot;, desc: &quot;Provider state filter&quot;
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    def verify
</code></li>
                
                <li class="pre-context-line"><code>      require &#x27;pact&#x2F;cli&#x2F;run_pact_verification&#x27;
</code></li>
                
              </ol>
              

              <ol start="18" class="context" id="99"
                  onclick="toggle(99);">
                <li class="context-line" id="context-99"><code>      Cli::RunPactVerification.call(options)</code></li>
              </ol>

              
              <ol start="19" class="post-context"
                  id="post-99" onclick="toggle(99);">
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    desc &#x27;docs&#x27;, &quot;Generate Pact documentation in markdown&quot;
</code></li>
                
                <li class="post-context-line"><code>    method_option :pact_dir, desc: &quot;Directory containing the pacts&quot;, default: Pact.configuration.pact_dir
</code></li>
                
                <li class="post-context-line"><code>    method_option :doc_dir, desc: &quot;Documentation directory&quot;, default: Pact.configuration.doc_dir
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    def docs
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;.rbenv&#x2F;versions&#x2F;2.1.5&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;thor-0.19.1&#x2F;lib&#x2F;thor&#x2F;command.rb</code> in
                <code><strong>run</strong></code>
            </li>

            <li class="code system">
              
              <ol start="20"
                  class="pre-context" id="pre-100"
                  onclick="toggle(100);">
                
                <li class="pre-context-line"><code>    def run(instance, args = [])
</code></li>
                
                <li class="pre-context-line"><code>      arity = nil
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      if private_method?(instance)
</code></li>
                
                <li class="pre-context-line"><code>        instance.class.handle_no_command_error(name)
</code></li>
                
                <li class="pre-context-line"><code>      elsif public_method?(instance)
</code></li>
                
                <li class="pre-context-line"><code>        arity = instance.method(name).arity
</code></li>
                
              </ol>
              

              <ol start="27" class="context" id="100"
                  onclick="toggle(100);">
                <li class="context-line" id="context-100"><code>        instance.__send__(name, *args)</code></li>
              </ol>

              
              <ol start="28" class="post-context"
                  id="post-100" onclick="toggle(100);">
                
                <li class="post-context-line"><code>      elsif local_method?(instance, :method_missing)
</code></li>
                
                <li class="post-context-line"><code>        instance.__send__(:method_missing, name.to_sym, *args)
</code></li>
                
                <li class="post-context-line"><code>      else
</code></li>
                
                <li class="post-context-line"><code>        instance.class.handle_no_command_error(name)
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>    rescue ArgumentError =&gt; e
</code></li>
                
                <li class="post-context-line"><code>      handle_argument_error?(instance, e, caller) ? instance.class.handle_argument_error(self, e, args, arity) : (raise e)
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;.rbenv&#x2F;versions&#x2F;2.1.5&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;thor-0.19.1&#x2F;lib&#x2F;thor&#x2F;invocation.rb</code> in
                <code><strong>invoke_command</strong></code>
            </li>

            <li class="code system">
              
              <ol start="119"
                  class="pre-context" id="pre-101"
                  onclick="toggle(101);">
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Invoke the given command if the given args.
</code></li>
                
                <li class="pre-context-line"><code>    def invoke_command(command, *args) #:nodoc:
</code></li>
                
                <li class="pre-context-line"><code>      current = @_invocations[self.class]
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      unless current.include?(command.name)
</code></li>
                
                <li class="pre-context-line"><code>        current &lt;&lt; command.name
</code></li>
                
              </ol>
              

              <ol start="126" class="context" id="101"
                  onclick="toggle(101);">
                <li class="context-line" id="context-101"><code>        command.run(self, *args)</code></li>
              </ol>

              
              <ol start="127" class="post-context"
                  id="post-101" onclick="toggle(101);">
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>    alias_method :invoke_task, :invoke_command
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    # Invoke all commands for the current instance.
</code></li>
                
                <li class="post-context-line"><code>    def invoke_all #:nodoc:
</code></li>
                
                <li class="post-context-line"><code>      self.class.all_commands.map { |_, command| invoke_command(command) }
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;.rbenv&#x2F;versions&#x2F;2.1.5&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;thor-0.19.1&#x2F;lib&#x2F;thor.rb</code> in
                <code><strong>dispatch</strong></code>
            </li>

            <li class="code system">
              
              <ol start="352"
                  class="pre-context" id="pre-102"
                  onclick="toggle(102);">
                
                <li class="pre-context-line"><code>      opts = given_opts || opts || []
</code></li>
                
                <li class="pre-context-line"><code>      config.merge!(:current_command =&gt; command, :command_options =&gt; command.options)
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      instance = new(args, opts, config)
</code></li>
                
                <li class="pre-context-line"><code>      yield instance if block_given?
</code></li>
                
                <li class="pre-context-line"><code>      args = instance.args
</code></li>
                
                <li class="pre-context-line"><code>      trailing = args[Range.new(arguments.size, -1)]
</code></li>
                
              </ol>
              

              <ol start="359" class="context" id="102"
                  onclick="toggle(102);">
                <li class="context-line" id="context-102"><code>      instance.invoke_command(command, trailing || [])</code></li>
              </ol>

              
              <ol start="360" class="post-context"
                  id="post-102" onclick="toggle(102);">
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    # The banner for this class. You can customize it if you are invoking the
</code></li>
                
                <li class="post-context-line"><code>    # thor class by another ways which is not the Thor::Runner. It receives
</code></li>
                
                <li class="post-context-line"><code>    # the command that is going to be invoked and a boolean which indicates if
</code></li>
                
                <li class="post-context-line"><code>    # the namespace should be displayed as arguments.
</code></li>
                
                <li class="post-context-line"><code>    #
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;.rbenv&#x2F;versions&#x2F;2.1.5&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;thor-0.19.1&#x2F;lib&#x2F;thor&#x2F;base.rb</code> in
                <code><strong>start</strong></code>
            </li>

            <li class="code system">
              
              <ol start="433"
                  class="pre-context" id="pre-103"
                  onclick="toggle(103);">
                
                <li class="pre-context-line"><code>      # can simply initialize it:
</code></li>
                
                <li class="pre-context-line"><code>      #
</code></li>
                
                <li class="pre-context-line"><code>      #   script = MyScript.new(args, options, config)
</code></li>
                
                <li class="pre-context-line"><code>      #   script.invoke(:command, first_arg, second_arg, third_arg)
</code></li>
                
                <li class="pre-context-line"><code>      #
</code></li>
                
                <li class="pre-context-line"><code>      def start(given_args = ARGV, config = {})
</code></li>
                
                <li class="pre-context-line"><code>        config[:shell] ||= Thor::Base.shell.new
</code></li>
                
              </ol>
              

              <ol start="440" class="context" id="103"
                  onclick="toggle(103);">
                <li class="context-line" id="context-103"><code>        dispatch(nil, given_args.dup, nil, config)</code></li>
              </ol>

              
              <ol start="441" class="post-context"
                  id="post-103" onclick="toggle(103);">
                
                <li class="post-context-line"><code>      rescue Thor::Error =&gt; e
</code></li>
                
                <li class="post-context-line"><code>        config[:debug] || ENV[&quot;THOR_DEBUG&quot;] == &quot;1&quot; ? (raise e) : config[:shell].error(e.message)
</code></li>
                
                <li class="post-context-line"><code>        exit(1) if exit_on_failure?
</code></li>
                
                <li class="post-context-line"><code>      rescue Errno::EPIPE
</code></li>
                
                <li class="post-context-line"><code>        # This happens if a thor command is piped to something like `head`,
</code></li>
                
                <li class="post-context-line"><code>        # which closes the pipe when it&#x27;s done reading. This will also
</code></li>
                
                <li class="post-context-line"><code>        # mean that if the pipe is closed, further unnecessary
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;.rbenv&#x2F;versions&#x2F;2.1.5&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;2.1.0&#x2F;gems&#x2F;pact-1.9.0&#x2F;bin&#x2F;pact</code> in
                <code><strong>&lt;top (required)&gt;</strong></code>
            </li>

            <li class="code system">
              
              <ol start="1"
                  class="pre-context" id="pre-104"
                  onclick="toggle(104);">
                
                <li class="pre-context-line"><code>#!&#x2F;usr&#x2F;bin&#x2F;env ruby
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>require &#x27;pact&#x2F;cli&#x27;
</code></li>
                
              </ol>
              

              <ol start="4" class="context" id="104"
                  onclick="toggle(104);">
                <li class="context-line" id="context-104"><code>Pact::CLI.start</code></li>
              </ol>

              
              <ol start="5" class="post-context"
                  id="post-104" onclick="toggle(104);">
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;.rbenv&#x2F;versions&#x2F;2.1.5&#x2F;bin&#x2F;pact</code> in
                <code><strong>load</strong></code>
            </li>

            <li class="code system">
              
              <ol start="16"
                  class="pre-context" id="pre-105"
                  onclick="toggle(105);">
                
                <li class="pre-context-line"><code>  if str =~ &#x2F;\A_(.*)_\z&#x2F; and Gem::Version.correct?($1) then
</code></li>
                
                <li class="pre-context-line"><code>    version = $1
</code></li>
                
                <li class="pre-context-line"><code>    ARGV.shift
</code></li>
                
                <li class="pre-context-line"><code>  end
</code></li>
                
                <li class="pre-context-line"><code>end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>gem &#x27;pact&#x27;, version
</code></li>
                
              </ol>
              

              <ol start="23" class="context" id="105"
                  onclick="toggle(105);">
                <li class="context-line" id="context-105"><code>load Gem.bin_path(&#x27;pact&#x27;, &#x27;pact&#x27;, version)</code></li>
              </ol>

              
              <ol start="24" class="post-context"
                  id="post-105" onclick="toggle(105);">
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;fgcui&#x2F;.rbenv&#x2F;versions&#x2F;2.1.5&#x2F;bin&#x2F;pact</code> in
                <code><strong>&lt;main&gt;</strong></code>
            </li>

            <li class="code system">
              
              <ol start="16"
                  class="pre-context" id="pre-106"
                  onclick="toggle(106);">
                
                <li class="pre-context-line"><code>  if str =~ &#x2F;\A_(.*)_\z&#x2F; and Gem::Version.correct?($1) then
</code></li>
                
                <li class="pre-context-line"><code>    version = $1
</code></li>
                
                <li class="pre-context-line"><code>    ARGV.shift
</code></li>
                
                <li class="pre-context-line"><code>  end
</code></li>
                
                <li class="pre-context-line"><code>end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>gem &#x27;pact&#x27;, version
</code></li>
                
              </ol>
              

              <ol start="23" class="context" id="106"
                  onclick="toggle(106);">
                <li class="context-line" id="context-106"><code>load Gem.bin_path(&#x27;pact&#x27;, &#x27;pact&#x27;, version)</code></li>
              </ol>

              
              <ol start="24" class="post-context"
                  id="post-106" onclick="toggle(106);">
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      

      </ul>
    </div> <!-- /BACKTRACE -->

    <div id="get">
      <h3 id="get-info">GET</h3>
      
        <p class="no-data">No GET data.</p>
      
      <div class="clear"></div>
    </div> <!-- /GET -->

    <div id="post">
      <h3 id="post-info">POST</h3>
      
        <p class="no-data">No POST data.</p>
      
      <div class="clear"></div>
    </div> <!-- /POST -->

    <div id="cookies">
      <h3 id="cookie-info">COOKIES</h3>
      
        <p class="no-data">No cookie data.</p>
      
      <div class="clear"></div>
    </div> <!-- /COOKIES -->

    <div id="rack">
      <h3 id="env-info">Rack ENV</h3>
      <table class="req">
        <tr>
          <th>Variable</th>
          <th>Value</th>
        </tr>
         
         <tr>
           <td>CONTENT_LENGTH</td>
           <td class="code"><div>0</div></td>
         </tr>
         
         <tr>
           <td>HTTPS</td>
           <td class="code"><div>off</div></td>
         </tr>
         
         <tr>
           <td>HTTP_COOKIE</td>
           <td class="code"><div></div></td>
         </tr>
         
         <tr>
           <td>HTTP_HOST</td>
           <td class="code"><div>example.org</div></td>
         </tr>
         
         <tr>
           <td>PATH_INFO</td>
           <td class="code"><div>&#x2F;panda</div></td>
         </tr>
         
         <tr>
           <td>QUERY_STRING</td>
           <td class="code"><div></div></td>
         </tr>
         
         <tr>
           <td>REMOTE_ADDR</td>
           <td class="code"><div>127.0.0.1</div></td>
         </tr>
         
         <tr>
           <td>REQUEST_METHOD</td>
           <td class="code"><div>GET</div></td>
         </tr>
         
         <tr>
           <td>SCRIPT_NAME</td>
           <td class="code"><div></div></td>
         </tr>
         
         <tr>
           <td>SERVER_NAME</td>
           <td class="code"><div>example.org</div></td>
         </tr>
         
         <tr>
           <td>SERVER_PORT</td>
           <td class="code"><div>80</div></td>
         </tr>
         
         <tr>
           <td>rack.errors</td>
           <td class="code"><div>#&lt;Object:0x007f91f214efe8&gt;</div></td>
         </tr>
         
         <tr>
           <td>rack.input</td>
           <td class="code"><div>#&lt;StringIO:0x007f91f1c7e8d8&gt;</div></td>
         </tr>
         
         <tr>
           <td>rack.logger</td>
           <td class="code"><div>#&lt;Rack::NullLogger:0x007f91f1cc6c78 @app=#&lt;Rack::Protection::FrameOptions:0x007f91f1cc6d68 @app=#&lt;Rack::Protection::HttpOrigin:0x007f91f1cc6e08 @app=#&lt;Rack::Protection::IPSpoofing:0x007f91f1cc6ea8 @app=#&lt;Rack::Protection::JsonCsrf:0x007f91f1cc6f48 @app=#&lt;Rack::Protection::PathTraversal:0x007f91f1cc6fe8 @app=#&lt;Rack::Protection::XSSHeader:0x007f91f1cc70d8 @app=#&lt;Api:0x007f91f1c7e388 @default_layout=:layout, @preferred_extension=nil, @app=nil, @template_cache=#&lt;Tilt::Cache:0x007f91f1c7e360 @cache={}&gt;&gt;, @options={:reaction=&gt;:drop_session, :logging=&gt;true, :message=&gt;&quot;Forbidden&quot;, :encryptor=&gt;Digest::SHA1, :session_key=&gt;&quot;rack.session&quot;, :status=&gt;403, :allow_empty_referrer=&gt;true, :report_key=&gt;&quot;protection.failed&quot;, :html_types=&gt;[&quot;text&#x2F;html&quot;, &quot;application&#x2F;xhtml&quot;], :xss_mode=&gt;:block, :nosniff=&gt;true, :except=&gt;[:session_hijacking, :remote_token]}&gt;, @options={:reaction=&gt;:drop_session, :logging=&gt;true, :message=&gt;&quot;Forbidden&quot;, :encryptor=&gt;Digest::SHA1, :session_key=&gt;&quot;rack.session&quot;, :status=&gt;403, :allow_empty_referrer=&gt;true, :report_key=&gt;&quot;protection.failed&quot;, :html_types=&gt;[&quot;text&#x2F;html&quot;, &quot;application&#x2F;xhtml&quot;], :except=&gt;[:session_hijacking, :remote_token]}&gt;, @options={:reaction=&gt;:drop_session, :logging=&gt;true, :message=&gt;&quot;Forbidden&quot;, :encryptor=&gt;Digest::SHA1, :session_key=&gt;&quot;rack.session&quot;, :status=&gt;403, :allow_empty_referrer=&gt;true, :report_key=&gt;&quot;protection.failed&quot;, :html_types=&gt;[&quot;text&#x2F;html&quot;, &quot;application&#x2F;xhtml&quot;], :except=&gt;[:session_hijacking, :remote_token]}&gt;, @options={:reaction=&gt;:drop_session, :logging=&gt;true, :message=&gt;&quot;Forbidden&quot;, :encryptor=&gt;Digest::SHA1, :session_key=&gt;&quot;rack.session&quot;, :status=&gt;403, :allow_empty_referrer=&gt;true, :report_key=&gt;&quot;protection.failed&quot;, :html_types=&gt;[&quot;text&#x2F;html&quot;, &quot;application&#x2F;xhtml&quot;], :except=&gt;[:session_hijacking, :remote_token]}&gt;, @options={:reaction=&gt;:drop_session, :logging=&gt;true, :message=&gt;&quot;Forbidden&quot;, :encryptor=&gt;Digest::SHA1, :session_key=&gt;&quot;rack.session&quot;, :status=&gt;403, :allow_empty_referrer=&gt;true, :report_key=&gt;&quot;protection.failed&quot;, :html_types=&gt;[&quot;text&#x2F;html&quot;, &quot;application&#x2F;xhtml&quot;], :except=&gt;[:session_hijacking, :remote_token]}&gt;, @options={:reaction=&gt;:drop_session, :logging=&gt;true, :message=&gt;&quot;Forbidden&quot;, :encryptor=&gt;Digest::SHA1, :session_key=&gt;&quot;rack.session&quot;, :status=&gt;403, :allow_empty_referrer=&gt;true, :report_key=&gt;&quot;protection.failed&quot;, :html_types=&gt;[&quot;text&#x2F;html&quot;, &quot;application&#x2F;xhtml&quot;], :frame_options=&gt;:sameorigin, :except=&gt;[:session_hijacking, :remote_token]}&gt;&gt;</div></td>
         </tr>
         
         <tr>
           <td>rack.multiprocess</td>
           <td class="code"><div>true</div></td>
         </tr>
         
         <tr>
           <td>rack.multithread</td>
           <td class="code"><div>true</div></td>
         </tr>
         
         <tr>
           <td>rack.request.cookie_hash</td>
           <td class="code"><div>{}</div></td>
         </tr>
         
         <tr>
           <td>rack.request.cookie_string</td>
           <td class="code"><div></div></td>
         </tr>
         
         <tr>
           <td>rack.request.query_hash</td>
           <td class="code"><div>{}</div></td>
         </tr>
         
         <tr>
           <td>rack.request.query_string</td>
           <td class="code"><div></div></td>
         </tr>
         
         <tr>
           <td>rack.run_once</td>
           <td class="code"><div>false</div></td>
         </tr>
         
         <tr>
           <td>rack.test</td>
           <td class="code"><div>true</div></td>
         </tr>
         
         <tr>
           <td>rack.url_scheme</td>
           <td class="code"><div>http</div></td>
         </tr>
         
         <tr>
           <td>rack.version</td>
           <td class="code"><div>[1, 3]</div></td>
         </tr>
         
         <tr>
           <td>sinatra.accept</td>
           <td class="code"><div>[#&lt;Sinatra::Request::AcceptEntry:0x007f91f1ceb708 @entry=&quot;*&#x2F;*&quot;, @type=&quot;*&#x2F;*&quot;, @params={}, @q=1.0&gt;]</div></td>
         </tr>
         
         <tr>
           <td>sinatra.error</td>
           <td class="code"><div>#&lt;NameError: uninitialized constant AnimalRepository::DATABASE&gt;</div></td>
         </tr>
         
         <tr>
           <td>sinatra.route</td>
           <td class="code"><div>GET &#x2F;panda</div></td>
         </tr>
         
      </table>
      <div class="clear"></div>
    </div> <!-- /RACK ENV -->

    <p id="explanation">You're seeing this error because you have
enabled the <code>show_exceptions</code> setting.</p>
  </div> <!-- /WRAP -->
  </body>
</html>

I, [2016-01-20T17:04:17.955166 #37854]  INFO -- : Running example 'Verifying a pact between Zoo App and Animal Service Given an panda exists a request for an panda with GET /panda returns a response which has status code 500'
I, [2016-01-20T17:04:17.955526 #37854]  INFO -- : Sending GET request to path: "/panda" with headers: {}, see debug logs for body
D, [2016-01-20T17:04:17.955555 #37854] DEBUG -- : body :
I, [2016-01-20T17:04:17.973609 #37854]  INFO -- : Received response with status: 500, headers: {"Content-Type"=>"text/html;charset=utf-8", "Content-Length"=>"30", "X-XSS-Protection"=>"1; mode=block", "X-Content-Type-Options"=>"nosniff", "X-Frame-Options"=>"SAMEORIGIN"}, see debug logs for body
D, [2016-01-20T17:04:17.973705 #37854] DEBUG -- : body: <h1>Internal Server Error</h1>
I, [2016-01-20T17:05:29.023235 #38253]  INFO -- : Running example 'Verifying a pact between Zoo App and Animal Service Given an panda exists a request for an panda with GET /panda returns a response which has status code 200'
I, [2016-01-20T17:05:29.023352 #38253]  INFO -- : Sending GET request to path: "/panda" with headers: {}, see debug logs for body
D, [2016-01-20T17:05:29.023394 #38253] DEBUG -- : body :
I, [2016-01-20T17:05:29.034109 #38253]  INFO -- : Received response with status: 500, headers: {"Content-Type"=>"text/html;charset=utf-8", "Content-Length"=>"30", "X-XSS-Protection"=>"1; mode=block", "X-Content-Type-Options"=>"nosniff", "X-Frame-Options"=>"SAMEORIGIN"}, see debug logs for body
D, [2016-01-20T17:05:29.034217 #38253] DEBUG -- : body: <h1>Internal Server Error</h1>
I, [2016-01-20T17:06:32.826936 #38650]  INFO -- : Running example 'Verifying a pact between Zoo App and Animal Service Given an panda exists a request for an panda with GET /panda returns a response which has status code 200'
I, [2016-01-20T17:06:32.827065 #38650]  INFO -- : Sending GET request to path: "/panda" with headers: {}, see debug logs for body
D, [2016-01-20T17:06:32.827086 #38650] DEBUG -- : body :
I, [2016-01-20T17:07:18.335404 #39051]  INFO -- : Running example 'Verifying a pact between Zoo App and Animal Service Given an panda exists a request for an panda with GET /panda returns a response which has status code 200'
I, [2016-01-20T17:07:18.335530 #39051]  INFO -- : Sending GET request to path: "/panda" with headers: {}, see debug logs for body
D, [2016-01-20T17:07:18.335551 #39051] DEBUG -- : body :
I, [2016-01-20T17:07:39.487561 #39445]  INFO -- : Running example 'Verifying a pact between Zoo App and Animal Service Given an panda exists a request for an panda with GET /panda returns a response which has status code 200'
I, [2016-01-20T17:07:39.487676 #39445]  INFO -- : Sending GET request to path: "/panda" with headers: {}, see debug logs for body
D, [2016-01-20T17:07:39.487707 #39445] DEBUG -- : body :
I, [2016-01-20T17:07:39.497848 #39445]  INFO -- : Received response with status: 500, headers: {"Content-Type"=>"text/html;charset=utf-8", "Content-Length"=>"30", "X-XSS-Protection"=>"1; mode=block", "X-Content-Type-Options"=>"nosniff", "X-Frame-Options"=>"SAMEORIGIN"}, see debug logs for body
D, [2016-01-20T17:07:39.497892 #39445] DEBUG -- : body: <h1>Internal Server Error</h1>
I, [2016-01-20T17:08:12.223137 #39839]  INFO -- : Running example 'Verifying a pact between Zoo App and Animal Service Given an panda exists a request for an panda with GET /panda returns a response which has status code 200'
I, [2016-01-20T17:08:12.223311 #39839]  INFO -- : Sending GET request to path: "/panda" with headers: {}, see debug logs for body
D, [2016-01-20T17:08:12.223345 #39839] DEBUG -- : body :
I, [2016-01-20T17:08:55.098483 #40235]  INFO -- : Running example 'Verifying a pact between Zoo App and Animal Service Given an panda exists a request for an panda with GET /panda returns a response which has status code 200'
I, [2016-01-20T17:08:55.098601 #40235]  INFO -- : Sending GET request to path: "/panda" with headers: {}, see debug logs for body
D, [2016-01-20T17:08:55.098622 #40235] DEBUG -- : body :
I, [2016-01-20T17:10:27.591849 #40635]  INFO -- : Running example 'Verifying a pact between Zoo App and Animal Service Given an panda exists a request for an panda with GET /panda returns a response which has status code 200'
I, [2016-01-20T17:10:27.591981 #40635]  INFO -- : Sending GET request to path: "/panda" with headers: {}, see debug logs for body
D, [2016-01-20T17:10:27.592005 #40635] DEBUG -- : body :
I, [2016-01-20T17:17:31.377893 #41074]  INFO -- : Running example 'Verifying a pact between Zoo App and Animal Service Given an panda exists a request for an panda with GET /panda returns a response which has status code 200'
I, [2016-01-20T17:17:31.378016 #41074]  INFO -- : Sending GET request to path: "/panda" with headers: {}, see debug logs for body
D, [2016-01-20T17:17:31.378039 #41074] DEBUG -- : body :
I, [2016-01-20T17:19:03.137711 #41473]  INFO -- : Running example 'Verifying a pact between Zoo App and Animal Service Given an panda exists a request for an panda with GET /panda returns a response which has status code 200'
I, [2016-01-20T17:19:03.137837 #41473]  INFO -- : Sending GET request to path: "/panda" with headers: {}, see debug logs for body
D, [2016-01-20T17:19:03.137859 #41473] DEBUG -- : body :
I, [2016-01-20T17:19:03.151495 #41473]  INFO -- : Received response with status: 500, headers: {"Content-Type"=>"text/html;charset=utf-8", "Content-Length"=>"30", "X-XSS-Protection"=>"1; mode=block", "X-Content-Type-Options"=>"nosniff", "X-Frame-Options"=>"SAMEORIGIN"}, see debug logs for body
D, [2016-01-20T17:19:03.151541 #41473] DEBUG -- : body: <h1>Internal Server Error</h1>
I, [2016-01-20T17:19:29.191052 #41868]  INFO -- : Running example 'Verifying a pact between Zoo App and Animal Service Given an panda exists a request for an panda with GET /panda returns a response which has status code 200'
I, [2016-01-20T17:19:29.191191 #41868]  INFO -- : Sending GET request to path: "/panda" with headers: {}, see debug logs for body
D, [2016-01-20T17:19:29.191215 #41868] DEBUG -- : body :
I, [2016-01-20T17:19:29.202790 #41868]  INFO -- : Received response with status: 500, headers: {"Content-Type"=>"text/html;charset=utf-8", "Content-Length"=>"30", "X-XSS-Protection"=>"1; mode=block", "X-Content-Type-Options"=>"nosniff", "X-Frame-Options"=>"SAMEORIGIN"}, see debug logs for body
D, [2016-01-20T17:19:29.202857 #41868] DEBUG -- : body: <h1>Internal Server Error</h1>
I, [2016-01-20T17:20:12.997891 #42263]  INFO -- : Running example 'Verifying a pact between Zoo App and Animal Service Given an panda exists a request for an panda with GET /panda returns a response which has status code 200'
I, [2016-01-20T17:20:12.998262 #42263]  INFO -- : Sending GET request to path: "/panda" with headers: {}, see debug logs for body
D, [2016-01-20T17:20:12.998329 #42263] DEBUG -- : body :
I, [2016-01-20T17:20:45.978797 #42658]  INFO -- : Running example 'Verifying a pact between Zoo App and Animal Service Given an panda exists a request for an panda with GET /panda returns a response which has status code 200'
I, [2016-01-20T17:20:45.978915 #42658]  INFO -- : Sending GET request to path: "/panda" with headers: {}, see debug logs for body
D, [2016-01-20T17:20:45.978938 #42658] DEBUG -- : body :
I, [2016-01-20T17:20:45.990215 #42658]  INFO -- : Received response with status: 200, headers: {"Content-Type"=>"text/html;charset=utf-8", "Content-Length"=>"0", "X-XSS-Protection"=>"1; mode=block", "X-Content-Type-Options"=>"nosniff", "X-Frame-Options"=>"SAMEORIGIN"}, see debug logs for body
D, [2016-01-20T17:20:45.990379 #42658] DEBUG -- : body: 
I, [2016-01-20T17:21:06.884444 #43052]  INFO -- : Running example 'Verifying a pact between Zoo App and Animal Service Given an panda exists a request for an panda with GET /panda returns a response which has status code 200'
I, [2016-01-20T17:21:06.884587 #43052]  INFO -- : Sending GET request to path: "/panda" with headers: {}, see debug logs for body
D, [2016-01-20T17:21:06.884613 #43052] DEBUG -- : body :
I, [2016-01-20T17:21:06.895761 #43052]  INFO -- : Received response with status: 200, headers: {"Content-Type"=>"text/html;charset=utf-8", "Content-Length"=>"0", "X-XSS-Protection"=>"1; mode=block", "X-Content-Type-Options"=>"nosniff", "X-Frame-Options"=>"SAMEORIGIN"}, see debug logs for body
D, [2016-01-20T17:21:06.895808 #43052] DEBUG -- : body: 
I, [2016-01-20T17:21:16.959507 #43445]  INFO -- : Running example 'Verifying a pact between Zoo App and Animal Service Given an panda exists a request for an panda with GET /panda returns a response which has status code 200'
I, [2016-01-20T17:21:16.959644 #43445]  INFO -- : Sending GET request to path: "/panda" with headers: {}, see debug logs for body
D, [2016-01-20T17:21:16.959671 #43445] DEBUG -- : body :
I, [2016-01-20T17:21:16.971488 #43445]  INFO -- : Received response with status: 200, headers: {"Content-Type"=>"text/html;charset=utf-8", "Content-Length"=>"0", "X-XSS-Protection"=>"1; mode=block", "X-Content-Type-Options"=>"nosniff", "X-Frame-Options"=>"SAMEORIGIN"}, see debug logs for body
D, [2016-01-20T17:21:16.971537 #43445] DEBUG -- : body: 
I, [2016-01-20T17:23:50.601036 #43860]  INFO -- : Running example 'Verifying a pact between Zoo App and Animal Service Given an panda exists a request for an panda with GET /panda returns a response which has status code 200'
I, [2016-01-20T17:23:50.601156 #43860]  INFO -- : Sending GET request to path: "/panda" with headers: {}, see debug logs for body
D, [2016-01-20T17:23:50.601176 #43860] DEBUG -- : body :
I, [2016-01-20T17:24:54.853240 #44258]  INFO -- : Running example 'Verifying a pact between Zoo App and Animal Service Given an panda exists a request for an panda with GET /panda returns a response which has status code 200'
I, [2016-01-20T17:24:54.853358 #44258]  INFO -- : Sending GET request to path: "/panda" with headers: {}, see debug logs for body
D, [2016-01-20T17:24:54.853378 #44258] DEBUG -- : body :
I, [2016-01-20T17:24:54.864669 #44258]  INFO -- : Received response with status: 500, headers: {"Content-Type"=>"text/html;charset=utf-8", "Content-Length"=>"30", "X-XSS-Protection"=>"1; mode=block", "X-Content-Type-Options"=>"nosniff", "X-Frame-Options"=>"SAMEORIGIN"}, see debug logs for body
D, [2016-01-20T17:24:54.864725 #44258] DEBUG -- : body: <h1>Internal Server Error</h1>
I, [2016-01-20T17:25:39.510535 #44654]  INFO -- : Running example 'Verifying a pact between Zoo App and Animal Service Given an panda exists a request for an panda with GET /panda returns a response which has status code 200'
I, [2016-01-20T17:25:39.510656 #44654]  INFO -- : Sending GET request to path: "/panda" with headers: {}, see debug logs for body
D, [2016-01-20T17:25:39.510678 #44654] DEBUG -- : body :
I, [2016-01-20T17:26:00.775886 #44654]  INFO -- : Received response with status: 500, headers: {"Content-Type"=>"text/html;charset=utf-8", "Content-Length"=>"30", "X-XSS-Protection"=>"1; mode=block", "X-Content-Type-Options"=>"nosniff", "X-Frame-Options"=>"SAMEORIGIN"}, see debug logs for body
D, [2016-01-20T17:26:00.775980 #44654] DEBUG -- : body: <h1>Internal Server Error</h1>
I, [2016-01-20T17:26:05.053225 #45048]  INFO -- : Running example 'Verifying a pact between Zoo App and Animal Service Given an panda exists a request for an panda with GET /panda returns a response which has status code 200'
I, [2016-01-20T17:26:05.053346 #45048]  INFO -- : Sending GET request to path: "/panda" with headers: {}, see debug logs for body
D, [2016-01-20T17:26:05.053370 #45048] DEBUG -- : body :
I, [2016-01-20T17:26:11.126207 #45048]  INFO -- : Running example 'Verifying a pact between Zoo App and Animal Service Given an panda exists a request for an panda with GET /panda returns a response which includes headers "Content-Type" with value "text/html;charset=utf-8"'
I, [2016-01-20T17:26:11.126322 #45048]  INFO -- : Sending GET request to path: "/panda" with headers: {}, see debug logs for body
D, [2016-01-20T17:26:11.126347 #45048] DEBUG -- : body :
I, [2016-01-20T17:26:43.669330 #45443]  INFO -- : Running example 'Verifying a pact between Zoo App and Animal Service Given an panda exists a request for an panda with GET /panda returns a response which has status code 200'
I, [2016-01-20T17:26:43.669447 #45443]  INFO -- : Sending GET request to path: "/panda" with headers: {}, see debug logs for body
D, [2016-01-20T17:26:43.669470 #45443] DEBUG -- : body :
I, [2016-01-20T17:26:43.681043 #45443]  INFO -- : Running example 'Verifying a pact between Zoo App and Animal Service Given an panda exists a request for an panda with GET /panda returns a response which has a matching body'
I, [2016-01-20T17:26:43.681137 #45443]  INFO -- : Sending GET request to path: "/panda" with headers: {}, see debug logs for body
D, [2016-01-20T17:26:43.681159 #45443] DEBUG -- : body :
I, [2016-01-20T17:26:43.682183 #45443]  INFO -- : Running example 'Verifying a pact between Zoo App and Animal Service Given an panda exists a request for an panda with GET /panda returns a response which includes headers "Content-Type" with value "text/html;charset=utf-8"'
I, [2016-01-20T17:26:43.682253 #45443]  INFO -- : Sending GET request to path: "/panda" with headers: {}, see debug logs for body
D, [2016-01-20T17:26:43.682272 #45443] DEBUG -- : body :
I, [2016-01-20T17:27:43.441305 #45842]  INFO -- : Running example 'Verifying a pact between Zoo App and Animal Service Given an panda exists a request for an panda with GET /panda returns a response which has status code 200'
I, [2016-01-20T17:27:43.441478 #45842]  INFO -- : Sending GET request to path: "/panda" with headers: {}, see debug logs for body
D, [2016-01-20T17:27:43.441503 #45842] DEBUG -- : body :
I, [2016-01-20T17:28:14.849202 #45842]  INFO -- : Received response with status: 500, headers: {"Content-Type"=>"text/html;charset=utf-8", "Content-Length"=>"30", "X-XSS-Protection"=>"1; mode=block", "X-Content-Type-Options"=>"nosniff", "X-Frame-Options"=>"SAMEORIGIN"}, see debug logs for body
D, [2016-01-20T17:28:14.849255 #45842] DEBUG -- : body: <h1>Internal Server Error</h1>
I, [2016-01-20T17:28:18.330160 #46237]  INFO -- : Running example 'Verifying a pact between Zoo App and Animal Service Given an panda exists a request for an panda with GET /panda returns a response which has status code 200'
I, [2016-01-20T17:28:18.330274 #46237]  INFO -- : Sending GET request to path: "/panda" with headers: {}, see debug logs for body
D, [2016-01-20T17:28:18.330311 #46237] DEBUG -- : body :
I, [2016-01-20T17:28:18.340989 #46237]  INFO -- : Received response with status: 200, headers: {"Content-Type"=>"text/html;charset=utf-8", "Content-Length"=>"5", "X-XSS-Protection"=>"1; mode=block", "X-Content-Type-Options"=>"nosniff", "X-Frame-Options"=>"SAMEORIGIN"}, see debug logs for body
D, [2016-01-20T17:28:18.341059 #46237] DEBUG -- : body: Hello
I, [2016-01-20T17:28:58.322813 #46632]  INFO -- : Running example 'Verifying a pact between Zoo App and Animal Service Given an panda exists a request for an panda with GET /panda returns a response which has status code 200'
I, [2016-01-20T17:28:58.322936 #46632]  INFO -- : Sending GET request to path: "/panda" with headers: {}, see debug logs for body
D, [2016-01-20T17:28:58.322966 #46632] DEBUG -- : body :
I, [2016-01-20T17:28:58.333851 #46632]  INFO -- : Received response with status: 200, headers: {"Content-Type"=>"text/html;charset=utf-8", "Content-Length"=>"5", "X-XSS-Protection"=>"1; mode=block", "X-Content-Type-Options"=>"nosniff", "X-Frame-Options"=>"SAMEORIGIN"}, see debug logs for body
D, [2016-01-20T17:28:58.333905 #46632] DEBUG -- : body: Hello
I, [2016-01-20T17:29:29.675966 #47030]  INFO -- : Running example 'Verifying a pact between Zoo App and Animal Service Given an panda exists a request for an panda with GET /panda returns a response which has status code 200'
I, [2016-01-20T17:29:29.676089 #47030]  INFO -- : Sending GET request to path: "/panda" with headers: {}, see debug logs for body
D, [2016-01-20T17:29:29.676110 #47030] DEBUG -- : body :
I, [2016-01-20T17:29:29.694927 #47030]  INFO -- : Received response with status: 500, headers: {"Content-Type"=>"text/html;charset=utf-8", "Content-Length"=>"30", "X-XSS-Protection"=>"1; mode=block", "X-Content-Type-Options"=>"nosniff", "X-Frame-Options"=>"SAMEORIGIN"}, see debug logs for body
D, [2016-01-20T17:29:29.694975 #47030] DEBUG -- : body: <h1>Internal Server Error</h1>
I, [2016-01-20T17:29:52.723334 #47424]  INFO -- : Running example 'Verifying a pact between Zoo App and Animal Service Given an panda exists a request for an panda with GET /panda returns a response which has status code 200'
I, [2016-01-20T17:29:52.723476 #47424]  INFO -- : Sending GET request to path: "/panda" with headers: {}, see debug logs for body
D, [2016-01-20T17:29:52.723503 #47424] DEBUG -- : body :
I, [2016-01-20T17:31:24.524904 #47424]  INFO -- : Received response with status: 200, headers: {"Content-Type"=>"text/html;charset=utf-8", "Content-Length"=>"5", "X-XSS-Protection"=>"1; mode=block", "X-Content-Type-Options"=>"nosniff", "X-Frame-Options"=>"SAMEORIGIN"}, see debug logs for body
D, [2016-01-20T17:31:24.524969 #47424] DEBUG -- : body: Hello
I, [2016-01-20T17:31:27.776108 #47831]  INFO -- : Running example 'Verifying a pact between Zoo App and Animal Service Given an panda exists a request for an panda with GET /panda returns a response which has status code 200'
I, [2016-01-20T17:31:27.776235 #47831]  INFO -- : Sending GET request to path: "/panda" with headers: {}, see debug logs for body
D, [2016-01-20T17:31:27.776260 #47831] DEBUG -- : body :
I, [2016-01-20T17:31:27.787450 #47831]  INFO -- : Received response with status: 200, headers: {"Content-Type"=>"text/html;charset=utf-8", "X-XSS-Protection"=>"1; mode=block", "X-Content-Type-Options"=>"nosniff", "X-Frame-Options"=>"SAMEORIGIN", "Content-Length"=>"16"}, see debug logs for body
D, [2016-01-20T17:31:27.787500 #47831] DEBUG -- : body: [:name, "Hello"]
I, [2016-01-20T17:32:17.293272 #48229]  INFO -- : Running example 'Verifying a pact between Zoo App and Animal Service Given an panda exists a request for an panda with GET /panda returns a response which has status code 200'
I, [2016-01-20T17:32:17.293396 #48229]  INFO -- : Sending GET request to path: "/panda" with headers: {}, see debug logs for body
D, [2016-01-20T17:32:17.293426 #48229] DEBUG -- : body :
I, [2016-01-20T17:32:17.304400 #48229]  INFO -- : Received response with status: 500, headers: {"Content-Type"=>"text/html;charset=utf-8", "Content-Length"=>"30", "X-XSS-Protection"=>"1; mode=block", "X-Content-Type-Options"=>"nosniff", "X-Frame-Options"=>"SAMEORIGIN"}, see debug logs for body
D, [2016-01-20T17:32:17.305033 #48229] DEBUG -- : body: <h1>Internal Server Error</h1>
I, [2016-01-20T17:32:50.783574 #48624]  INFO -- : Running example 'Verifying a pact between Zoo App and Animal Service Given an panda exists a request for an panda with GET /panda returns a response which has status code 200'
I, [2016-01-20T17:32:50.783690 #48624]  INFO -- : Sending GET request to path: "/panda" with headers: {}, see debug logs for body
D, [2016-01-20T17:32:50.783719 #48624] DEBUG -- : body :
I, [2016-01-20T17:33:22.600032 #48624]  INFO -- : Received response with status: 500, headers: {"Content-Type"=>"text/html;charset=utf-8", "Content-Length"=>"30", "X-XSS-Protection"=>"1; mode=block", "X-Content-Type-Options"=>"nosniff", "X-Frame-Options"=>"SAMEORIGIN"}, see debug logs for body
D, [2016-01-20T17:33:22.600085 #48624] DEBUG -- : body: <h1>Internal Server Error</h1>
I, [2016-01-20T17:33:26.414057 #49022]  INFO -- : Running example 'Verifying a pact between Zoo App and Animal Service Given an panda exists a request for an panda with GET /panda returns a response which has status code 200'
I, [2016-01-20T17:33:26.414180 #49022]  INFO -- : Sending GET request to path: "/panda" with headers: {}, see debug logs for body
D, [2016-01-20T17:33:26.414212 #49022] DEBUG -- : body :
I, [2016-01-20T17:33:26.424809 #49022]  INFO -- : Received response with status: 200, headers: {"Content-Type"=>"text/html;charset=utf-8", "X-XSS-Protection"=>"1; mode=block", "X-Content-Type-Options"=>"nosniff", "X-Frame-Options"=>"SAMEORIGIN", "Content-Length"=>"17"}, see debug logs for body
D, [2016-01-20T17:33:26.424854 #49022] DEBUG -- : body: ["name", "Hello"]
I, [2016-01-20T17:33:42.724825 #49417]  INFO -- : Running example 'Verifying a pact between Zoo App and Animal Service Given an panda exists a request for an panda with GET /panda returns a response which has status code 200'
I, [2016-01-20T17:33:42.724965 #49417]  INFO -- : Sending GET request to path: "/panda" with headers: {}, see debug logs for body
D, [2016-01-20T17:33:42.724995 #49417] DEBUG -- : body :
I, [2016-01-20T17:33:42.736890 #49417]  INFO -- : Received response with status: 200, headers: {"Content-Type"=>"text/html;charset=utf-8", "X-XSS-Protection"=>"1; mode=block", "X-Content-Type-Options"=>"nosniff", "X-Frame-Options"=>"SAMEORIGIN", "Content-Length"=>"17"}, see debug logs for body
D, [2016-01-20T17:33:42.736946 #49417] DEBUG -- : body: ["name", "Hello"]
I, [2016-01-20T17:34:16.607293 #49811]  INFO -- : Running example 'Verifying a pact between Zoo App and Animal Service Given an panda exists a request for an panda with GET /panda returns a response which has status code 200'
I, [2016-01-20T17:34:16.607424 #49811]  INFO -- : Sending GET request to path: "/panda" with headers: {}, see debug logs for body
D, [2016-01-20T17:34:16.607449 #49811] DEBUG -- : body :
I, [2016-01-20T17:34:16.618612 #49811]  INFO -- : Received response with status: 200, headers: {"Content-Type"=>"text/html;charset=utf-8", "X-XSS-Protection"=>"1; mode=block", "X-Content-Type-Options"=>"nosniff", "X-Frame-Options"=>"SAMEORIGIN", "Content-Length"=>"17"}, see debug logs for body
D, [2016-01-20T17:34:16.618654 #49811] DEBUG -- : body: ["name", "Hello"]
I, [2016-01-20T17:34:32.269917 #50205]  INFO -- : Running example 'Verifying a pact between Zoo App and Animal Service Given an panda exists a request for an panda with GET /panda returns a response which has status code 200'
I, [2016-01-20T17:34:32.270035 #50205]  INFO -- : Sending GET request to path: "/panda" with headers: {}, see debug logs for body
D, [2016-01-20T17:34:32.270055 #50205] DEBUG -- : body :
I, [2016-01-20T17:34:32.280700 #50205]  INFO -- : Received response with status: 200, headers: {"Content-Type"=>"text/html;charset=utf-8", "Content-Length"=>"16", "X-XSS-Protection"=>"1; mode=block", "X-Content-Type-Options"=>"nosniff", "X-Frame-Options"=>"SAMEORIGIN"}, see debug logs for body
D, [2016-01-20T17:34:32.280779 #50205] DEBUG -- : body: {"name":"Hello"}
I, [2016-01-20T17:34:56.102092 #50602]  INFO -- : Running example 'Verifying a pact between Zoo App and Animal Service Given an panda exists a request for an panda with GET /panda returns a response which has status code 200'
I, [2016-01-20T17:34:56.102215 #50602]  INFO -- : Sending GET request to path: "/panda" with headers: {}, see debug logs for body
D, [2016-01-20T17:34:56.102235 #50602] DEBUG -- : body :
I, [2016-01-20T17:34:56.112753 #50602]  INFO -- : Received response with status: 200, headers: {"Content-Type"=>"text/html;charset=utf-8", "Content-Length"=>"16", "X-XSS-Protection"=>"1; mode=block", "X-Content-Type-Options"=>"nosniff", "X-Frame-Options"=>"SAMEORIGIN"}, see debug logs for body
D, [2016-01-20T17:34:56.112797 #50602] DEBUG -- : body: {"name":"Hello"}
I, [2016-01-20T17:35:17.587338 #50996]  INFO -- : Running example 'Verifying a pact between Zoo App and Animal Service Given an panda exists a request for an panda with GET /panda returns a response which has status code 200'
I, [2016-01-20T17:35:17.587462 #50996]  INFO -- : Sending GET request to path: "/panda" with headers: {}, see debug logs for body
D, [2016-01-20T17:35:17.587489 #50996] DEBUG -- : body :
I, [2016-01-20T17:35:17.598446 #50996]  INFO -- : Received response with status: 200, headers: {"Content-Type"=>"text/html;charset=utf-8", "Content-Length"=>"16", "X-XSS-Protection"=>"1; mode=block", "X-Content-Type-Options"=>"nosniff", "X-Frame-Options"=>"SAMEORIGIN"}, see debug logs for body
D, [2016-01-20T17:35:17.598490 #50996] DEBUG -- : body: {"name":"Hello"}
I, [2016-01-20T17:35:43.460186 #51390]  INFO -- : Running example 'Verifying a pact between Zoo App and Animal Service Given an panda exists a request for an panda with GET /panda returns a response which has status code 200'
I, [2016-01-20T17:35:43.460304 #51390]  INFO -- : Sending GET request to path: "/panda" with headers: {}, see debug logs for body
D, [2016-01-20T17:35:43.460329 #51390] DEBUG -- : body :
I, [2016-01-20T17:35:43.470588 #51390]  INFO -- : Received response with status: 200, headers: {"Content-Type"=>"text/html;charset=utf-8", "Content-Length"=>"16", "X-XSS-Protection"=>"1; mode=block", "X-Content-Type-Options"=>"nosniff", "X-Frame-Options"=>"SAMEORIGIN"}, see debug logs for body
D, [2016-01-20T17:35:43.470632 #51390] DEBUG -- : body: {"name":"Hello"}
I, [2016-01-20T17:36:14.612555 #51785]  INFO -- : Running example 'Verifying a pact between Zoo App and Animal Service Given an panda exists a request for an panda with GET /panda returns a response which has status code 200'
I, [2016-01-20T17:36:14.612672 #51785]  INFO -- : Sending GET request to path: "/panda" with headers: {}, see debug logs for body
D, [2016-01-20T17:36:14.612692 #51785] DEBUG -- : body :
I, [2016-01-20T17:36:14.623813 #51785]  INFO -- : Received response with status: 200, headers: {"Content-Type"=>"text/html;charset=utf-8", "Content-Length"=>"16", "X-XSS-Protection"=>"1; mode=block", "X-Content-Type-Options"=>"nosniff", "X-Frame-Options"=>"SAMEORIGIN"}, see debug logs for body
D, [2016-01-20T17:36:14.623865 #51785] DEBUG -- : body: {"name":"Hello"}
I, [2016-01-20T17:36:26.647164 #52178]  INFO -- : Running example 'Verifying a pact between Zoo App and Animal Service Given an panda exists a request for an panda with GET /panda returns a response which has status code 200'
I, [2016-01-20T17:36:26.647298 #52178]  INFO -- : Sending GET request to path: "/panda" with headers: {}, see debug logs for body
D, [2016-01-20T17:36:26.647320 #52178] DEBUG -- : body :
I, [2016-01-20T17:36:26.658456 #52178]  INFO -- : Received response with status: 200, headers: {"Content-Type"=>"text/html;charset=utf-8", "Content-Length"=>"16", "X-XSS-Protection"=>"1; mode=block", "X-Content-Type-Options"=>"nosniff", "X-Frame-Options"=>"SAMEORIGIN"}, see debug logs for body
D, [2016-01-20T17:36:26.658513 #52178] DEBUG -- : body: {"name":"Hello"}
I, [2016-01-20T17:37:07.959784 #52574]  INFO -- : Running example 'Verifying a pact between Zoo App and Animal Service Given an panda exists a request for an panda with GET /panda returns a response which has status code 200'
I, [2016-01-20T17:37:07.959915 #52574]  INFO -- : Sending GET request to path: "/panda" with headers: {}, see debug logs for body
D, [2016-01-20T17:37:07.959951 #52574] DEBUG -- : body :
I, [2016-01-20T17:37:07.971655 #52574]  INFO -- : Received response with status: 200, headers: {"Content-Type"=>"text/html;charset=utf-8", "Content-Length"=>"16", "X-XSS-Protection"=>"1; mode=block", "X-Content-Type-Options"=>"nosniff", "X-Frame-Options"=>"SAMEORIGIN"}, see debug logs for body
D, [2016-01-20T17:37:07.971699 #52574] DEBUG -- : body: {"name":"Hello"}
I, [2016-01-20T17:37:27.738981 #52968]  INFO -- : Running example 'Verifying a pact between Zoo App and Animal Service Given an panda exists a request for an panda with GET /panda returns a response which has status code 200'
I, [2016-01-20T17:37:27.739108 #52968]  INFO -- : Sending GET request to path: "/panda" with headers: {}, see debug logs for body
D, [2016-01-20T17:37:27.739138 #52968] DEBUG -- : body :
I, [2016-01-20T17:37:27.750659 #52968]  INFO -- : Received response with status: 200, headers: {"Content-Type"=>"text/html;charset=utf-8", "X-XSS-Protection"=>"1; mode=block", "X-Content-Type-Options"=>"nosniff", "X-Frame-Options"=>"SAMEORIGIN", "Content-Length"=>"16"}, see debug logs for body
D, [2016-01-20T17:37:27.750712 #52968] DEBUG -- : body: [:name, "Hello"]
I, [2016-01-20T17:38:17.519672 #53758]  INFO -- : Running example 'Verifying a pact between Zoo App and Animal Service Given an panda exists a request for an panda with GET /panda returns a response which has status code 200'
I, [2016-01-20T17:38:17.519795 #53758]  INFO -- : Sending GET request to path: "/panda" with headers: {}, see debug logs for body
D, [2016-01-20T17:38:17.519815 #53758] DEBUG -- : body :
I, [2016-01-20T17:38:17.531294 #53758]  INFO -- : Received response with status: 200, headers: {"Content-Type"=>"text/html;charset=utf-8", "X-XSS-Protection"=>"1; mode=block", "X-Content-Type-Options"=>"nosniff", "X-Frame-Options"=>"SAMEORIGIN", "Content-Length"=>"16"}, see debug logs for body
D, [2016-01-20T17:38:17.531343 #53758] DEBUG -- : body: [:name, "Hello"]
I, [2016-01-20T17:38:53.679043 #54152]  INFO -- : Running example 'Verifying a pact between Zoo App and Animal Service Given an panda exists a request for an panda with GET /panda returns a response which has status code 200'
I, [2016-01-20T17:38:53.679185 #54152]  INFO -- : Sending GET request to path: "/panda" with headers: {}, see debug logs for body
D, [2016-01-20T17:38:53.679206 #54152] DEBUG -- : body :
I, [2016-01-20T17:43:38.768218 #54152]  INFO -- : Received response with status: 200, headers: {"Content-Type"=>"text/html;charset=utf-8", "X-XSS-Protection"=>"1; mode=block", "X-Content-Type-Options"=>"nosniff", "X-Frame-Options"=>"SAMEORIGIN", "Content-Length"=>"24"}, see debug logs for body
D, [2016-01-20T17:43:38.768287 #54152] DEBUG -- : body: [:id, 1][:name, "Hello"]
I, [2016-01-20T17:43:44.464287 #54580]  INFO -- : Running example 'Verifying a pact between Zoo App and Animal Service Given an panda exists a request for an panda with GET /panda returns a response which has status code 200'
I, [2016-01-20T17:43:44.464405 #54580]  INFO -- : Sending GET request to path: "/panda" with headers: {}, see debug logs for body
D, [2016-01-20T17:43:44.464425 #54580] DEBUG -- : body :
I, [2016-01-20T17:43:44.475441 #54580]  INFO -- : Received response with status: 200, headers: {"Content-Type"=>"text/html;charset=utf-8", "Content-Length"=>"16", "X-XSS-Protection"=>"1; mode=block", "X-Content-Type-Options"=>"nosniff", "X-Frame-Options"=>"SAMEORIGIN"}, see debug logs for body
D, [2016-01-20T17:43:44.475492 #54580] DEBUG -- : body: {"name":"Hello"}
I, [2016-01-20T17:45:32.090595 #55763]  INFO -- : Running example 'Verifying a pact between Zoo App and Animal Service Given an panda exists a request for an panda with GET /panda returns a response which has status code 200'
I, [2016-01-20T17:45:32.090729 #55763]  INFO -- : Sending GET request to path: "/panda" with headers: {}, see debug logs for body
D, [2016-01-20T17:45:32.090750 #55763] DEBUG -- : body :
I, [2016-01-20T17:45:32.100864 #55763]  INFO -- : Received response with status: 200, headers: {"Content-Type"=>"text/html;charset=utf-8", "Content-Length"=>"16", "X-XSS-Protection"=>"1; mode=block", "X-Content-Type-Options"=>"nosniff", "X-Frame-Options"=>"SAMEORIGIN"}, see debug logs for body
D, [2016-01-20T17:45:32.100907 #55763] DEBUG -- : body: {"name":"Hello"}
I, [2016-01-20T17:48:10.452991 #56169]  INFO -- : Running example 'Verifying a pact between Zoo App and Animal Service Given an panda exists a request for an panda with GET /panda returns a response which has status code 200'
I, [2016-01-20T17:48:10.453110 #56169]  INFO -- : Sending GET request to path: "/panda" with headers: {}, see debug logs for body
D, [2016-01-20T17:48:10.453146 #56169] DEBUG -- : body :
I, [2016-01-20T17:48:10.464232 #56169]  INFO -- : Received response with status: 200, headers: {"Content-Type"=>"text/html;charset=utf-8", "X-XSS-Protection"=>"1; mode=block", "X-Content-Type-Options"=>"nosniff", "X-Frame-Options"=>"SAMEORIGIN", "Content-Length"=>"17"}, see debug logs for body
D, [2016-01-20T17:48:10.464280 #56169] DEBUG -- : body: ["name", "Hello"]
I, [2016-01-20T17:51:07.287869 #56579]  INFO -- : Running example 'Verifying a pact between Zoo App and Animal Service Given an panda exists a request for an panda with GET /panda returns a response which has status code 200'
I, [2016-01-20T17:51:07.287989 #56579]  INFO -- : Sending GET request to path: "/panda" with headers: {}, see debug logs for body
D, [2016-01-20T17:51:07.288061 #56579] DEBUG -- : body :
I, [2016-01-20T17:51:07.298579 #56579]  INFO -- : Received response with status: 200, headers: {"Content-Type"=>"text/html;charset=utf-8", "X-XSS-Protection"=>"1; mode=block", "X-Content-Type-Options"=>"nosniff", "X-Frame-Options"=>"SAMEORIGIN", "Content-Length"=>"16"}, see debug logs for body
D, [2016-01-20T17:51:07.298632 #56579] DEBUG -- : body: [:name, "Hello"]
I, [2016-01-20T17:51:22.122017 #56972]  INFO -- : Running example 'Verifying a pact between Zoo App and Animal Service Given an panda exists a request for an panda with GET /panda returns a response which has status code 200'
I, [2016-01-20T17:51:22.122138 #56972]  INFO -- : Sending GET request to path: "/panda" with headers: {}, see debug logs for body
D, [2016-01-20T17:51:22.122159 #56972] DEBUG -- : body :
I, [2016-01-20T17:51:22.132364 #56972]  INFO -- : Received response with status: 200, headers: {"Content-Type"=>"text/html;charset=utf-8", "Content-Length"=>"16", "X-XSS-Protection"=>"1; mode=block", "X-Content-Type-Options"=>"nosniff", "X-Frame-Options"=>"SAMEORIGIN"}, see debug logs for body
D, [2016-01-20T17:51:22.132409 #56972] DEBUG -- : body: {"name":"Hello"}
I, [2016-01-20T17:52:51.235256 #57770]  INFO -- : Running example 'Verifying a pact between Zoo App and Animal Service Given an panda exists a request for an panda with GET /panda returns a response which has status code 200'
I, [2016-01-20T17:52:51.235611 #57770]  INFO -- : Sending GET request to path: "/panda" with headers: {}, see debug logs for body
D, [2016-01-20T17:52:51.235642 #57770] DEBUG -- : body :
I, [2016-01-20T17:52:51.251462 #57770]  INFO -- : Received response with status: 200, headers: {"Content-Type"=>"text/html;charset=utf-8", "X-XSS-Protection"=>"1; mode=block", "X-Content-Type-Options"=>"nosniff", "X-Frame-Options"=>"SAMEORIGIN", "Content-Length"=>"16"}, see debug logs for body
D, [2016-01-20T17:52:51.251513 #57770] DEBUG -- : body: [:name, "Hello"]
I, [2016-01-20T17:53:02.971643 #58163]  INFO -- : Running example 'Verifying a pact between Zoo App and Animal Service Given an panda exists a request for an panda with GET /panda returns a response which has status code 200'
I, [2016-01-20T17:53:02.971766 #58163]  INFO -- : Sending GET request to path: "/panda" with headers: {}, see debug logs for body
D, [2016-01-20T17:53:02.971795 #58163] DEBUG -- : body :
I, [2016-01-20T17:53:02.982554 #58163]  INFO -- : Received response with status: 200, headers: {"Content-Type"=>"text/html;charset=utf-8", "X-XSS-Protection"=>"1; mode=block", "X-Content-Type-Options"=>"nosniff", "X-Frame-Options"=>"SAMEORIGIN", "Content-Length"=>"17"}, see debug logs for body
D, [2016-01-20T17:53:02.982603 #58163] DEBUG -- : body: ["name", "Hello"]
I, [2016-01-20T17:59:28.132627 #59797]  INFO -- : Running example 'Verifying a pact between Zoo App and Animal Service Given an panda exists a request for an panda with GET /panda returns a response which has status code 200'
I, [2016-01-20T17:59:28.133008 #59797]  INFO -- : Sending GET request to path: "/panda" with headers: {}, see debug logs for body
D, [2016-01-20T17:59:28.133080 #59797] DEBUG -- : body :
I, [2016-01-20T17:59:28.150368 #59797]  INFO -- : Received response with status: 200, headers: {"Content-Type"=>"application/json", "Content-Length"=>"16", "X-Content-Type-Options"=>"nosniff"}, see debug logs for body
D, [2016-01-20T17:59:28.150425 #59797] DEBUG -- : body: {"name":"Hello"}
I, [2016-01-20T18:00:00.152045 #60583]  INFO -- : Running example 'Verifying a pact between Zoo App and Animal Service Given an panda exists a request for an panda with GET /panda returns a response which has status code 200'
I, [2016-01-20T18:00:00.152206 #60583]  INFO -- : Sending GET request to path: "/panda" with headers: {}, see debug logs for body
D, [2016-01-20T18:00:00.152249 #60583] DEBUG -- : body :
I, [2016-01-20T18:00:00.165002 #60583]  INFO -- : Received response with status: 200, headers: {"Content-Type"=>"application/json", "Content-Length"=>"22", "X-Content-Type-Options"=>"nosniff"}, see debug logs for body
D, [2016-01-20T18:00:00.165066 #60583] DEBUG -- : body: "{\"name\":\"Hello\"}"
I, [2016-01-20T18:00:18.315469 #60977]  INFO -- : Running example 'Verifying a pact between Zoo App and Animal Service Given an panda exists a request for an panda with GET /panda returns a response which has status code 200'
I, [2016-01-20T18:00:18.315649 #60977]  INFO -- : Sending GET request to path: "/panda" with headers: {}, see debug logs for body
D, [2016-01-20T18:00:18.315735 #60977] DEBUG -- : body :
I, [2016-01-20T18:00:18.331312 #60977]  INFO -- : Received response with status: 200, headers: {"Content-Type"=>"application/json", "Content-Length"=>"16", "X-Content-Type-Options"=>"nosniff"}, see debug logs for body
D, [2016-01-20T18:00:18.331397 #60977] DEBUG -- : body: {"name":"Hello"}
I, [2016-01-20T20:33:01.313990 #5391]  INFO -- : Running example 'Verifying a pact between Zoo App and Animal Service Given an panda exists a request for an panda with GET /panda returns a response which has status code 200'
I, [2016-01-20T20:33:01.314615 #5391]  INFO -- : Running example 'Verifying a pact between Zoo App and Animal Service Given an panda exists a request for an panda with GET /panda returns a response which has a matching body'
I, [2016-01-20T20:33:01.314921 #5391]  INFO -- : Running example 'Verifying a pact between Zoo App and Animal Service Given an panda exists a request for an panda with GET /panda returns a response which includes headers "Content-Type" with value "application/json"'
I, [2016-01-20T20:34:24.766634 #5783]  INFO -- : Running example 'Verifying a pact between Zoo App and Animal Service Given an panda exists a request for an panda with GET /panda returns a response which has status code 200'
I, [2016-01-20T20:34:24.766752 #5783]  INFO -- : Sending GET request to path: "/panda" with headers: {}, see debug logs for body
D, [2016-01-20T20:34:24.766772 #5783] DEBUG -- : body :
I, [2016-01-20T20:34:24.788358 #5783]  INFO -- : Received response with status: 200, headers: {"Content-Type"=>"application/json", "Content-Length"=>"16", "X-Content-Type-Options"=>"nosniff"}, see debug logs for body
D, [2016-01-20T20:34:24.788422 #5783] DEBUG -- : body: {"name":"Hello"}
I, [2016-01-20T21:00:57.651807 #6206]  INFO -- : Running example 'Verifying a pact between Zoo App and Animal Service Given an panda exists a request for an panda with GET /panda returns a response which has status code 200'
I, [2016-01-20T21:00:57.651936 #6206]  INFO -- : Sending GET request to path: "/panda" with headers: {}, see debug logs for body
D, [2016-01-20T21:00:57.651958 #6206] DEBUG -- : body :
I, [2016-01-20T21:00:57.663419 #6206]  INFO -- : Received response with status: 200, headers: {"Content-Type"=>"application/json", "Content-Length"=>"16", "X-Content-Type-Options"=>"nosniff"}, see debug logs for body
D, [2016-01-20T21:00:57.663468 #6206] DEBUG -- : body: {"name":"Hello"}
I, [2016-01-21T09:17:24.103867 #27328]  INFO -- : Running example 'Verifying a pact between Zoo App and Animal Service Given an panda exists a request for an panda with GET /panda returns a response which has status code 200'
I, [2016-01-21T09:17:24.104368 #27328]  INFO -- : Sending GET request to path: "/panda" with headers: {}, see debug logs for body
D, [2016-01-21T09:17:24.104428 #27328] DEBUG -- : body :
I, [2016-01-21T09:17:24.148320 #27328]  INFO -- : Received response with status: 200, headers: {"Content-Type"=>"application/json", "Content-Length"=>"16", "X-Content-Type-Options"=>"nosniff"}, see debug logs for body
D, [2016-01-21T09:17:24.148374 #27328] DEBUG -- : body: {"name":"Hello"}
